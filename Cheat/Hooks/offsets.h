namespace O {
	namespace BaseNetworkable {
		constexpr auto JustCreatedk__BackingField = 0x18;
		constexpr auto entityDestroy = 0x20;
		constexpr auto postNetworkUpdateComponents = 0x28;
		constexpr auto parentEntity = 0x30;
		constexpr auto children = 0x40;
		constexpr auto prefabID = 0x48;
		constexpr auto globalBroadcast = 0x4c;
		constexpr auto net = 0x50;
		constexpr auto IsDestroyedk__BackingField = 0x58;
		constexpr auto _prefabName = 0x60;
		constexpr auto _prefabNameWithoutExtension = 0x68;

		constexpr auto get_JustCreated = 0x301160;
		constexpr auto set_JustCreated = 0x301350;
		constexpr auto ClientSpawn = 0x2ff8c0;
		constexpr auto ClientOnEnable = 0x2ff840;
		constexpr auto ClientInit = 0x2ff650;
		constexpr auto OnNetworkUpdate = 0x300c30;
		constexpr auto PreNetworkUpdate = 0x2f4fd0;
		constexpr auto PostNetworkUpdate = 0x2f4fd0;
		constexpr auto ShouldDestroyWithGroup = 0x2f6d70;
		constexpr auto ShouldDestroyImmediately = 0x2f4190;
		constexpr auto NetworkDestroy = 0x3007c0;
		constexpr auto DoClientDestroy = 0x2ffc90;
		constexpr auto DoNetworkDestroy = 0x2f4fd0;
		constexpr auto BroadcastOnPostNetworkUpdate = 0x2ff430;
		constexpr auto PostProcess = 0x300db0;
		constexpr auto GetParentEntity = 0x3000f0;
		constexpr auto HasParent = 0x300100;
		constexpr auto AddChild = 0x2ff3a0;
		constexpr auto OnChildAdded = 0x2f4fd0;
		constexpr auto RemoveChild = 0x300e30;
		constexpr auto OnChildRemoved = 0x2f4fd0;
		constexpr auto get_gameManager = 0x301280;
		constexpr auto get_prefabAttribute = 0x3012e0;
		constexpr auto get_IsDestroyed = 0x301150;
		constexpr auto set_IsDestroyed = 0x301340;
		constexpr auto get_PrefabName = 0x301170;
		constexpr auto get_ShortPrefabName = 0x3011f0;
		constexpr auto GetNetworkPosition = 0x300060;
		constexpr auto GetNetworkRotation = 0x3000b0;
		constexpr auto InvokeString = 0x300110;
		constexpr auto LookupPrefab = 0x300720;
		constexpr auto EqualNetID = 0x2fffa0;
		constexpr auto ResetState = 0x300ea0;
		constexpr auto InitShared = 0x2f4fd0;
		constexpr auto PreInitShared = 0x2f4fd0;
		constexpr auto PostInitShared = 0x2f4fd0;
		constexpr auto DestroyShared = 0x2f4fd0;
		constexpr auto OnNetworkGroupEnter = 0x2f4fd0;
		constexpr auto OnNetworkGroupLeave = 0x2f4fd0;
		constexpr auto OnNetworkGroupChange = 0x300af0;
		constexpr auto OnNetworkSubscribersEnter = 0x2f4fd0;
		constexpr auto OnNetworkSubscribersLeave = 0x2f4fd0;
		constexpr auto EntityDestroy = 0x2ffeb0;
		constexpr auto DoEntityDestroy = 0x2ffd50;
		constexpr auto SpawnShared = 0x300ef0;
		constexpr auto Load = 0x300360;
		constexpr auto get_isServer = 0x2f4190;
		constexpr auto get_isClient = 0x2f6d70;
		constexpr auto OnRpcMessage = 0x2f4190;
		constexpr auto ctor = 0x3010b0;
		constexpr auto cctor = 0x301000;
	};

	namespace BasePlayer {
		constexpr auto __menuOption_Climb = 0x238;
		constexpr auto __menuOption_Drink = 0x290;
		constexpr auto __menuOption_InviteToTeam = 0x2e8;
		constexpr auto __menuOption_Menu_AssistPlayer = 0x340;
		constexpr auto __menuOption_Menu_LootPlayer = 0x398;
		constexpr auto __menuOption_Promote = 0x3f0;
		constexpr auto __menuOption_SaltWater = 0x448;
		constexpr auto currentViewMode = 0x4a0;
		constexpr auto selectedViewMode = 0x4a4;
		constexpr auto lastRevivePoint = 0x4a8;
		constexpr auto lastReviveDirection = 0x4b4;
		constexpr auto playerModel = 0x4c0;
		constexpr auto Frozen = 0x4c8;
		constexpr auto voiceRecorder = 0x4d0;
		constexpr auto voiceSpeaker = 0x4d8;
		constexpr auto input = 0x4e0;
		constexpr auto movement = 0x4e8;
		constexpr auto collision = 0x4f0;
		constexpr auto emptyState = 0x8;
		constexpr auto _lookingAt = 0x4f8;
		constexpr auto _lookingAtEntity = 0x500;
		constexpr auto _lookingAtCollider = 0x508;
		constexpr auto lookingAtPointk__BackingField = 0x510;
		constexpr auto wakeTime = 0x51c;
		constexpr auto needsClothesRebuild = 0x520;
		constexpr auto wasSleeping = 0x521;
		constexpr auto wokeUpBefore = 0x522;
		constexpr auto wasDead = 0x523;
		constexpr auto lastClothesHash = 0x524;
		constexpr auto visiblePlayerList = 0x10;
		constexpr auto craftMode = 0x18;
		constexpr auto IsWearingDiveGogglesk__BackingField = 0x528;
		constexpr auto GestureViewModel = 0x530;
		constexpr auto timeSinceUpdatedLookingAt = 0x538;
		constexpr auto nextTopologyTestTime = 0x53c;
		constexpr auto usePressTime = 0x540;
		constexpr auto useHeldTime = 0x544;
		constexpr auto lookingAtTest = 0x548;
		constexpr auto lastDeathTimeClient = 0x1c;
		constexpr auto cachedWaterDrinkingPoint = 0x550;
		constexpr auto gestureList = 0x560;
		constexpr auto gestureFinishedTime = 0x568;
		constexpr auto blockHeldInputTimer = 0x56c;
		constexpr auto currentGesture = 0x570;
		constexpr auto disabledHeldEntity = 0x578;
		constexpr auto nextGestureMenuOpenTime = 0x580;
		constexpr auto lastGestureCancel = 0x584;
		constexpr auto client_lastHelloTime = 0x588;
		constexpr auto currentTeam = 0x590;
		constexpr auto MaxTeamSizeToast = 0x20;
		constexpr auto clientTeam = 0x598;
		constexpr auto lastReceivedTeamTime = 0x5a0;
		constexpr auto lastPresenceTeamId = 0x5a8;
		constexpr auto lastPresenceTeamSize = 0x5b0;
		constexpr auto playerGroupKey = 0x5b8;
		constexpr auto playerGroupSizeKey = 0x5c0;
		constexpr auto clActiveItem = 0x5c8;
		constexpr auto ClientCurrentMapNote = 0x5d0;
		constexpr auto ClientCurrentDeathNote = 0x5d8;
		constexpr auto missions = 0x5e0;
		constexpr auto _activeMission = 0x5e8;
		constexpr auto modelState = 0x5f0;
		constexpr auto mounted = 0x5f8;
		constexpr auto nextSeatSwapTime = 0x608;
		constexpr auto PetEntity = 0x610;
		constexpr auto lastPetCommandIssuedTime = 0x618;
		constexpr auto PetPrefabID = 0x61c;
		constexpr auto PetID = 0x620;
		constexpr auto PetWheelHasBeenOpened = 0x28;
		constexpr auto cachedBuildingPrivilegeTime = 0x624;
		constexpr auto cachedBuildingPrivilege = 0x628;
		constexpr auto maxProjectileID = 0x630;
		constexpr auto lastUpdateTime = 0x634;
		constexpr auto cachedThreatLevel = 0x638;
		constexpr auto serverTickRate = 0x63c;
		constexpr auto clientTickRate = 0x640;
		constexpr auto serverTickInterval = 0x644;
		constexpr auto clientTickInterval = 0x648;
		constexpr auto lastSentTickTime = 0x64c;
		constexpr auto lastSentTick = 0x650;
		constexpr auto nextVisThink = 0x658;
		constexpr auto lastTimeSeen = 0x65c;
		constexpr auto debugPrevVisible = 0x660;
		constexpr auto fallDamageEffect = 0x668;
		constexpr auto drownEffect = 0x670;
		constexpr auto playerFlags = 0x678;
		constexpr auto eyes = 0x680;
		constexpr auto inventory = 0x688;
		constexpr auto blueprints = 0x690;
		constexpr auto metabolism = 0x698;
		constexpr auto modifiers = 0x6a0;
		constexpr auto playerCollider = 0x6a8;
		constexpr auto Belt = 0x6b0;
		constexpr auto playerRigidbody = 0x6b8;
		constexpr auto userID = 0x6c0;
		constexpr auto UserIDString = 0x6c8;
		constexpr auto gamemodeteam = 0x6d0;
		constexpr auto reputation = 0x6d4;
		constexpr auto _displayName = 0x6d8;
		constexpr auto _lastSetName = 0x6e0;
		constexpr auto playerColliderStanding = 0x6e8;
		constexpr auto playerColliderDucked = 0x6fc;
		constexpr auto playerColliderCrawling = 0x710;
		constexpr auto playerColliderLyingDown = 0x724;
		constexpr auto cachedProtection = 0x738;
		constexpr auto oldCameraFix = 0x29;
		constexpr auto lastHeadshotSoundTime = 0x740;
		constexpr auto nextColliderRefreshTime = 0x744;
		constexpr auto clothingBlocksAiming = 0x748;
		constexpr auto clothingMoveSpeedReduction = 0x74c;
		constexpr auto clothingWaterSpeedBonus = 0x750;
		constexpr auto clothingAccuracyBonus = 0x754;
		constexpr auto equippingBlocked = 0x758;
		constexpr auto eggVision = 0x75c;
		constexpr auto activeTelephone = 0x760;
		constexpr auto designingAIEntity = 0x768;

		constexpr auto GetMenuOptions = 0x311f20;
		constexpr auto get_HasMenuOptions = 0x32b060;
		constexpr auto OnRpcMessage = 0x319980;
		constexpr auto CanBeLooted = 0x3080b0;
		constexpr auto get_LootPanelTitle = 0x32b580;
		constexpr auto Menu_LootPlayer = 0x318980;
		constexpr auto Menu_LootPlayer_ShowIf = 0x318960;
		constexpr auto RPC_OpenLootPanel = 0x323490;
		constexpr auto PlayOpenSound = 0x3217c0;
		constexpr auto InFirstPersonMode = 0x3147b0;
		constexpr auto UpdateViewMode = 0x329370;
		constexpr auto get_idealViewMode = 0x32b760;
		constexpr auto get_shouldDrawBody = 0x32bae0;
		constexpr auto OnViewModeChanged = 0x321270;
		constexpr auto ModifyCamera = 0x3189f0;
		constexpr auto Menu_AssistPlayer = 0x318920;
		constexpr auto Menu_AssistPlayer_TimeStart = 0x3188e0;
		constexpr auto Menu_AssistPlayer_ShowIf = 0x318650;
		constexpr auto get_lookingAt = 0x32ba90;
		constexpr auto get_lookingAtEntity = 0x32ba20;
		constexpr auto get_lookingAtCollider = 0x32b9d0;
		constexpr auto get_lookingAtPoint = 0x32ba70;
		constexpr auto set_lookingAtPoint = 0x32bde0;
		constexpr auto GetExtrapolationTime = 0x311280;
		constexpr auto GetLocalVelocityClient = 0x311d20;
		constexpr auto ClientInit = 0x309b80;
		constexpr auto CreatePlayerModel = 0x30e7a0;
		constexpr auto CreatePlayerCollision = 0x30e5b0;
		constexpr auto CreatePlayerMovement = 0x30ed00;
		constexpr auto InitLocalPlayer = 0x3147e0;
		constexpr auto InitRemotePlayer = 0x314ac0;
		constexpr auto HasLocalControls = 0x313e60;
		constexpr auto SetNetworkPosition = 0x3260e0;
		constexpr auto SetNetworkRotation = 0x326190;
		constexpr auto DoClientDestroy = 0x30f180;
		constexpr auto PostNetworkUpdate = 0x321fb0;
		constexpr auto OnFirstWakeUp = 0x3193a0;
		constexpr auto get_TimeAwake = 0x32b5a0;
		constexpr auto CL_ClothingChanged = 0x307690;
		constexpr auto ForceRebuild = 0x3107d0;
		constexpr auto RebuildWorldModel = 0x323930;
		constexpr auto SetDefaultFootstepEffects = 0x325860;
		constexpr auto OnSignal = 0x320cf0;
		constexpr auto FindBone = 0x30fe70;
		constexpr auto GetBones = 0x3107f0;
		constexpr auto ShouldLerp = 0x3269a0;
		constexpr auto get_VisiblePlayerList = 0x32b600;
		constexpr auto ClearVisibility = 0x3096c0;
		constexpr auto RegisterForVisibility = 0x3240f0;
		constexpr auto UnregisterFromVisibility = 0x3270d0;
		constexpr auto FindByID_Clientside = 0x30ff70;
		constexpr auto Find_Clientside = 0x310140;
		constexpr auto GetRandomFloatBasedOnUserID = 0x313680;
		constexpr auto DisplayHealthInfo = 0x2f4190;
		constexpr auto ShouldDestroyWithGroup = 0x326970;
		constexpr auto SetInheritedVelocity = 0x325d30;
		constexpr auto GetPerformanceReport = 0x313580;
		constexpr auto OnBecameRagdoll = 0x318df0;
		constexpr auto OnVoiceData = 0x321780;
		constexpr auto RecieveAchievement = 0x323cc0;
		constexpr auto CraftMode = 0x30e340;
		constexpr auto StartDesigningAI = 0x326c80;
		constexpr auto OnDebugAIEventTriggeredStateChange = 0x319160;
		constexpr auto ClientOnEnable = 0x30ab20;
		constexpr auto Client_OnRepairFailedResources = 0x30cde0;
		constexpr auto get_IsWearingDiveGoggles = 0x32b570;
		constexpr auto set_IsWearingDiveGoggles = 0x32bc90;
		constexpr auto UpdateClothesIfNeeded = 0x327220;
		constexpr auto MakeVisible = 0x318360;
		constexpr auto ClientUpdate_Sleeping = 0x30be90;
		constexpr auto ClientUpdate = 0x30c280;
		constexpr auto RebuildClothingItems = 0x323710;
		constexpr auto UpdateClothingItems = 0x327710;
		constexpr auto UpdateHolsterOffsets = 0x327e40;
		constexpr auto PostLateClientCycle = 0x321ef0;
		constexpr auto IsLocalPlayer = 0x3163f0;
		constexpr auto ClientUpdateLocalPlayer = 0x30ac80;
		constexpr auto UpdateTopologyStats = 0x329210;
		constexpr auto ClientTick = 0x30abd0;
		constexpr auto DoMovement = 0x30f470;
		constexpr auto MountableOverrideViewAngles = 0x318ae0;
		constexpr auto BlockSprint = 0x306b80;
		constexpr auto BlockJump = 0x306ae0;
		constexpr auto ClientInput = 0x30a070;
		constexpr auto UseAction = 0x3296d0;
		constexpr auto GetInteractionEntity = 0x311810;
		constexpr auto QuickUse = 0x3232f0;
		constexpr auto LongUse = 0x3182a0;
		constexpr auto UseStop = 0x3299a0;
		constexpr auto UpdateLookingAt = 0x327fd0;
		constexpr auto ResetLookingAt = 0x324540;
		constexpr auto SetLookingAt = 0x325ec0;
		constexpr auto CheckLookingAtVisible = 0x308ec0;
		constexpr auto FindVehicleParentFor = 0x310000;
		constexpr auto OnDied = 0x3192d0;
		constexpr auto OnRespawnInformation = 0x3196d0;
		constexpr auto RequestRespawnUpdates = 0x3243f0;
		constexpr auto OnLand = 0x3194e0;
		constexpr auto StartLoading = 0x326e10;
		constexpr auto FinishLoading = 0x3103d0;
		constexpr auto FinishedLoadingRoutine = 0x3104a0;
		constexpr auto DirectionalDamage = 0x30efe0;
		constexpr auto UnlockedBlueprint = 0x327060;
		constexpr auto CheckForRespawnInfo = 0x308e50;
		constexpr auto UpdateRichPresenceState = 0x328f70;
		constexpr auto HandleCompanionPairingResult = 0x313960;
		constexpr auto UpdateWaterDrinkingPoint = 0x3293b0;
		constexpr auto GetWaterDrinkingPoint = 0x313940;
		constexpr auto Drink = 0x30f700;
		constexpr auto Drink_ShowIf = 0x30f530;
		constexpr auto SaltWater = 0x2f4fd0;
		constexpr auto SaltWater_ShowIf = 0x3246c0;
		constexpr auto Climb = 0x30dae0;
		constexpr auto Climb_ShowIf = 0x30d810;
		constexpr auto HasPlayerFlag = 0x313ed0;
		constexpr auto get_IsReceivingSnapshot = 0x32b560;
		constexpr auto get_IsAdmin = 0x32b4a0;
		constexpr auto get_IsDeveloper = 0x32b530;
		constexpr auto get_IsAiming = 0x32b4b0;
		constexpr auto get_IsFlying = 0x32b540;
		constexpr auto get_IsConnected = 0x32b4c0;
		constexpr auto get_InGesture = 0x32b3f0;
		constexpr auto get_CurrentGestureBlocksMovement = 0x32af40;
		constexpr auto get_CurrentGestureIsDance = 0x32af80;
		constexpr auto get_CurrentGestureIsFullBody = 0x32afc0;
		constexpr auto get_InGestureCancelCooldown = 0x32b3c0;
		constexpr auto SetGestureMenuOpen = 0x325930;
		constexpr auto RequestStartGesture = 0x324490;
		constexpr auto Client_StartGesture = 0x30d340;
		constexpr auto ProcessDanceAction = 0x322680;
		constexpr auto SayingHello = 0x324930;
		constexpr auto ProcessGestureStart = 0x322b70;
		constexpr auto EndGesture = 0x30fa20;
		constexpr auto EndLocalGesture = 0x30fac0;
		constexpr auto EndGestureShared = 0x30f8b0;
		constexpr auto HideHeldEntity = 0x314640;
		constexpr auto CancelGesture = 0x308b90;
		constexpr auto RemoteGestureCancel = 0x3241e0;
		constexpr auto CancelGestureInput = 0x308770;
		constexpr auto ClearGestureCooldown = 0x309570;
		constexpr auto ConVarRequestStartGesture = 0x30e0e0;
		constexpr auto Client_RemoteCancelledGesture = 0x30d2f0;
		constexpr auto IsGestureBlocked = 0x315d50;
		constexpr auto get_clientTeamLifetime = 0x32b670;
		constexpr auto CLIENT_ReceiveTeamInfo = 0x3071c0;
		constexpr auto UpdateSteamGroup = 0x328fc0;
		constexpr auto ClearSteamGroup = 0x3095a0;
		constexpr auto CLIENT_ClearTeam = 0x306c20;
		constexpr auto CLIENT_PendingInvite = 0x306dc0;
		constexpr auto InviteToTeam = 0x314b30;
		constexpr auto Promote = 0x323160;
		constexpr auto Menu_Promote_Start = 0x2f4fd0;
		constexpr auto Promote_ShowIf = 0x322d90;
		constexpr auto LocalPlayerIsLeader = 0x317db0;
		constexpr auto Invite_ShowIf = 0x315080;
		constexpr auto GetHeldEntity = 0x311370;
		constexpr auto GetHeldItem = 0x3115a0;
		constexpr auto GetHeldItemID = 0x311550;
		constexpr auto HeldEntityViewAngles = 0x314420;
		constexpr auto HeldEntityFrame = 0x313fb0;
		constexpr auto HeldEntityInput = 0x314180;
		constexpr auto HeldItemUse = 0x314540;
		constexpr auto HeldEntityStart = 0x314350;
		constexpr auto HeldEntityEnd = 0x313ee0;
		constexpr auto IsHostileItem = 0x316100;
		constexpr auto IsItemHoldRestricted = 0x316260;
		constexpr auto MapInfoOnEnable = 0x318410;
		constexpr auto Client_ReceiveMarkers = 0x30cfb0;
		constexpr auto Client_UpdateDeathMarker = 0x30d6e0;
		constexpr auto Client_AddNewDeathMarker = 0x30cca0;
		constexpr auto AddPointOfInterest = 0x305d60;
		constexpr auto ClearAllPointsOfInterest = 0x309420;
		constexpr auto ClearAllMapMarkers = 0x3092c0;
		constexpr auto HasAttemptedMission = 0x313a10;
		constexpr auto CanAcceptMission = 0x3079d0;
		constexpr auto IsMissionActive = 0x3164d0;
		constexpr auto HasCompletedMission = 0x313b80;
		constexpr auto HasFailedMission = 0x313cf0;
		constexpr auto SetActiveMission = 0x325840;
		constexpr auto GetActiveMission = 0x3107e0;
		constexpr auto HasActiveMission = 0x313a00;
		constexpr auto LoadMissions = 0x3172b0;
		constexpr auto OnModelState = 0x319640;
		constexpr auto OnModelStateChanged = 0x3195a0;
		constexpr auto get_isMounted = 0x32b900;
		constexpr auto get_isMountingHidingWeapon = 0x32b920;
		constexpr auto GetMounted = 0x313090;
		constexpr auto GetMountedVehicle = 0x313040;
		constexpr auto MarkSwapSeat = 0x318460;
		constexpr auto SwapSeatCooldown = 0x326e90;
		constexpr auto ClientUpdateMounted = 0x30ba60;
		constexpr auto CLIENT_SetPetPrefabID = 0x3075c0;
		constexpr auto CLIENT_SetPetPetLoadedStateIndex = 0x307410;
		constexpr auto LinkPet = 0x317160;
		constexpr auto SetPetMenuOpen = 0x3262a0;
		constexpr auto ClientIssuePetCommand = 0x30aa30;
		constexpr auto IsSleeping = 0x3167d0;
		constexpr auto IsSpectating = 0x3167e0;
		constexpr auto IsRelaxed = 0x3166f0;
		constexpr auto IsServerFalling = 0x3167c0;
		constexpr auto GetBuildingPrivilege = 0x310c00;
		constexpr auto CanBuild = 0x308380;
		constexpr auto IsBuildingBlocked = 0x315ad0;
		constexpr auto IsBuildingAuthed = 0x315690;
		constexpr auto CanPlaceBuildingPrivilege = 0x308510;
		constexpr auto NewProjectileID = 0x318b70;
		constexpr auto NewProjectileSeed = 0x318b80;
		constexpr auto SendProjectileAttack = 0x325590;
		constexpr auto SendProjectileRicochet = 0x3255e0;
		constexpr auto SendProjectileUpdate = 0x325630;
		constexpr auto Load = 0x317850;
		constexpr auto SpectatedPlayerHeadshot = 0x326bf0;
		constexpr auto GetThreatLevel = 0x313920;
		constexpr auto EnsureUpdated = 0x30fbe0;
		constexpr auto SetHostileLength = 0x325c80;
		constexpr auto SetWeaponDrawnDuration = 0x3268d0;
		constexpr auto ModifyInputState = 0x2f4fd0;
		constexpr auto ForcePositionToParentOffset = 0x310510;
		constexpr auto UpdateClientTickRate = 0x3271c0;
		constexpr auto ForcePositionTo = 0x310640;
		constexpr auto SendVoiceData = 0x325680;
		constexpr auto SendClientTick = 0x324ed0;
		constexpr auto NotifyUnderwearChange = 0x318be0;
		constexpr auto UpdatePlayerVisibilities = 0x328c70;
		constexpr auto TimeSinceSeen = 0x326ec0;
		constexpr auto SetNextVisThink = 0x326270;
		constexpr auto WantsVisUpdate = 0x32a4e0;
		constexpr auto IsAimingAt = 0x3152c0;
		constexpr auto UpdateCullingSpheres = 0x327b70;
		constexpr auto VisUpdateUsingCulling = 0x329b20;
		constexpr auto VisUpdateUsingRays = 0x329c30;
		constexpr auto LogDebugCull = 0x317f60;
		constexpr auto OnVisibilityChanged = 0x321480;
		constexpr auto VisUpdate = 0x32a050;
		constexpr auto VisPlayerArmed = 0x329a60;
		constexpr auto AnyPartVisible = 0x305ef0;
		constexpr auto CalcVisUpdateRate = 0x307890;
		constexpr auto PointSeePoint = 0x321c20;
		constexpr auto IsWounded = 0x316ac0;
		constexpr auto IsCrawling = 0x315b80;
		constexpr auto IsIncapacitated = 0x316250;
		constexpr auto ToPlayer = 0x326ee0;
		constexpr auto get_Connection = 0x32af30;
		constexpr auto get_displayName = 0x32b6c0;
		constexpr auto set_displayName = 0x32bca0;
		constexpr auto SanitizePlayerNameString = 0x324890;
		constexpr auto IsGod = 0x316030;
		constexpr auto GetNetworkRotation = 0x313120;
		constexpr auto CanInteract = 0x3084b0;
		constexpr auto StartHealth = 0x326df0;
		constexpr auto StartMaxHealth = 0x3217b0;
		constexpr auto MaxHealth = 0x3184a0;
		constexpr auto MaxVelocity = 0x318550;
		constexpr auto WorldSpaceBounds = 0x32a9d0;
		constexpr auto GetMountVelocity = 0x312f70;
		constexpr auto GetInheritedProjectileVelocity = 0x311690;
		constexpr auto GetInheritedThrowVelocity = 0x311750;
		constexpr auto GetInheritedDropVelocity = 0x3115d0;
		constexpr auto PreInitShared = 0x322220;
		constexpr auto DestroyShared = 0x30ef60;
		constexpr auto InSafeZone = 0x3147d0;
		constexpr auto LateClientCycle = 0x316ad0;
		constexpr auto ClientCycle = 0x309880;
		constexpr auto GetBounds = 0x310880;
		constexpr auto GetCenter = 0x310cb0;
		constexpr auto GetOffset = 0x313200;
		constexpr auto GetSize = 0x313780;
		constexpr auto GetHeight = 0x311350;
		constexpr auto GetRadius = 0x2feb00;
		constexpr auto GetJumpHeight = 0x311d10;
		constexpr auto TriggerPoint = 0x326f60;
		constexpr auto NoClipOffset = 0x318b90;
		constexpr auto NoClipRadius = 0x318bd0;
		constexpr auto MaxDeployDistance = 0x318490;
		constexpr auto ClientUpdatePersistantData = 0x30be60;
		constexpr auto GetMinSpeed = 0x312f40;
		constexpr auto GetMaxSpeed = 0x311ef0;
		constexpr auto GetSpeed = 0x3137e0;
		constexpr auto OnAttacked = 0x318c20;
		constexpr auto EnablePlayerCollider = 0x30f850;
		constexpr auto DisablePlayerCollider = 0x30f120;
		constexpr auto RefreshColliderSize = 0x323de0;
		constexpr auto SetPlayerRigidbodyState = 0x3268b0;
		constexpr auto AddPlayerRigidbody = 0x305be0;
		constexpr auto RemovePlayerRigidbody = 0x3242c0;
		constexpr auto IsEnsnared = 0x315c60;
		constexpr auto IsAttacking = 0x315490;
		constexpr auto CanAttack = 0x307e60;
		constexpr auto OnLadder = 0x319450;
		constexpr auto IsSwimming = 0x316a70;
		constexpr auto IsHeadUnderwater = 0x3160b0;
		constexpr auto IsOnGround = 0x316640;
		constexpr auto IsRunning = 0x316700;
		constexpr auto IsDucked = 0x315ba0;
		constexpr auto RecentlyTeleported = 0x323c20;
		constexpr auto ShowToast = 0x326a00;
		constexpr auto ChatMessage = 0x308c60;
		constexpr auto ConsoleMessage = 0x30e290;
		constexpr auto PenetrationResistance = 0x3217b0;
		constexpr auto ScaleDamage = 0x324c40;
		constexpr auto UpdateMoveSpeedFromClothing = 0x3288a0;
		constexpr auto UpdateProtectionFromClothing = 0x328e50;
		constexpr auto Categorize = 0x308c30;
		constexpr auto ToString = 0x326ef0;
		constexpr auto GetDebugStatus = 0x310f40;
		constexpr auto GetItem = 0x311c60;
		constexpr auto get_Traits = 0x32b5e0;
		constexpr auto WaterFactor = 0x32a500;
		constexpr auto AirFactor = 0x305e40;
		constexpr auto GetOxygenTime = 0x313250;
		constexpr auto ShouldInheritNetworkGroup = 0x3167e0;
		constexpr auto AnyPlayersVisibleToEntity = 0x306530;
		constexpr auto IsStandingOnEntity = 0x3167f0;
		constexpr auto SetActiveTelephone = 0x325850;
		constexpr auto get_HasActiveTelephone = 0x32b000;
		constexpr auto get_IsDesigningAI = 0x32b4d0;
		constexpr auto ClearDesigningAIEntity = 0x309550;
		constexpr auto ctor = 0x32adb0;
		constexpr auto cctor = 0x32ac60;
	};

	namespace BaseMovement {
		constexpr auto adminCheat = 0x18;
		constexpr auto adminSpeed = 0x1c;
		constexpr auto Ownerk__BackingField = 0x20;
		constexpr auto InheritedVelocityk__BackingField = 0x28;
		constexpr auto TargetMovementk__BackingField = 0x34;
		constexpr auto Runningk__BackingField = 0x40;
		constexpr auto Duckingk__BackingField = 0x44;
		constexpr auto Crawlingk__BackingField = 0x48;
		constexpr auto Groundedk__BackingField = 0x4c;
		constexpr auto lastTeleportedTime = 0x50;

		constexpr auto get_Owner = 0x2ff000;
		constexpr auto set_Owner = 0x2feeb0;
		constexpr auto get_InheritedVelocity = 0x2fefa0;
		constexpr auto set_InheritedVelocity = 0x2ff0a0;
		constexpr auto get_TargetMovement = 0x2ff050;
		constexpr auto set_TargetMovement = 0x2ff0c0;
		constexpr auto get_Running = 0x2ff040;
		constexpr auto set_Running = 0x2ff0b0;
		constexpr auto get_Ducking = 0x2fef80;
		constexpr auto set_Ducking = 0x2ff080;
		constexpr auto get_Crawling = 0x2fef70;
		constexpr auto set_Crawling = 0x2ff070;
		constexpr auto get_Grounded = 0x2fef90;
		constexpr auto set_Grounded = 0x2ff090;
		constexpr auto get_IsRunning = 0x2feff0;
		constexpr auto get_IsDucked = 0x2fefd0;
		constexpr auto get_IsCrawling = 0x2fefc0;
		constexpr auto get_IsGrounded = 0x2fefe0;
		constexpr auto CurrentVelocity = 0x2febe0;
		constexpr auto CurrentMoveSpeed = 0x2fcd90;
		constexpr auto GetCollider = 0x2fc9e0;
		constexpr auto Init = 0x2feeb0;
		constexpr auto BlockJump = 0x2f4fd0;
		constexpr auto BlockSprint = 0x2f4fd0;
		constexpr auto get_RecentlyTeleported = 0x2ff010;
		constexpr auto ClientInput = 0x2f4fd0;
		constexpr auto DoFixedUpdate = 0x2f4fd0;
		constexpr auto FrameUpdate = 0x2fed60;
		constexpr auto TeleportTo = 0x2feec0;
		constexpr auto Push = 0x2f4fd0;
		constexpr auto SetParent = 0x2f4fd0;
		constexpr auto FixedUpdate = 0x2fec50;
		constexpr auto PlayerAttemptedMount = 0x2f4fd0;
		constexpr auto PlayerCompletedMount = 0x2f4fd0;
		constexpr auto ctor = 0x2fef60;
	};

	namespace BaseProjectile {
		constexpr auto NoiseRadius = 0x278;
		constexpr auto damageScale = 0x27c;
		constexpr auto distanceScale = 0x280;
		constexpr auto projectileVelocityScale = 0x284;
		constexpr auto automatic = 0x288;
		constexpr auto usableByTurret = 0x289;
		constexpr auto turretDamageScale = 0x28c;
		constexpr auto attackFX = 0x290;
		constexpr auto silencedAttack = 0x298;
		constexpr auto muzzleBrakeAttack = 0x2a0;
		constexpr auto MuzzlePoint = 0x2a8;
		constexpr auto reloadTime = 0x2b0;
		constexpr auto canUnloadAmmo = 0x2b4;
		constexpr auto primaryMagazine = 0x2b8;
		constexpr auto fractionalReload = 0x2c0;
		constexpr auto reloadStartDuration = 0x2c4;
		constexpr auto reloadFractionDuration = 0x2c8;
		constexpr auto reloadEndDuration = 0x2cc;
		constexpr auto aimSway = 0x2d0;
		constexpr auto aimSwaySpeed = 0x2d4;
		constexpr auto recoil = 0x2d8;
		constexpr auto aimconeCurve = 0x2e0;
		constexpr auto aimCone = 0x2e8;
		constexpr auto hipAimCone = 0x2ec;
		constexpr auto aimconePenaltyPerShot = 0x2f0;
		constexpr auto aimConePenaltyMax = 0x2f4;
		constexpr auto aimconePenaltyRecoverTime = 0x2f8;
		constexpr auto aimconePenaltyRecoverDelay = 0x2fc;
		constexpr auto stancePenaltyScale = 0x300;
		constexpr auto hasADS = 0x304;
		constexpr auto noAimingWhileCycling = 0x305;
		constexpr auto manualCycle = 0x306;
		constexpr auto needsCycle = 0x307;
		constexpr auto isCycling = 0x308;
		constexpr auto aiming = 0x309;
		constexpr auto resetDuration = 0x30c;
		constexpr auto numShotsFired = 0x310;
		constexpr auto nextReloadTime = 0x314;
		constexpr auto startReloadTime = 0x318;
		constexpr auto stancePenalty = 0x31c;
		constexpr auto aimconePenalty = 0x320;
		constexpr auto isReloading = 0x324;
		constexpr auto swaySampleTime = 0x328;
		constexpr auto lastShotTime = 0x32c;
		constexpr auto reloadPressTime = 0x330;
		constexpr auto ammoTypePreReload = 0x338;
		constexpr auto fractionalReloadDesiredCount = 0x340;
		constexpr auto fractionalReloadNumAdded = 0x344;
		constexpr auto triggerReady = 0x348;
		constexpr auto nextHeightCheckTime = 0x34c;
		constexpr auto cachedUnderground = 0x350;
		constexpr auto createdProjectiles = 0x358;

		constexpr auto OnRpcMessage = 0x8dd1a0;
		constexpr auto GetInheritedVelocity = 0x8da880;
		constexpr auto GetDamageScale = 0x8da860;
		constexpr auto GetDistanceScale = 0x8da870;
		constexpr auto GetProjectileVelocityScale = 0x301b30;
		constexpr auto StartReloadCooldown = 0x8de920;
		constexpr auto ResetReloadCooldown = 0x8ddda0;
		constexpr auto HasReloadCooldown = 0x8db770;
		constexpr auto GetReloadCooldown = 0x8db070;
		constexpr auto GetReloadIdle = 0x8db1d0;
		constexpr auto OnDrawGizmos = 0x8dc9e0;
		constexpr auto GetRecoil = 0x8db060;
		constexpr auto get_isSemiAuto = 0x8dec80;
		constexpr auto GetAimCone = 0x8d9fc0;
		constexpr auto ScaleRepeatDelay = 0x8dddb0;
		constexpr auto GetProjectileModifier = 0x8daa20;
		constexpr auto DidAttackClientside = 0x8d86b0;
		constexpr auto GetItemOptions = 0x8da8d0;
		constexpr auto EditViewAngles = 0x8d95c0;
		constexpr auto OnFrame = 0x8dcdb0;
		constexpr auto ShotFired = 0x8de0e0;
		constexpr auto SimulateAimcone = 0x8de140;
		constexpr auto CanAttack = 0x8d81e0;
		constexpr auto CanAim = 0x8d81b0;
		constexpr auto OnInput = 0x8dcdc0;
		constexpr auto ReadyToAim = 0x8ddcf0;
		constexpr auto ReadyToFire = 0x8ddd40;
		constexpr auto AmmoTypeClicked = 0x8d8090;
		constexpr auto AddAmmoOption = 0x8d7ee0;
		constexpr auto GetReloadMenu = 0x8db250;
		constexpr auto PredictAmmoType = 0x8dd950;
		constexpr auto HasMoreThanOneAmmoType = 0x8db4c0;
		constexpr auto OnDeploy = 0x8dc9a0;
		constexpr auto DoReload = 0x8d9040;
		constexpr auto InsertAmmoFraction = 0x8db7a0;
		constexpr auto CancelFractionalReloading = 0x8d8200;
		constexpr auto ClientFinishFractionalReload = 0x8d82a0;
		constexpr auto ClientSingleReload = 0x8d83e0;
		constexpr auto DoAttack = 0x8d8780;
		constexpr auto BeginCycle = 0x8d8120;
		constexpr auto LaunchProjectile = 0x8dc7b0;
		constexpr auto DryFire = 0x8d9500;
		constexpr auto ProcessSpectatorViewmodel = 0x8ddc90;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x8ddb80;
		constexpr auto GetReloadDuration = 0x8db0f0;
		constexpr auto GetAvailableAmmo = 0x8da650;
		constexpr auto IsSilenced = 0x8db800;
		constexpr auto FiredUnderground = 0x8d9f30;
		constexpr auto OnSignal = 0x8dd290;
		constexpr auto LaunchProjectileClientside = 0x8db9e0;
		constexpr auto CreateProjectile = 0x8d8520;
		constexpr auto UpdateAmmoDisplay = 0x8de970;
		constexpr auto get_UsingInfiniteAmmoCheat = 0x2f4190;
		constexpr auto Load = 0x8dc900;
		constexpr auto ctor = 0x8dea20;
	};

	namespace PlayerWalkMovement {
		constexpr auto zeroFrictionMaterial = 0x58;
		constexpr auto highFrictionMaterial = 0x60;
		constexpr auto capsuleHeight = 0x68;
		constexpr auto capsuleCenter = 0x6c;
		constexpr auto capsuleHeightDucked = 0x70;
		constexpr auto capsuleCenterDucked = 0x74;
		constexpr auto capsuleHeightCrawling = 0x78;
		constexpr auto capsuleCenterCrawling = 0x7c;
		constexpr auto gravityTestRadius = 0x80;
		constexpr auto gravityMultiplier = 0x84;
		constexpr auto gravityMultiplierSwimming = 0x88;
		constexpr auto maxAngleWalking = 0x8c;
		constexpr auto maxAngleClimbing = 0x90;
		constexpr auto maxAngleSliding = 0x94;
		constexpr auto maxStepHeight = 0x98;
		constexpr auto body = 0xa0;
		constexpr auto initialColDetectionMode = 0xa8;
		constexpr auto capsule = 0xb0;
		constexpr auto ladder = 0xb8;
		constexpr auto maxVelocity = 0xc0;
		constexpr auto groundAngle = 0xc4;
		constexpr auto groundAngleNew = 0xc8;
		constexpr auto groundTime = 0xcc;
		constexpr auto jumpTime = 0xd0;
		constexpr auto landTime = 0xd4;
		constexpr auto previousPosition = 0xd8;
		constexpr auto previousVelocity = 0xe4;
		constexpr auto previousInheritedVelocity = 0xf0;
		constexpr auto groundNormal = 0xfc;
		constexpr auto groundNormalNew = 0x108;
		constexpr auto groundVelocity = 0x114;
		constexpr auto groundVelocityNew = 0x120;
		constexpr auto nextSprintTime = 0x12c;
		constexpr auto lastSprintTime = 0x130;
		constexpr auto sprintForced = 0x134;
		constexpr auto attemptedMountTime = 0x138;
		constexpr auto modify = 0x13c;
		constexpr auto grounded = 0x140;
		constexpr auto climbing = 0x141;
		constexpr auto sliding = 0x142;
		constexpr auto swimming = 0x143;
		constexpr auto wasSwimming = 0x144;
		constexpr auto jumping = 0x145;
		constexpr auto wasJumping = 0x146;
		constexpr auto falling = 0x147;
		constexpr auto wasFalling = 0x148;
		constexpr auto flying = 0x149;
		constexpr auto wasFlying = 0x14a;
		constexpr auto forcedDuckDelta = 0x14c;

		constexpr auto Awake = 0x94abe0;
		constexpr auto GetCollider = 0x2ff250;
		constexpr auto OnDisable = 0x94fac0;
		constexpr auto Init = 0x94d2f0;
		constexpr auto OnCollisionEnter = 0x94f900;
		constexpr auto OnCollisionStay = 0x94f9e0;
		constexpr auto GroundCheck = 0x94cab0;
		constexpr auto TeleportTo = 0x950170;
		constexpr auto UpdateCurrentLadder = 0x9504a0;
		constexpr auto WantsSprint = 0x9514f0;
		constexpr auto ClientInput = 0x94aed0;
		constexpr auto Movement_Water = 0x94ed50;
		constexpr auto Movement_Mounted = 0x94de30;
		constexpr auto Movement_Ladder = 0x94d7e0;
		constexpr auto Movement_Noclip = 0x94df40;
		constexpr auto Movement_Walking = 0x94e4d0;
		constexpr auto GetHeldEntityMovementMultiplier = 0x94ca00;
		constexpr auto HandleGrounded = 0x94cd80;
		constexpr auto HandleRunDuckCrawl = 0x94cf00;
		constexpr auto GetForcedDuck = 0x94c910;
		constexpr auto HandleJumping = 0x94cdd0;
		constexpr auto CanJump = 0x94ad50;
		constexpr auto BlockJump = 0x94acc0;
		constexpr auto BlockSprint = 0x94ad00;
		constexpr auto SetKinematic = 0x94ff40;
		constexpr auto ApplyForce = 0x94aba0;
		constexpr auto CanSprint = 0x94ae60;
		constexpr auto Jump = 0x94d4c0;
		constexpr auto DoFixedUpdate = 0x94b280;
		constexpr auto DoStepUp = 0x94baa0;
		constexpr auto UpdateVelocity = 0x9509a0;
		constexpr auto UpdateGravity = 0x950650;
		constexpr auto FrameUpdate = 0x94c470;
		constexpr auto TransformState = 0x950290;
		constexpr auto SetParent = 0x94ff70;
		constexpr auto FallVelocity = 0x94c3c0;
		constexpr auto CurrentVelocity = 0x94b240;
		constexpr auto CurrentMoveSpeed = 0x94b1f0;
		constexpr auto PlayerAttemptedMount = 0x94fee0;
		constexpr auto PlayerCompletedMount = 0x94ff10;
		constexpr auto ctor = 0x951580;
	};

	namespace UnityEngine_GUI {
		constexpr auto s_BoxHash = 0x4;
		constexpr auto s_ButonHash = 0x8;
		constexpr auto s_RepeatButtonHash = 0xc;
		constexpr auto s_ToggleHash = 0x10;
		constexpr auto s_ButtonGridHash = 0x14;
		constexpr auto s_SliderHash = 0x18;
		constexpr auto s_BeginGroupHash = 0x1c;
		constexpr auto s_ScrollviewHash = 0x20;
		constexpr auto scrollTroughSidek__BackingField = 0x24;
		constexpr auto nextScrollStepTimek__BackingField = 0x28;
		constexpr auto s_Skin = 0x30;
		constexpr auto scrollViewStatesk__BackingField = 0x38;

		constexpr auto get_color = 0x1a107d0;
		constexpr auto set_color = 0x1a10d70;
		constexpr auto get_backgroundColor = 0x1a10680;
		constexpr auto set_backgroundColor = 0x1a10c80;
		constexpr auto get_contentColor = 0x1a10890;
		constexpr auto set_contentColor = 0x1a10e20;
		constexpr auto get_changed = 0x1a10760;
		constexpr auto set_changed = 0x1a10cf0;
		constexpr auto get_enabled = 0x1a10910;
		constexpr auto set_enabled = 0x1a10e90;
		constexpr auto get_usePageScrollbars = 0x1a10c10;
		constexpr auto get_blendMaterial = 0x1a10700;
		constexpr auto get_blitMaterial = 0x1a10730;
		constexpr auto get_roundedRectMaterial = 0x1a10a30;
		constexpr auto get_roundedRectWithColorPerBorderMaterial = 0x1a10a60;
		constexpr auto GrabMouseControl = 0x1a0e7d0;
		constexpr auto HasMouseControl = 0x1a0f5c0;
		constexpr auto ReleaseMouseControl = 0x1a0fcd0;
		constexpr auto SetNextControlName = 0x1a0ff60;
		constexpr auto InternalRepaintEditorWindow = 0x1a0f8e0;
		constexpr auto cctor = 0x1a103c0;
		constexpr auto get_scrollTroughSide = 0x1a10a90;
		constexpr auto set_scrollTroughSide = 0x1a10ff0;
		constexpr auto get_nextScrollStepTime = 0x1a109d0;
		constexpr auto set_nextScrollStepTime = 0x1a10f30;
		constexpr auto set_skin = 0x1a110b0;
		constexpr auto get_skin = 0x1a10bb0;
		constexpr auto DoSetSkin = 0x1a0cc50;
		constexpr auto get_matrix = 0x1a10940;
		constexpr auto set_matrix = 0x1a10ed0;
		constexpr auto Label = 0x1a0fa00;
		constexpr auto DrawTexture = 0x1a0dde0;
		constexpr auto CalculateScaledTextureRects = 0x1a0afa0;
		constexpr auto Box = 0x1a0a390;
		constexpr auto Button = 0x1a0a450;
		constexpr auto PasswordFieldGetStrToShow = 0x1a0fba0;
		constexpr auto DoTextField = 0x1a0d0d0;
		constexpr auto HandleTextFieldEventForTouchscreen = 0x1a0f000;
		constexpr auto HandleTextFieldEventForDesktop = 0x1a0e810;
		constexpr auto Toggle = 0x1a10200;
		constexpr auto SelectionGrid = 0x1a0fe00;
		constexpr auto CalcTotalHorizSpacing = 0x1a0ad90;
		constexpr auto DoControl = 0x1a0c580;
		constexpr auto DoLabel = 0x1a0c9c0;
		constexpr auto DoToggle = 0x1a0d290;
		constexpr auto DoButton = 0x1a0c450;
		constexpr auto DoButtonGrid = 0x1a0b760;
		constexpr auto CalcMouseRects = 0x1a0a870;
		constexpr auto HorizontalSlider = 0x1a0f6d0;
		constexpr auto Slider = 0x1a0ffa0;
		constexpr auto BeginGroup = 0x1a09d70;
		constexpr auto EndGroup = 0x1a0e790;
		constexpr auto get_scrollViewStates = 0x1a10b50;
		constexpr auto CallWindowDelegate = 0x1a0b2d0;
		constexpr auto get_color_Injected = 0x1a10790;
		constexpr auto set_color_Injected = 0x1a10d30;
		constexpr auto get_backgroundColor_Injected = 0x1a10640;
		constexpr auto set_backgroundColor_Injected = 0x1a10c40;
		constexpr auto get_contentColor_Injected = 0x1a10850;
		constexpr auto set_contentColor_Injected = 0x1a10de0;
	};

	namespace UnityEngine_GUIStyle {
		constexpr auto m_Ptr = 0x10;
		constexpr auto m_Normal = 0x18;
		constexpr auto m_Hover = 0x20;
		constexpr auto m_Active = 0x28;
		constexpr auto m_Focused = 0x30;
		constexpr auto m_OnNormal = 0x38;
		constexpr auto m_OnHover = 0x40;
		constexpr auto m_OnActive = 0x48;
		constexpr auto m_OnFocused = 0x50;
		constexpr auto m_Border = 0x58;
		constexpr auto m_Padding = 0x60;
		constexpr auto m_Margin = 0x68;
		constexpr auto m_Overflow = 0x70;
		constexpr auto m_Name = 0x78;
		constexpr auto s_None = 0x8;

		constexpr auto get_rawName = 0x1a078d0;
		constexpr auto set_rawName = 0x1a07ca0;
		constexpr auto get_font = 0x1a073c0;
		constexpr auto get_imagePosition = 0x1a07400;
		constexpr auto set_alignment = 0x1a07b40;
		constexpr auto get_wordWrap = 0x1a07990;
		constexpr auto get_contentOffset = 0x1a072f0;
		constexpr auto set_contentOffset = 0x1a07bd0;
		constexpr auto get_fixedWidth = 0x1a07380;
		constexpr auto get_fixedHeight = 0x1a07340;
		constexpr auto get_stretchWidth = 0x1a07950;
		constexpr auto set_stretchWidth = 0x1a07d40;
		constexpr auto get_stretchHeight = 0x1a07910;
		constexpr auto set_stretchHeight = 0x1a07cf0;
		constexpr auto set_fontSize = 0x1a07c10;
		constexpr auto set_Internal_clipOffset = 0x1a07b00;
		constexpr auto Internal_Create = 0x1a06700;
		constexpr auto Internal_Copy = 0x1a066b0;
		constexpr auto Internal_Destroy = 0x1a06740;
		constexpr auto GetStyleStatePtr = 0x1a064e0;
		constexpr auto GetRectOffsetPtr = 0x1a064a0;
		constexpr auto Internal_GetLineHeight = 0x1a06dd0;
		constexpr auto Internal_Draw = 0x1a06b50;
		constexpr auto Internal_Draw2 = 0x1a067f0;
		constexpr auto Internal_DrawCursor = 0x1a068d0;
		constexpr auto Internal_DrawWithTextSelection = 0x1a069f0;
		constexpr auto Internal_GetCursorPixelPosition = 0x1a06c80;
		constexpr auto Internal_GetCursorStringIndex = 0x1a06d70;
		constexpr auto Internal_GetSelectedRenderedText = 0x1a06e80;
		constexpr auto Internal_CalcSize = 0x1a053f0;
		constexpr auto Internal_CalcSizeWithConstraints = 0x1a05390;
		constexpr auto Internal_CalcHeight = 0x1a052b0;
		constexpr auto Internal_CalcMinMaxWidth = 0x1a06580;
		constexpr auto SetMouseTooltip = 0x1a06f80;
		constexpr auto Internal_GetCursorFlashOffset = 0x1a06be0;
		constexpr auto SetDefaultFont = 0x1a06ef0;
		constexpr auto ctor = 0x1a07220;
		constexpr auto Finalize = 0x1a062c0;
		constexpr auto get_name = 0x1a07640;
		constexpr auto set_name = 0x1a07c50;
		constexpr auto get_normal = 0x1a07760;
		constexpr auto get_margin = 0x1a07590;
		constexpr auto get_padding = 0x1a07820;
		constexpr auto get_lineHeight = 0x1a074e0;
		constexpr auto Draw = 0x1a06090;
		constexpr auto DrawCursor = 0x1a05450;
		constexpr auto DrawWithTextSelection = 0x1a05910;
		constexpr auto op_Implicit = 0x1a079d0;
		constexpr auto get_none = 0x1a076a0;
		constexpr auto GetCursorPixelPosition = 0x1a063c0;
		constexpr auto GetCursorStringIndex = 0x1a06440;
		constexpr auto CalcSize = 0x1a053f0;
		constexpr auto CalcSizeWithConstraints = 0x1a05390;
		constexpr auto CalcHeight = 0x1a052b0;
		constexpr auto get_isHeightDependantOnWidth = 0x1a07440;
		constexpr auto CalcMinMaxWidth = 0x1a05310;
		constexpr auto ToString = 0x1a07000;
		constexpr auto cctor = 0x1a07110;
		constexpr auto get_contentOffset_Injected = 0x1a072a0;
		constexpr auto set_contentOffset_Injected = 0x1a07b80;
		constexpr auto set_Internal_clipOffset_Injected = 0x1a07ab0;
		constexpr auto Internal_Draw_Injected = 0x1a06ac0;
		constexpr auto Internal_Draw2_Injected = 0x1a06780;
		constexpr auto Internal_DrawCursor_Injected = 0x1a06860;
		constexpr auto Internal_DrawWithTextSelection_Injected = 0x1a06940;
		constexpr auto Internal_GetCursorPixelPosition_Injected = 0x1a06c10;
		constexpr auto Internal_GetCursorStringIndex_Injected = 0x1a06d00;
		constexpr auto Internal_GetSelectedRenderedText_Injected = 0x1a06e10;
		constexpr auto Internal_CalcSize_Injected = 0x1a06650;
		constexpr auto Internal_CalcSizeWithConstraints_Injected = 0x1a065e0;
		constexpr auto Internal_CalcMinMaxWidth_Injected = 0x1a06520;
		constexpr auto SetMouseTooltip_Injected = 0x1a06f30;
	};

	namespace UnityEngine_Event {
		constexpr auto m_Ptr = 0x10;
		constexpr auto s_MasterEvent = 0x8;

		constexpr auto get_rawType = 0x19f6ff0;
		constexpr auto get_mousePosition = 0x19f6f20;
		constexpr auto set_mousePosition = 0x19f7300;
		constexpr auto get_delta = 0x19f6ca0;
		constexpr auto get_pointerType = 0x19f6f70;
		constexpr auto get_button = 0x19f6a90;
		constexpr auto get_modifiers = 0x19f6e90;
		constexpr auto set_modifiers = 0x19f7270;
		constexpr auto get_pressure = 0x19f6fb0;
		constexpr auto get_clickCount = 0x19f6b10;
		constexpr auto get_character = 0x19f6ad0;
		constexpr auto set_character = 0x19f70b0;
		constexpr auto get_keyCode = 0x19f6e50;
		constexpr auto set_keyCode = 0x19f7230;
		constexpr auto get_displayIndex = 0x19f6cf0;
		constexpr auto set_displayIndex = 0x19f71f0;
		constexpr auto get_type = 0x19f7070;
		constexpr auto set_type = 0x19f7340;
		constexpr auto get_commandName = 0x19f6b50;
		constexpr auto set_commandName = 0x19f7100;
		constexpr auto Internal_Use = 0x19f4970;
		constexpr auto Internal_Create = 0x19f4770;
		constexpr auto Internal_Destroy = 0x19f47b0;
		constexpr auto Internal_Copy = 0x19f4730;
		constexpr auto GetTypeForControl = 0x19f46f0;
		constexpr auto CopyFromPtr = 0x19f41d0;
		constexpr auto PopEvent = 0x19f5c40;
		constexpr auto Internal_SetNativeEvent = 0x19f4930;
		constexpr auto Internal_MakeMasterEventCurrent = 0x19f47f0;
		constexpr auto ctor = 0x19f69c0;
		constexpr auto Finalize = 0x19f44e0;
		constexpr auto CopyFrom = 0x19f4220;
		constexpr auto get_shift = 0x19f7030;
		constexpr auto get_control = 0x19f6bd0;
		constexpr auto get_alt = 0x19f6a50;
		constexpr auto get_command = 0x19f6b90;
		constexpr auto get_current = 0x19f6c10;
		constexpr auto set_current = 0x19f7150;
		constexpr auto get_isKey = 0x19f6da0;
		constexpr auto get_isMouse = 0x19f6df0;
		constexpr auto get_isDirectManipulationDevice = 0x19f6d30;
		constexpr auto KeyboardEvent = 0x19f49b0;
		constexpr auto GetHashCode = 0x19f45c0;
		constexpr auto Equals = 0x19f4290;
		constexpr auto ToString = 0x19f5c80;
		constexpr auto Use = 0x19f6760;
		constexpr auto get_mousePosition_Injected = 0x19f6ed0;
		constexpr auto set_mousePosition_Injected = 0x19f72b0;
		constexpr auto get_delta_Injected = 0x19f6c50;
	};

	namespace UnityEngine_Input {

		constexpr auto GetKeyInt = 0x227fab0;
		constexpr auto GetKeyUpInt = 0x227faf0;
		constexpr auto GetKeyDownInt = 0x227fa70;
		constexpr auto GetAxis = 0x227f9f0;
		constexpr auto GetAxisRaw = 0x227f9b0;
		constexpr auto GetButtonDown = 0x227fa30;
		constexpr auto GetMouseButton = 0x227fbb0;
		constexpr auto GetMouseButtonDown = 0x227fb30;
		constexpr auto GetMouseButtonUp = 0x227fb70;
		constexpr auto GetTouch = 0x227fc30;
		constexpr auto GetKey = 0x227fab0;
		constexpr auto GetKeyUp = 0x227faf0;
		constexpr auto GetKeyDown = 0x227fa70;
		constexpr auto get_anyKey = 0x227fcc0;
		constexpr auto get_anyKeyDown = 0x227fc90;
		constexpr auto get_mousePosition = 0x227fe10;
		constexpr auto get_mouseScrollDelta = 0x227fec0;
		constexpr auto get_imeCompositionMode = 0x227fda0;
		constexpr auto set_imeCompositionMode = 0x2280110;
		constexpr auto get_compositionString = 0x227fd70;
		constexpr auto get_compositionCursorPos = 0x227fd30;
		constexpr auto set_compositionCursorPos = 0x22800d0;
		constexpr auto get_mousePresent = 0x227fe50;
		constexpr auto get_touchCount = 0x227ff00;
		constexpr auto get_touchSupported = 0x227ff30;
		constexpr auto get_touches = 0x227ff60;
		constexpr auto GetTouch_Injected = 0x227fbf0;
		constexpr auto get_mousePosition_Injected = 0x227fdd0;
		constexpr auto get_mouseScrollDelta_Injected = 0x227fe80;
		constexpr auto get_compositionCursorPos_Injected = 0x227fcf0;
		constexpr auto set_compositionCursorPos_Injected = 0x2280090;
	};

	namespace UnityEngine_DDraw {
		constexpr auto singleton = 0x8;
		constexpr auto list = 0x18;
		constexpr auto AutoYPosition = 0x10;
		constexpr auto LastAutoY = 0x14;
		constexpr auto lineMaterial = 0x18;
		constexpr auto _skin = 0x20;

		constexpr auto Get = 0x538e30;
		constexpr auto Capsule = 0x538a50;
		constexpr auto Sphere = 0x53a2d0;
		constexpr auto SphereGizmo = 0x539fe0;
		constexpr auto Line = 0x539100;
		constexpr auto Arrow = 0x537b20;
		constexpr auto ArrowPadded = 0x537420;
		constexpr auto Bounds = 0x537d50;
		constexpr auto Box = 0x538310;
		constexpr auto Text = 0x53a5b0;
		constexpr auto ScreenText = 0x539e40;
		constexpr auto Awake = 0x537ce0;
		constexpr auto OnPreRender = 0x539a60;
		constexpr auto OnPostRender = 0x539720;
		constexpr auto OnGUI = 0x539550;
		constexpr auto CreateLineMaterial = 0x538cd0;
		constexpr auto get_skin = 0x53a7c0;
		constexpr auto ctor = 0x53a750;
		constexpr auto cctor = 0x2f4fd0;
	};

	namespace UnityEngine_Texture2D {

		constexpr auto get_format = 0x18e9bb0;
		constexpr auto get_whiteTexture = 0x18e9c30;
		constexpr auto get_blackTexture = 0x18e9b80;
		constexpr auto Compress = 0x18e82e0;
		constexpr auto Internal_CreateImpl = 0x18e8970;
		constexpr auto Internal_Create = 0x18e89d0;
		constexpr auto get_isReadable = 0x18e9bf0;
		constexpr auto ApplyImpl = 0x18e8130;
		constexpr auto ResizeImpl = 0x18e8ea0;
		constexpr auto SetPixelImpl = 0x18e91e0;
		constexpr auto GetPixelImpl = 0x18e8550;
		constexpr auto GetPixelBilinearImpl = 0x18e8390;
		constexpr auto ResizeWithFormatImpl = 0x18e8ef0;
		constexpr auto ReadPixelsImpl = 0x18e8c90;
		constexpr auto SetPixelsImpl = 0x18e93e0;
		constexpr auto LoadRawTextureDataImpl = 0x18e8aa0;
		constexpr auto GetWritableImageData = 0x18e8930;
		constexpr auto GetRawImageDataSize = 0x18e88f0;
		constexpr auto set_requestedMipmapLevel = 0x18e9ca0;
		constexpr auto set_minimumMipmapLevel = 0x18e9c60;
		constexpr auto ClearRequestedMipmapLevel = 0x18e82a0;
		constexpr auto ClearMinimumMipmapLevel = 0x18e8260;
		constexpr auto SetAllPixels32 = 0x18e90c0;
		constexpr auto SetBlockOfPixels32 = 0x18e9120;
		constexpr auto GetPixels = 0x18e87f0;
		constexpr auto GetPixels32 = 0x18e86f0;
		constexpr auto ctor = 0x18e9940;
		constexpr auto SetPixel = 0x18e9250;
		constexpr auto SetPixels = 0x18e9440;
		constexpr auto GetPixel = 0x18e85d0;
		constexpr auto GetPixelBilinear = 0x18e8410;
		constexpr auto LoadRawTextureData = 0x18e8b00;
		constexpr auto Apply = 0x18e81b0;
		constexpr auto Resize = 0x18e9020;
		constexpr auto ReadPixels = 0x18e8dd0;
		constexpr auto SetPixels32 = 0x18e90c0;
		constexpr auto SetPixelImpl_Injected = 0x18e9180;
		constexpr auto GetPixelImpl_Injected = 0x18e84f0;
		constexpr auto GetPixelBilinearImpl_Injected = 0x18e8330;
		constexpr auto ReadPixelsImpl_Injected = 0x18e8c20;
	};

	namespace ModelState {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto waterLevel = 0x14;
		constexpr auto lookDir = 0x18;
		constexpr auto flags = 0x24;
		constexpr auto poseType = 0x28;
		constexpr auto inheritedVelocity = 0x2c;

		constexpr auto ctor = 0x1dfbea0;
		constexpr auto HasFlag = 0x1dfb380;
		constexpr auto SetFlag = 0x1dfbe30;
		constexpr auto get_ducked = 0x1dfbef0;
		constexpr auto set_ducked = 0x1dfbff0;
		constexpr auto get_jumped = 0x1dfbf20;
		constexpr auto set_jumped = 0x1dfc050;
		constexpr auto get_onground = 0x1dfbf60;
		constexpr auto set_onground = 0x1dfc0d0;
		constexpr auto get_sleeping = 0x1dfbf90;
		constexpr auto set_sleeping = 0x1dfc130;
		constexpr auto get_sprinting = 0x1dfbfa0;
		constexpr auto set_sprinting = 0x1dfc150;
		constexpr auto get_onLadder = 0x1dfbf40;
		constexpr auto set_onLadder = 0x1dfc090;
		constexpr auto get_flying = 0x1dfbf00;
		constexpr auto set_flying = 0x1dfc010;
		constexpr auto get_aiming = 0x1dfbed0;
		constexpr auto set_aiming = 0x1dfbfb0;
		constexpr auto get_prone = 0x1dfbf70;
		constexpr auto set_prone = 0x1dfc0f0;
		constexpr auto get_mounted = 0x1dfbf30;
		constexpr auto set_mounted = 0x1dfc070;
		constexpr auto get_relaxed = 0x1dfbf80;
		constexpr auto set_relaxed = 0x1dfc110;
		constexpr auto get_crawling = 0x1dfbee0;
		constexpr auto set_crawling = 0x1dfbfd0;
		constexpr auto get_onPhone = 0x1dfbf50;
		constexpr auto set_onPhone = 0x1dfc0b0;
		constexpr auto get_headLook = 0x1dfbf10;
		constexpr auto set_headLook = 0x1dfc030;
		constexpr auto Equal = 0x1dfb020;
		constexpr auto ResetToPool = 0x1dfb460;
		constexpr auto Dispose = 0x1dfafa0;
		constexpr auto EnterPool = 0xb5a2d0;
		constexpr auto LeavePool = 0xb5a300;
		constexpr auto CopyTo = 0x1df9c80;
		constexpr auto Copy = 0x1df9cd0;
		constexpr auto Deserialize = 0x1dfad20;
		constexpr auto DeserializeLengthDelimited = 0x1df9d70;
		constexpr auto DeserializeLength = 0x1dfa400;
		constexpr auto FromProto = 0x1dfb130;
		constexpr auto WriteToStream = 0x1dfbe60;
		constexpr auto WriteToStreamDelta = 0x1dfbe80;
		constexpr auto ReadFromStream = 0x1dfb390;
		constexpr auto SerializeDelta = 0x1dfb510;
		constexpr auto Serialize = 0x1dfbb70;
		constexpr auto ToProtoBytes = 0x1dfbe50;
		constexpr auto ToProto = 0x1dfbe60;
		constexpr auto SerializeToBytes = 0x1dfba60;
		constexpr auto SerializeLengthDelimited = 0x1dfb9b0;
	};

	namespace ProtoBuf_PlayerProjectileUpdate {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto projectileID = 0x14;
		constexpr auto curPosition = 0x18;
		constexpr auto curVelocity = 0x24;
		constexpr auto travelTime = 0x30;

		constexpr auto ResetToPool = 0x1ec5fb0;
		constexpr auto Dispose = 0x1ec5c50;
		constexpr auto EnterPool = 0xb5a2d0;
		constexpr auto LeavePool = 0xb5a300;
		constexpr auto CopyTo = 0x1ec4ae0;
		constexpr auto Copy = 0x1ec4b20;
		constexpr auto Deserialize = 0x1ec5250;
		constexpr auto DeserializeLengthDelimited = 0x1ec4bc0;
		constexpr auto DeserializeLength = 0x1ec51c0;
		constexpr auto FromProto = 0x1ec5d80;
		constexpr auto WriteToStream = 0x1ec69c0;
		constexpr auto WriteToStreamDelta = 0x1ec69e0;
		constexpr auto ReadFromStream = 0x1ec5f90;
		constexpr auto SerializeDelta = 0x1ec6110;
		constexpr auto Serialize = 0x1ec6720;
		constexpr auto ToProtoBytes = 0x1ec69b0;
		constexpr auto ToProto = 0x1ec69c0;
		constexpr auto SerializeToBytes = 0x1ec6610;
		constexpr auto SerializeLengthDelimited = 0x1ec6560;
		constexpr auto ctor = 0xb5ab90;
	};

	namespace Projectile {
		constexpr auto initialVelocity = 0x18;
		constexpr auto drag = 0x24;
		constexpr auto gravityModifier = 0x28;
		constexpr auto thickness = 0x2c;
		constexpr auto initialDistance = 0x30;
		constexpr auto remainInWorld = 0x34;
		constexpr auto stickProbability = 0x38;
		constexpr auto breakProbability = 0x3c;
		constexpr auto conditionLoss = 0x40;
		constexpr auto ricochetChance = 0x44;
		constexpr auto penetrationPower = 0x48;
		constexpr auto damageProperties = 0x50;
		constexpr auto damageDistances = 0x58;
		constexpr auto damageMultipliers = 0x60;
		constexpr auto damageTypes = 0x68;
		constexpr auto rendererToScale = 0x70;
		constexpr auto firstPersonRenderer = 0x78;
		constexpr auto createDecals = 0x80;
		constexpr auto doDefaultHitEffects = 0x81;
		constexpr auto flybySound = 0x88;
		constexpr auto flybySoundDistance = 0x90;
		constexpr auto closeFlybySound = 0x98;
		constexpr auto closeFlybyDistance = 0xa0;
		constexpr auto tumbleSpeed = 0xa4;
		constexpr auto tumbleAxis = 0xa8;
		constexpr auto swimScale = 0xb4;
		constexpr auto swimSpeed = 0xc0;
		constexpr auto owner = 0xd0;
		constexpr auto sourceWeaponPrefab = 0xd8;
		constexpr auto sourceProjectilePrefab = 0xe0;
		constexpr auto mod = 0xe8;
		constexpr auto projectileID = 0xf0;
		constexpr auto seed = 0xf4;
		constexpr auto clientsideEffect = 0xf8;
		constexpr auto clientsideAttack = 0xf9;
		constexpr auto integrity = 0xfc;
		constexpr auto maxDistance = 0x100;
		constexpr auto modifier = 0x104;
		constexpr auto invisible = 0x114;
		constexpr auto currentVelocity = 0x118;
		constexpr auto currentPosition = 0x124;
		constexpr auto traveledDistance = 0x130;
		constexpr auto traveledTime = 0x134;
		constexpr auto launchTime = 0x138;
		constexpr auto sentPosition = 0x13c;
		constexpr auto previousPosition = 0x148;
		constexpr auto previousVelocity = 0x154;
		constexpr auto previousTraveledTime = 0x160;
		constexpr auto isRicochet = 0x164;
		constexpr auto isRetiring = 0x165;
		constexpr auto flybyPlayed = 0x166;
		constexpr auto wasFacingPlayer = 0x167;
		constexpr auto flybyPlane = 0x168;
		constexpr auto flybyRay = 0x178;
		constexpr auto cleanupAction = 0x190;
		constexpr auto hitTest = 0x198;
		constexpr auto swimRandom = 0x1a0;
		constexpr auto _waterMaterialID = 0x4;
		constexpr auto cachedWaterString = 0x8;

		constexpr auto CalculateDamage = 0x56f630;
		constexpr auto get_isAuthoritative = 0x5743e0;
		constexpr auto get_isAlive = 0x5743a0;
		constexpr auto Retire = 0x573190;
		constexpr auto Cleanup = 0x56fb80;
		constexpr auto AdjustVelocity = 0x56f3c0;
		constexpr auto InitializeVelocity = 0x5723d0;
		constexpr auto OnDisable = 0x572640;
		constexpr auto Update = 0x574000;
		constexpr auto SetEffectScale = 0x573760;
		constexpr auto DoFlybySound = 0x56fd80;
		constexpr auto CalculateEffectScale = 0x56fae0;
		constexpr auto UpdateVelocity = 0x573d20;
		constexpr auto DoVelocityUpdate = 0x571be0;
		constexpr auto DoMovement = 0x570aa0;
		constexpr auto DoWaterHit = 0x571fc0;
		constexpr auto DoRicochet = 0x5717c0;
		constexpr auto DoHit = 0x570390;
		constexpr auto AdditiveImpactEffect = 0x2f4fd0;
		constexpr auto Reflect = 0x572910;
		constexpr auto Refract = 0x572c60;
		constexpr auto RandomRotation = 0x572810;
		constexpr auto Launch = 0x5725b0;
		constexpr auto FleshMaterialID = 0x5722d0;
		constexpr auto WaterMaterialID = 0x574100;
		constexpr auto IsWaterMaterial = 0x572480;
		constexpr auto ShouldStopProjectile = 0x573c60;
		constexpr auto ctor = 0x574200;
		constexpr auto cctor = 0x2f4fd0;
	};

	namespace PlayerEyes {
		constexpr auto DuckOffset = 0xc;
		constexpr auto CrawlOffset = 0x18;
		constexpr auto thirdPersonSleepingOffset = 0x20;
		constexpr auto defaultLazyAim = 0x30;
		constexpr auto viewOffset = 0x38;
		constexpr auto bodyRotationk__BackingField = 0x44;
		constexpr auto headAnglesk__BackingField = 0x54;
		constexpr auto rotationLookk__BackingField = 0x60;
		constexpr auto IsAltLookingLegsThresholdk__BackingField = 0x70;

		constexpr auto get_worldMountedPosition = 0xa07440;
		constexpr auto get_worldStandingPosition = 0xa07630;
		constexpr auto get_worldCrouchedPosition = 0xa07340;
		constexpr auto get_worldCrawlingPosition = 0xa07240;
		constexpr auto get_position = 0xa06d00;
		constexpr auto get_BodyLeanOffset = 0xa063c0;
		constexpr auto get_center = 0xa06720;
		constexpr auto get_offset = 0xa06a40;
		constexpr auto get_rotation = 0xa07190;
		constexpr auto set_rotation = 0xa07790;
		constexpr auto get_bodyRotation = 0xa06640;
		constexpr auto set_bodyRotation = 0xa07760;
		constexpr auto get_headAngles = 0xa06a20;
		constexpr auto set_headAngles = 0xa07770;
		constexpr auto get_rotationLook = 0xa07180;
		constexpr auto set_rotationLook = 0xa07780;
		constexpr auto get_parentRotation = 0xa06b70;
		constexpr auto get_canUpdateViewAngles = 0xa06650;
		constexpr auto get_IsAltLookingLegsThreshold = 0xa06630;
		constexpr auto set_IsAltLookingLegsThreshold = 0xa07750;
		constexpr auto FrameUpdate = 0xa04f80;
		constexpr auto UpdateAltLegsThreshold = 0xa05ff0;
		constexpr auto UpdateCamera = 0xa06060;
		constexpr auto DoFirstPersonCamera = 0xa03060;
		constexpr auto DoInEyeCamera = 0xa036b0;
		constexpr auto DoThirdPersonCamera = 0xa03a00;
		constexpr auto ApplyCameraMoves = 0xa02a30;
		constexpr auto MovementForward = 0xa05c70;
		constexpr auto MovementRight = 0xa05e30;
		constexpr auto BodyRay = 0xa02c10;
		constexpr auto BodyForward = 0xa02ac0;
		constexpr auto BodyRight = 0xa02dc0;
		constexpr auto BodyUp = 0xa02f10;
		constexpr auto HeadRay = 0xa058b0;
		constexpr auto HeadForward = 0xa057c0;
		constexpr auto HeadRight = 0xa05a90;
		constexpr auto HeadUp = 0xa05b80;
		constexpr auto GetLookRotation = 0xa05640;
		constexpr auto GetAimRotation = 0xa05580;
		constexpr auto ctor = 0xa06300;
		constexpr auto cctor = 0xa06200;
	};

	namespace ViewModel {
		constexpr auto viewModelPrefab = 0x18;
		constexpr auto targetEntity = 0x20;
		constexpr auto instance = 0x28;

		constexpr auto Deploy = 0x837b60;


		constexpr auto OnDisable = 0x837ed0;
		constexpr auto Holster = 0x837e60;
		constexpr auto Clear = 0x8379f0;
		constexpr auto OnFrame = 0x837f40;
		constexpr auto Play = 0x8380a0;
		constexpr auto ResetTrigger = 0x8381d0;
		constexpr auto Trigger = 0x8384e0;
		constexpr auto CrossFade = 0x837ac0;
		constexpr auto SetBool = 0x838300;
		constexpr auto SetFloat = 0x838440;
		constexpr auto set_ironSights = 0x838600;
		constexpr auto ctor = 0x2f8ac0;
	};

	namespace BowWeapon {
		constexpr auto attackReady = 0x360;
		constexpr auto arrowBack = 0x364;
		constexpr auto swapArrows = 0x368;
		constexpr auto wasAiming = 0x370;

		constexpr auto OnRpcMessage = 0x4e9060;
		constexpr auto ClientInit = 0x4e87c0;
		constexpr auto OnSignal = 0x4e9150;
		constexpr auto UpdatePullbackThink = 0x4e95a0;
		constexpr auto CancelPullbackThink = 0x4e8750;
		constexpr auto PullbackThink = 0x4e9460;
		constexpr auto OnInput = 0x4e8ce0;
		constexpr auto OnHolstered = 0x4e8ca0;
		constexpr auto DoAttack = 0x4e8830;
		constexpr auto IsAiming = 0x4e8ad0;
		constexpr auto OnViewmodelEvent = 0x4e92c0;
		constexpr auto OnFrame = 0x4e8b70;
		constexpr auto PostNetworkUpdate = 0x4e9330;
		constexpr auto TryReload = 0x4e9530;
		constexpr auto ProcessSpectatorViewmodel = 0x4e93d0;
		constexpr auto ctor = 0x2f4740;
	};

	namespace AttackEntity {
		constexpr auto deployDelay = 0x1f0;
		constexpr auto repeatDelay = 0x1f4;
		constexpr auto animationDelay = 0x1f8;
		constexpr auto effectiveRange = 0x1fc;
		constexpr auto npcDamageScale = 0x200;
		constexpr auto attackLengthMin = 0x204;
		constexpr auto attackLengthMax = 0x208;
		constexpr auto attackSpacing = 0x20c;
		constexpr auto aiAimSwayOffset = 0x210;
		constexpr auto aiAimCone = 0x214;
		constexpr auto aiOnlyInRange = 0x218;
		constexpr auto CloseRangeAddition = 0x21c;
		constexpr auto MediumRangeAddition = 0x220;
		constexpr auto LongRangeAddition = 0x224;
		constexpr auto CanUseAtMediumRange = 0x228;
		constexpr auto CanUseAtLongRange = 0x229;
		constexpr auto reloadSounds = 0x230;
		constexpr auto thirdPersonMeleeSound = 0x238;
		constexpr auto recoilCompDelayOverride = 0x240;
		constexpr auto wantsRecoilComp = 0x244;
		constexpr auto nextAttackTime = 0x248;
		constexpr auto lastTickTime = 0x24c;
		constexpr auto nextTickTime = 0x250;
		constexpr auto timeSinceDeploy = 0x254;
		constexpr auto lastRecoilCompTime = 0x258;
		constexpr auto startAimingDirection = 0x25c;
		constexpr auto wasDoingRecoilComp = 0x268;
		constexpr auto reductionSpeed = 0x26c;

		constexpr auto GetInheritedVelocity = 0x875770;
		constexpr auto get_NextAttackTime = 0x875c50;
		constexpr auto GetAttackStats = 0x2f4fd0;
		constexpr auto StartAttackCooldownRaw = 0x875990;
		constexpr auto StartAttackCooldown = 0x8759c0;
		constexpr auto ResetAttackCooldown = 0x875980;
		constexpr auto HasAttackCooldown = 0x8757e0;
		constexpr auto GetAttackCooldown = 0x875670;
		constexpr auto GetAttackIdle = 0x8756f0;
		constexpr auto CalculateCooldownTime = 0x874c20;
		constexpr auto IsFullyDeployed = 0x875810;
		constexpr auto ProcessInputTime = 0x8758b0;
		constexpr auto OnInput = 0x875850;
		constexpr auto OnDeploy = 0x875830;
		constexpr auto RecoilCompReady = 0x875900;
		constexpr auto AddPunch = 0x874a70;
		constexpr auto DoRecoilCompensation = 0x874d60;
		constexpr auto ctor = 0x875b60;
		constexpr auto cctor = 0x875af0;
	};

	namespace BaseEntity {
		constexpr auto ragdoll = 0x70;
		constexpr auto positionLerp = 0x78;
		constexpr auto menuOptions = 0x80;
		constexpr auto globalBroadcastProtocol = 0x8;
		constexpr auto broadcastProtocol = 0x88;
		constexpr auto links = 0x90;
		constexpr auto linkedToNeighbours = 0x98;
		constexpr auto _pendingFileRequests = 0xa0;
		constexpr auto updateParentingAction = 0xa8;
		constexpr auto addedToParentEntity = 0xb0;
		constexpr auto itemSkin = 0xb8;
		constexpr auto entitySlots = 0xc0;
		constexpr auto triggers = 0xc8;
		constexpr auto isVisible = 0xd0;
		constexpr auto isAnimatorVisible = 0xd1;
		constexpr auto isShadowVisible = 0xd2;
		constexpr auto localOccludee = 0xd8;
		constexpr auto Weightk__BackingField = 0xf8;
		constexpr auto bounds = 0xfc;
		constexpr auto impactEffect = 0x118;
		constexpr auto enableSaving = 0x120;
		constexpr auto syncPosition = 0x121;
		constexpr auto model = 0x128;
		constexpr auto flags = 0x130;
		constexpr auto parentBone = 0x134;
		constexpr auto skinID = 0x138;
		constexpr auto _components = 0x140;
		constexpr auto HasBrain = 0x148;
		constexpr auto _name = 0x150;
		constexpr auto OwnerIDk__BackingField = 0x158;

		constexpr auto OnRpcMessage = 0x88ef30;
		constexpr auto GetEntityMenu = 0x88a460;
		constexpr auto GetMenuOptions = 0x2f4fd0;
		constexpr auto get_HasMenuOptions = 0x2f4190;
		constexpr auto GetItemOptions = 0x88ab10;
		constexpr auto GetMovementModify = 0x88b560;
		constexpr auto GetExtrapolationTime = 0x88a5a0;
		constexpr auto GetInterpolationDelay = 0x88a960;
		constexpr auto GetInterpolationInertia = 0x88a9f0;
		constexpr auto GetInterpolationSmoothing = 0x88aa80;
		constexpr auto GetAngularVelocityClient = 0x889f00;
		constexpr auto GetLocalVelocityClient = 0x88ad60;
		constexpr auto DrawInterpolationState = 0x888400;
		constexpr auto LerpIdleDisable = 0x88d8b0;
		constexpr auto ClientInit = 0x8875d0;
		constexpr auto ClientOnEnable = 0x887680;
		constexpr auto OnPositionalFromNetwork = 0x88ebd0;
		constexpr auto StartLerping = 0x891f80;
		constexpr auto StopLerping = 0x892100;
		constexpr auto ShouldLerp = 0x891b70;
		constexpr auto SetNetworkPosition = 0x891660;
		constexpr auto SetNetworkRotation = 0x8917d0;
		constexpr auto DoDestroyEffects = 0x8883e0;
		constexpr auto SpawnGibs = 0x891c70;
		constexpr auto DoNetworkDestroy = 0x3045a0;
		constexpr auto PostNetworkUpdate = 0x8902f0;
		constexpr auto OnBecameRagdoll = 0x88e910;
		constexpr auto GetMenuInformation = 0x88aee0;
		constexpr auto HideMenuItems = 0x88c2b0;
		constexpr auto GetMenuItems = 0x88b1d0;
		constexpr auto OnUse = 0x8900e0;
		constexpr auto OnUseHeld = 0x88fec0;
		constexpr auto OnUseStopped = 0x2f4fd0;
		constexpr auto OnRendered = 0x2f4fd0;
		constexpr auto DoClientDestroy = 0x8880a0;
		constexpr auto GetEyeTransform = 0x88a630;
		constexpr auto NeedsCrosshair = 0x88e800;
		constexpr auto AlwaysShowCrosshair = 0x2f4190;
		constexpr auto ShouldDestroyWithGroup = 0x891ac0;
		constexpr auto DetachEffects = 0x887c90;
		constexpr auto OnVoiceData = 0x2f4fd0;
		constexpr auto LookingAtTick = 0x2f4fd0;
		constexpr auto get_RealisticMass = 0x3217b0;
		constexpr auto OnCollision = 0x88e9c0;
		constexpr auto ReceiveCollisionMessages = 0x8903e0;
		constexpr auto DebugClient = 0x2f4fd0;
		constexpr auto OnDebugStart = 0x88ea10;
		constexpr auto DebugText = 0x887bb0;
		constexpr auto HasFlag = 0x88c270;
		constexpr auto ParentHasFlag = 0x890250;
		constexpr auto SetFlag = 0x891490;
		constexpr auto IsOn = 0x88c8e0;
		constexpr auto IsOpen = 0x88c8f0;
		constexpr auto IsOnFire = 0x88c8d0;
		constexpr auto IsLocked = 0x88c620;
		constexpr auto IsDebugging = 0x88c430;
		constexpr auto IsDisabled = 0x88c440;
		constexpr auto IsBroken = 0x88c420;
		constexpr auto IsBusy = 0x88c2b0;
		constexpr auto GetLogColor = 0x88ae90;
		constexpr auto OnFlagsChanged = 0x88ead0;
		constexpr auto IsOccupied = 0x88c720;
		constexpr auto FindLink = 0x8890c0;
		constexpr auto EntityLinkBroadcast = 0x888ba0;
		constexpr auto ReceivedEntityLinkBroadcast = 0x890470;
		constexpr auto GetEntityLinks = 0x88a420;
		constexpr auto LinkToEntity = 0x88d8e0;
		constexpr auto LinkToNeighbours = 0x88db40;
		constexpr auto InitEntityLinks = 0x88c2c0;
		constexpr auto FreeEntityLinks = 0x889e20;
		constexpr auto RefreshEntityLinks = 0x8904e0;
		constexpr auto RequestFileFromServer = 0x890d60;
		constexpr auto CL_ReceiveFileRequest = 0x8872e0;
		constexpr auto CompletePendingFileRequests = 0x887880;
		constexpr auto UpdateChildren = 0x8922c0;
		constexpr auto UpdateParenting = 0x893110;
		constexpr auto SetParentTransform = 0x8918a0;
		constexpr auto UpdateDisableState = 0x892670;
		constexpr auto HasClientTransformOffset = 0x88c0d0;
		constexpr auto RemoveClientTransformOffset = 0x8907f0;
		constexpr auto AddClientTransformOffset = 0x886ca0;
		constexpr auto OnParentChangingClient = 0x2f4fd0;
		constexpr auto GetBuildingPrivilege = 0x88a3b0;
		constexpr auto ServerRPC = 0x891150;
		constexpr auto ServerRPCStart = 0x890fa0;
		constexpr auto ServerRPCSend = 0x890f30;
		constexpr auto CL_RPCMessage = 0x886ff0;
		constexpr auto SendSignalBroadcast = 0x890e80;
		constexpr auto SignalFromServerEx = 0x891b90;
		constexpr auto SignalFromServer = 0x891c20;
		constexpr auto OnSignal = 0x2f4fd0;
		constexpr auto OnSkinChanged = 0x88fb30;
		constexpr auto OnSkinRefreshStart = 0x88fea0;
		constexpr auto OnSkinRefreshEnd = 0x88fe80;
		constexpr auto PreProcess = 0x890310;
		constexpr auto HasAnySlot = 0x88bff0;
		constexpr auto GetSlot = 0x88bb70;
		constexpr auto GetSlotAnchorName = 0x88ba30;
		constexpr auto GetSlotAnchor = 0x88bac0;
		constexpr auto HasSlot = 0x2f4190;
		constexpr auto get_Traits = 0x2fc9e0;
		constexpr auto HasTrait = 0x88c280;
		constexpr auto HasAnyTrait = 0x88c0a0;
		constexpr auto EnterTrigger = 0x888af0;
		constexpr auto LeaveTrigger = 0x88d810;
		constexpr auto RemoveFromTriggers = 0x890850;
		constexpr auto ForceUpdateTriggersAction = 0x8893a0;
		constexpr auto ForceUpdateTriggers = 0x8893d0;
		constexpr auto MakeVisible = 0x88e7e0;
		constexpr auto UpdateCullingSpheres = 0x8924f0;
		constexpr auto RegisterForCulling = 0x8905c0;
		constexpr auto OnVisibilityChanged = 0x2f4fd0;
		constexpr auto UnregisterFromCulling = 0x892240;
		constexpr auto UpdateCullingBounds = 0x892420;
		constexpr auto CheckVisibility = 0x8875b0;
		constexpr auto CalcEntityVisUpdateRate = 0x887490;
		constexpr auto DebugDrawCullingBounds = 0x887ae0;
		constexpr auto get_Weight = 0x893900;
		constexpr auto set_Weight = 0x893920;
		constexpr auto get_Components = 0x893880;
		constexpr auto ToPlayer = 0x2fc9e0;
		constexpr auto get_IsNpc = 0x2f4190;
		constexpr auto InitShared = 0x88c400;
		constexpr auto DestroyShared = 0x887c70;
		constexpr auto ResetState = 0x890e10;
		constexpr auto InheritedVelocityScale = 0x2fcd90;
		constexpr auto GetInheritedProjectileVelocity = 0x88a7b0;
		constexpr auto GetInheritedThrowVelocity = 0x88a930;
		constexpr auto GetInheritedDropVelocity = 0x88a6d0;
		constexpr auto GetParentVelocity = 0x88b770;
		constexpr auto GetWorldVelocity = 0x88bbd0;
		constexpr auto GetLocalVelocity = 0x88adf0;
		constexpr auto GetAngularVelocity = 0x889f90;
		constexpr auto WorldSpaceBounds = 0x8935b0;
		constexpr auto PivotPoint = 0x32d270;
		constexpr auto CenterPoint = 0x887570;
		constexpr auto ClosestPoint = 0x8877d0;
		constexpr auto TriggerPoint = 0x887570;
		constexpr auto Distance = 0x887f60;
		constexpr auto SqrDistance = 0x891e40;
		constexpr auto Distance2D = 0x887dc0;
		constexpr auto SqrDistance2D = 0x891ca0;
		constexpr auto IsVisible = 0x88d450;
		constexpr auto IsVisibleSpecificLayers = 0x88ce00;
		constexpr auto IsVisibleAndCanSee = 0x88cbf0;
		constexpr auto IsOlderThan = 0x88c830;
		constexpr auto IsOutside = 0x88c900;
		constexpr auto WaterFactor = 0x893120;
		constexpr auto AirFactor = 0x886d40;
		constexpr auto WaterTestFromVolumes = 0x8932f0;
		constexpr auto IsInWaterVolume = 0x88c4e0;
		constexpr auto BlocksWaterFor = 0x2f4190;
		constexpr auto Health = 0x2fcd90;
		constexpr auto MaxHealth = 0x2fcd90;
		constexpr auto MaxVelocity = 0x2fcd90;
		constexpr auto BoundsPadding = 0x886d80;
		constexpr auto PenetrationResistance = 0x3217b0;
		constexpr auto GetImpactEffect = 0x88a6c0;
		constexpr auto OnAttacked = 0x2f4fd0;
		constexpr auto GetItem = 0x2fc9e0;
		constexpr auto GiveItem = 0x88bfc0;
		constexpr auto CanBeLooted = 0x2f6d70;
		constexpr auto GetEntity = 0x326ee0;
		constexpr auto ToString = 0x892150;
		constexpr auto Categorize = 0x887540;
		constexpr auto Log = 0x88e330;
		constexpr auto SetModel = 0x8915b0;
		constexpr auto GetModel = 0x5aa3b0;
		constexpr auto GetBones = 0x88a030;
		constexpr auto FindBone = 0x888f50;
		constexpr auto FindBoneID = 0x888e70;
		constexpr auto FindClosestBone = 0x889000;
		constexpr auto get_OwnerID = 0x8938f0;
		constexpr auto set_OwnerID = 0x893910;
		constexpr auto ShouldBlockProjectiles = 0x2f6d70;
		constexpr auto ShouldInheritNetworkGroup = 0x2f6d70;
		constexpr auto SupportsChildDeployables = 0x2f6d70;
		constexpr auto BroadcastEntityMessage = 0x886d90;
		constexpr auto OnEntityMessage = 0x2f4fd0;
		constexpr auto Load = 0x88de30;
		constexpr auto ctor = 0x893770;
		constexpr auto cctor = 0x8936f0;
	};

	namespace UnityEngine_Time {

		constexpr auto get_time = 0x20fff30;
		constexpr auto get_deltaTime = 0x20ffd80;
		constexpr auto get_fixedTime = 0x20ffde0;
		constexpr auto get_unscaledTime = 0x20fff90;
		constexpr auto get_unscaledDeltaTime = 0x20fff60;
		constexpr auto get_fixedDeltaTime = 0x20ffdb0;
		constexpr auto set_fixedDeltaTime = 0x20fffc0;
		constexpr auto get_maximumDeltaTime = 0x20ffe40;
		constexpr auto set_maximumDeltaTime = 0x2100000;
		constexpr auto get_smoothDeltaTime = 0x20ffed0;
		constexpr auto get_timeScale = 0x20fff00;
		constexpr auto set_timeScale = 0x2100040;
		constexpr auto get_frameCount = 0x20ffe10;
		constexpr auto get_renderedFrameCount = 0x20ffea0;
		constexpr auto get_realtimeSinceStartup = 0x20ffe70;
	};

	namespace UnityEngine_Physics {

		constexpr auto get_gravity = 0x220beb0;
		constexpr auto get_queriesHitBackfaces = 0x220bef0;
		constexpr auto set_queriesHitBackfaces = 0x220bf60;
		constexpr auto get_defaultPhysicsScene = 0x220be30;
		constexpr auto IgnoreCollision = 0x22086e0;
		constexpr auto Raycast = 0x220a650;
		constexpr auto Linecast = 0x2208820;
		constexpr auto CapsuleCast = 0x2207f20;
		constexpr auto SphereCast = 0x220b8c0;
		constexpr auto BoxCast = 0x2207960;
		constexpr auto Internal_RaycastAll = 0x22087b0;
		constexpr auto RaycastAll = 0x2209390;
		constexpr auto RaycastNonAlloc = 0x2209ab0;
		constexpr auto Query_SphereCastAll = 0x2209230;
		constexpr auto SphereCastAll = 0x220b330;
		constexpr auto SyncTransforms = 0x220bd90;
		constexpr auto get_autoSyncTransforms = 0x220bdc0;
		constexpr auto set_autoSyncTransforms = 0x220bf20;
		constexpr auto OverlapSphereNonAlloc = 0x2209100;
		constexpr auto CheckSphere_Internal = 0x2208500;
		constexpr auto CheckSphere = 0x2208570;
		constexpr auto CapsuleCastNonAlloc = 0x2207cc0;
		constexpr auto SphereCastNonAlloc = 0x220b4c0;
		constexpr auto CheckCapsule_Internal = 0x2208260;
		constexpr auto CheckCapsule = 0x22082d0;
		constexpr auto CheckBox_Internal = 0x22080a0;
		constexpr auto CheckBox = 0x2208110;
		constexpr auto OverlapBox_Internal = 0x2208de0;
		constexpr auto OverlapBox = 0x2208e50;
		constexpr auto OverlapBoxNonAlloc = 0x2208c80;
		constexpr auto OverlapCapsuleNonAlloc = 0x2209010;
		constexpr auto get_gravity_Injected = 0x220be70;
		constexpr auto get_defaultPhysicsScene_Injected = 0x220bdf0;
		constexpr auto Internal_RaycastAll_Injected = 0x2208740;
		constexpr auto Query_SphereCastAll_Injected = 0x22091c0;
		constexpr auto CheckSphere_Internal_Injected = 0x2208490;
		constexpr auto CheckCapsule_Internal_Injected = 0x22081f0;
		constexpr auto CheckBox_Internal_Injected = 0x2208030;
		constexpr auto OverlapBox_Internal_Injected = 0x2208d70;
	};

	namespace AssetNameCache {
		constexpr auto lower = 0x8;
		constexpr auto upper = 0x10;

		constexpr auto LookupName = 0x871200;
		constexpr auto LookupNameLower = 0x870f40;
		constexpr auto LookupNameUpper = 0x8710a0;
		constexpr auto GetName = 0x870e80;
		constexpr auto GetNameLower = 0x870d00;
		constexpr auto GetNameUpper = 0x870dc0;
		constexpr auto cctor = 0x871340;
	};

	namespace UnityEngine_Component {

		constexpr auto get_transform = 0x17e41a0;
		constexpr auto get_gameObject = 0x17e4160;
		constexpr auto GetComponent = 0x17e3d40;
		constexpr auto GetComponentFastPath = 0x17e3bd0;
		constexpr auto GetComponentInChildren = 0x17e3c30;
		constexpr auto GetComponentsInChildren = 0x17e3e20;
		constexpr auto GetComponentInParent = 0x17e3cc0;
		constexpr auto GetComponents = 0x17e3e80;
		constexpr auto GetComponentsForListInternal = 0x17e3dc0;
		constexpr auto CompareTag = 0x17e3b50;
		constexpr auto SendMessageUpwards = 0x17e3f70;
		constexpr auto SendMessage = 0x17e40b0;
		constexpr auto BroadcastMessage = 0x17e3ae0;
		constexpr auto ctor = 0x17de6f0;
	};

	namespace UnityEngine_Transform {

		constexpr auto ctor = 0x18a3050;
		constexpr auto get_position = 0x2102dd0;
		constexpr auto set_position = 0x2103750;
		constexpr auto get_localPosition = 0x2102aa0;
		constexpr auto set_localPosition = 0x21034c0;
		constexpr auto get_eulerAngles = 0x21027a0;
		constexpr auto set_eulerAngles = 0x2103210;
		constexpr auto get_localEulerAngles = 0x21029c0;
		constexpr auto set_localEulerAngles = 0x21033c0;
		constexpr auto get_right = 0x2102e20;
		constexpr auto set_right = 0x21037a0;
		constexpr auto get_up = 0x2103010;
		constexpr auto set_up = 0x2103990;
		constexpr auto get_forward = 0x2102830;
		constexpr auto set_forward = 0x21032c0;
		constexpr auto get_rotation = 0x2102fc0;
		constexpr auto set_rotation = 0x2103940;
		constexpr auto get_localRotation = 0x2102b40;
		constexpr auto set_localRotation = 0x2103560;
		constexpr auto get_localScale = 0x2102be0;
		constexpr auto set_localScale = 0x2103600;
		constexpr auto get_parent = 0x21011c0;
		constexpr auto set_parent = 0x2103650;
		constexpr auto get_parentInternal = 0x21011c0;
		constexpr auto set_parentInternal = 0x21021a0;
		constexpr auto GetParent = 0x21011c0;
		constexpr auto SetParent = 0x21021a0;
		constexpr auto get_worldToLocalMatrix = 0x21031b0;
		constexpr auto get_localToWorldMatrix = 0x2102c80;
		constexpr auto SetPositionAndRotation = 0x2102250;
		constexpr auto Translate = 0x2102590;
		constexpr auto Rotate = 0x2101bb0;
		constexpr auto RotateAroundInternal = 0x2101910;
		constexpr auto RotateAround = 0x2101970;
		constexpr auto LookAt = 0x2101740;
		constexpr auto Internal_LookAt = 0x21012e0;
		constexpr auto TransformDirection = 0x2102350;
		constexpr auto InverseTransformDirection = 0x21013a0;
		constexpr auto TransformVector = 0x21024d0;
		constexpr auto InverseTransformVector = 0x2101520;
		constexpr auto TransformPoint = 0x2102410;
		constexpr auto InverseTransformPoint = 0x2101460;
		constexpr auto get_root = 0x2101200;
		constexpr auto GetRoot = 0x2101200;
		constexpr auto get_childCount = 0x2102760;
		constexpr auto DetachChildren = 0x2100fd0;
		constexpr auto SetAsFirstSibling = 0x21020c0;
		constexpr auto SetAsLastSibling = 0x2102100;
		constexpr auto SetSiblingIndex = 0x21022b0;
		constexpr auto GetSiblingIndex = 0x2101240;
		constexpr auto FindRelativeTransformWithPath = 0x2101010;
		constexpr auto Find = 0x2101070;
		constexpr auto get_lossyScale = 0x2102d30;
		constexpr auto IsChildOf = 0x2101580;
		constexpr auto get_hasChanged = 0x2102980;
		constexpr auto set_hasChanged = 0x2103370;
		constexpr auto GetEnumerator = 0x2101150;
		constexpr auto GetChild = 0x2101110;
		constexpr auto get_position_Injected = 0x2102d80;
		constexpr auto set_position_Injected = 0x2103700;
		constexpr auto get_localPosition_Injected = 0x2102a50;
		constexpr auto set_localPosition_Injected = 0x2103470;
		constexpr auto get_rotation_Injected = 0x2102f70;
		constexpr auto set_rotation_Injected = 0x21038f0;
		constexpr auto get_localRotation_Injected = 0x2102af0;
		constexpr auto set_localRotation_Injected = 0x2103510;
		constexpr auto get_localScale_Injected = 0x2102b90;
		constexpr auto set_localScale_Injected = 0x21035b0;
		constexpr auto get_worldToLocalMatrix_Injected = 0x2103160;
		constexpr auto get_localToWorldMatrix_Injected = 0x2102c30;
		constexpr auto SetPositionAndRotation_Injected = 0x21021f0;
		constexpr auto RotateAroundInternal_Injected = 0x21018b0;
		constexpr auto Internal_LookAt_Injected = 0x2101280;
		constexpr auto TransformDirection_Injected = 0x21022f0;
		constexpr auto InverseTransformDirection_Injected = 0x2101340;
		constexpr auto TransformVector_Injected = 0x2102470;
		constexpr auto InverseTransformVector_Injected = 0x21014c0;
		constexpr auto TransformPoint_Injected = 0x21023b0;
		constexpr auto InverseTransformPoint_Injected = 0x2101400;
		constexpr auto get_lossyScale_Injected = 0x2102ce0;
	};

	namespace GameTrace {

		constexpr auto TraceAll = 0x55e250;
		constexpr auto Trace = 0x55eb40;
	};

	namespace HitTest {
		constexpr auto type = 0x10;
		constexpr auto AttackRay = 0x14;
		constexpr auto Radius = 0x2c;
		constexpr auto Forgiveness = 0x30;
		constexpr auto MaxDistance = 0x34;
		constexpr auto RayHit = 0x38;
		constexpr auto MultiHit = 0x64;
		constexpr auto BestHit = 0x65;
		constexpr auto DidHit = 0x66;
		constexpr auto damageProperties = 0x68;
		constexpr auto gameObject = 0x70;
		constexpr auto collider = 0x78;
		constexpr auto ignoreEntity = 0x80;
		constexpr auto HitEntity = 0x88;
		constexpr auto HitPoint = 0x90;
		constexpr auto HitNormal = 0x9c;
		constexpr auto HitDistance = 0xa8;
		constexpr auto HitTransform = 0xb0;
		constexpr auto HitPart = 0xb8;
		constexpr auto HitMaterial = 0xc0;

		constexpr auto HitPointWorld = 0x6e4b70;
		constexpr auto HitNormalWorld = 0x6e4a50;
		constexpr auto BuildAttackMessage = 0x6e41c0;
		constexpr auto Clear = 0x6e4970;
		constexpr auto ctor = 0x3045a0;
	};

	namespace UnityEngine_Quaternion {
		constexpr auto x = 0x10;
		constexpr auto y = 0x14;
		constexpr auto z = 0x18;
		constexpr auto w = 0x1c;

		constexpr auto FromToRotation = 0x18a93e0;
		constexpr auto Inverse = 0x18a97d0;
		constexpr auto Slerp = 0x18aa250;
		constexpr auto SlerpUnclamped = 0x18aa130;
		constexpr auto Lerp = 0x18a9a00;
		constexpr auto LerpUnclamped = 0x18a98e0;
		constexpr auto Internal_FromEulerRad = 0x18a9540;
		constexpr auto Internal_ToEulerRad = 0x18a96f0;
		constexpr auto AngleAxis = 0x18a8dc0;
		constexpr auto LookRotation = 0x18a9c60;
		constexpr auto ctor = 0xf08b0;
		constexpr auto get_identity = 0x18aa750;
		constexpr auto op_Multiply = 0x18aab70;
		constexpr auto IsEqualUsingDot = 0x18a9860;
		constexpr auto op_Equality = 0x18aa7c0;
		constexpr auto op_Inequality = 0x18aa880;
		constexpr auto Dot = 0x18a8f80;
		constexpr auto SetLookRotation = 0x219fd0;
		constexpr auto Angle = 0x18a8e60;
		constexpr auto Internal_MakePositive = 0x18a95d0;
		constexpr auto get_eulerAngles = 0x21a0f0;
		constexpr auto Euler = 0x18a90b0;
		constexpr auto RotateTowards = 0x18a9d00;
		constexpr auto GetHashCode = 0x219f60;
		constexpr auto Equals = 0x219e80;
		constexpr auto ToString = 0x21a0e0;
		constexpr auto cctor = 0x18aa540;
		constexpr auto FromToRotation_Injected = 0x18a9380;
		constexpr auto Inverse_Injected = 0x18a9780;
		constexpr auto Slerp_Injected = 0x18aa1e0;
		constexpr auto SlerpUnclamped_Injected = 0x18aa0c0;
		constexpr auto Lerp_Injected = 0x18a9990;
		constexpr auto LerpUnclamped_Injected = 0x18a9870;
		constexpr auto Internal_FromEulerRad_Injected = 0x18a94f0;
		constexpr auto Internal_ToEulerRad_Injected = 0x18a96a0;
		constexpr auto AngleAxis_Injected = 0x18a8d60;
		constexpr auto LookRotation_Injected = 0x18a9ab0;
	};

	namespace GamePhysics {
		constexpr auto hitBufferB = 0x8;
		constexpr auto colBuffer = 0x10;

		constexpr auto CheckSphere = 0x558f40;
		constexpr auto CheckCapsule = 0x558750;
		constexpr auto CheckOBB = 0x558e10;
		constexpr auto CheckBounds = 0x5585f0;
		constexpr auto CheckInsideNonConvexMesh = 0x558a60;
		constexpr auto CheckInsideAnyCollider = 0x5588d0;
		constexpr auto OverlapSphere = 0x55aa70;
		constexpr auto CapsuleSweep = 0x558350;
		constexpr auto OverlapCapsule = 0x55a7f0;
		constexpr auto OverlapOBB = 0x55a920;
		constexpr auto OverlapBounds = 0x55a650;
		constexpr auto BufferToList = 0x5581b0;
		constexpr auto HitBufferToList = 0x559110;
		constexpr auto Trace = 0x55b0f0;
		constexpr auto TraceAll = 0x55b020;
		constexpr auto TraceAllUnordered = 0x55ad50;
		constexpr auto LineOfSightRadius = 0x559700;
		constexpr auto LineOfSight = 0x559e30;
		constexpr auto LineOfSightInternal = 0x559280;
		constexpr auto Verify = 0x55b2f0;
		constexpr auto HandleTerrainCollision = 0x559000;
		constexpr auto Sort = 0x55ac50;
		constexpr auto cctor = 0x55b600;
	};

	namespace WaterLevel {

		constexpr auto Factor = 0xbced40;
		constexpr auto Test = 0xbd0ef0;
		constexpr auto GetWaterDepth = 0xbcf610;
		constexpr auto GetOverallWaterDepth = 0xbcf4c0;
		constexpr auto GetBuoyancyWaterInfo = 0xbcef20;
		constexpr auto GetWaterInfo = 0xbcf9a0;
		constexpr auto GetWaterInfoFromVolumes = 0xbcf750;
	};

	namespace System_Math {
		constexpr auto roundPower10Double = 0x8;

		constexpr auto Acos = 0x1620810;
		constexpr auto Asin = 0x1620820;
		constexpr auto Atan = 0x1620840;
		constexpr auto Atan2 = 0x1620830;
		constexpr auto Ceiling = 0x1620850;
		constexpr auto Cos = 0x1620860;
		constexpr auto Cosh = 0x1620870;
		constexpr auto Floor = 0x16208a0;
		constexpr auto InternalRound = 0x16208b0;
		constexpr auto InternalTruncate = 0x1620b10;
		constexpr auto Sin = 0x16215a0;
		constexpr auto Tan = 0x16215e0;
		constexpr auto Sinh = 0x16215b0;
		constexpr auto Round = 0x1621280;
		constexpr auto SplitFractionDouble = 0x16215c0;
		constexpr auto Truncate = 0x16215f0;
		constexpr auto Sqrt = 0x16215d0;
		constexpr auto Log = 0x1620ce0;
		constexpr auto Log10 = 0x1620b70;
		constexpr auto Exp = 0x1620890;
		constexpr auto Pow = 0x16210f0;
		constexpr auto Abs = 0x1620740;
		constexpr auto AbsHelper = 0x16205e0;
		constexpr auto Max = 0x1620d90;
		constexpr auto Min = 0x16210e0;
		constexpr auto Sign = 0x1621560;
		constexpr auto DivRem = 0x1620880;
		constexpr auto cctor = 0x16216a0;
	};

	namespace UnityEngine_Mathf {

		constexpr auto ClosestPowerOfTwo = 0x1899b20;
		constexpr auto IsPowerOfTwo = 0x1899f40;
		constexpr auto NextPowerOfTwo = 0x189a710;
		constexpr auto GammaToLinearSpace = 0x1899e10;
		constexpr auto LinearToGammaSpace = 0x189a1a0;
		constexpr auto FloatToHalf = 0x1899d10;
		constexpr auto HalfToFloat = 0x1899e50;
		constexpr auto PerlinNoise = 0x189a750;
		constexpr auto Sin = 0x189a9a0;
		constexpr auto Cos = 0x1899b60;
		constexpr auto Tan = 0x189ae80;
		constexpr auto Asin = 0x18998c0;
		constexpr auto Acos = 0x18997b0;
		constexpr auto Atan = 0x18999a0;
		constexpr auto Atan2 = 0x1899920;
		constexpr auto Sqrt = 0x189ae20;
		constexpr auto Abs = 0x1899750;
		constexpr auto Min = 0x189a3b0;
		constexpr auto Max = 0x189a320;
		constexpr auto Pow = 0x189a7a0;
		constexpr auto Exp = 0x1899cb0;
		constexpr auto Log = 0x189a2a0;
		constexpr auto Log10 = 0x189a1e0;
		constexpr auto Ceil = 0x1899a60;
		constexpr auto Floor = 0x1899db0;
		constexpr auto Round = 0x189a920;
		constexpr auto CeilToInt = 0x1899a00;
		constexpr auto FloorToInt = 0x1899d50;
		constexpr auto RoundToInt = 0x189a8c0;
		constexpr auto Sign = 0x189a980;
		constexpr auto Clamp = 0x1899ae0;
		constexpr auto Clamp01 = 0x1899ac0;
		constexpr auto Lerp = 0x189a100;
		constexpr auto LerpUnclamped = 0x189a0e0;
		constexpr auto LerpAngle = 0x1899f80;
		constexpr auto MoveTowards = 0x189a620;
		constexpr auto MoveTowardsAngle = 0x189a3c0;
		constexpr auto SmoothStep = 0x189ad60;
		constexpr auto Approximately = 0x1899810;
		constexpr auto SmoothDamp = 0x189ab90;
		constexpr auto Repeat = 0x189a820;
		constexpr auto InverseLerp = 0x1899e90;
		constexpr auto DeltaAngle = 0x1899bc0;
		constexpr auto cctor = 0x189aee0;
	};

	namespace Door {
		constexpr auto __menuOption_Menu_CloseDoor = 0x268;
		constexpr auto __menuOption_Menu_KnockDoor = 0x2c0;
		constexpr auto __menuOption_Menu_OpenDoor = 0x318;
		constexpr auto __menuOption_Menu_ToggleHatch = 0x370;
		constexpr auto knockEffect = 0x3c8;
		constexpr auto canTakeLock = 0x3d0;
		constexpr auto hasHatch = 0x3d1;
		constexpr auto canTakeCloser = 0x3d2;
		constexpr auto canTakeKnocker = 0x3d3;
		constexpr auto canNpcOpen = 0x3d4;
		constexpr auto canHandOpen = 0x3d5;
		constexpr auto isSecurityDoor = 0x3d6;
		constexpr auto vehiclePhysBoxes = 0x3d8;
		constexpr auto checkPhysBoxesOnOpen = 0x3e0;
		constexpr auto vehicleCollisionSfx = 0x3e8;
		constexpr auto ClosedColliderRoots = 0x3f0;
		constexpr auto closeHash = 0x4;

		constexpr auto GetMenuOptions = 0xbc6ba0;
		constexpr auto get_HasMenuOptions = 0xbc8680;
		constexpr auto OnRpcMessage = 0xbc7fd0;
		constexpr auto ResetState = 0xbc8420;
		constexpr auto HasSlot = 0xbc7790;
		constexpr auto CanPickup = 0xbc6a30;
		constexpr auto Menu_OpenDoor = 0xbc7b80;
		constexpr auto Menu_OpenDoor_Proxy = 0xbc7a60;
		constexpr auto Menu_OpenDoorStart = 0xbc7a20;
		constexpr auto Menu_OpenDoor_ShowIf = 0xbc7b40;
		constexpr auto Menu_CloseDoor = 0xbc7930;
		constexpr auto Menu_CloseDoor_Proxy = 0xbc7810;
		constexpr auto Menu_CloseDoorStart = 0xbc77d0;
		constexpr auto Menu_CloseDoor_ShowIf = 0xbc78f0;
		constexpr auto Menu_KnockDoor = 0xbc79e0;
		constexpr auto Menu_KnockDoor_ShowIf = 0xbc7970;
		constexpr auto Menu_ToggleHatch = 0xbc7bd0;
		constexpr auto Menu_ToggleHatch_ShowIf = 0xbc7bc0;
		constexpr auto NeedsCrosshair = 0x2f6d70;
		constexpr auto OnDoorInterrupted = 0xbc7c10;
		constexpr auto ReverseDoorAnimation = 0xbc8430;
		constexpr auto BoundsPadding = 0x2f66f0;
		constexpr auto OnObjects = 0x2f4fd0;
		constexpr auto OnEmpty = 0x2f4fd0;
		constexpr auto OnFlagsChanged = 0xbc7ea0;
		constexpr auto ctor = 0xbc8660;
		constexpr auto cctor = 0xbc85f0;
	};

	namespace UnityEngine_Object {
		constexpr auto m_CachedPtr = 0x10;

		constexpr auto GetInstanceID = 0x18a3940;
		constexpr auto GetHashCode = 0x18a3930;
		constexpr auto Equals = 0x18a3550;
		constexpr auto op_Implicit = 0x18a4940;
		constexpr auto CompareBaseObjects = 0x18a3260;
		constexpr auto IsNativeObjectAlive = 0x18a4590;
		constexpr auto GetCachedPtr = 0x17dc780;
		constexpr auto get_name = 0x18a4760;
		constexpr auto set_name = 0x18a4bc0;
		constexpr auto Instantiate = 0x18a4120;
		constexpr auto Destroy = 0x18a3450;
		constexpr auto DestroyImmediate = 0x18a3400;
		constexpr auto FindObjectsOfType = 0x18a38f0;
		constexpr auto DontDestroyOnLoad = 0x18a3510;
		constexpr auto get_hideFlags = 0x18a4720;
		constexpr auto set_hideFlags = 0x18a4b80;
		constexpr auto CheckNullArgument = 0x18a31f0;
		constexpr auto FindObjectOfType = 0x18a3860;
		constexpr auto ToString = 0x18a4630;
		constexpr auto op_Equality = 0x18a47d0;
		constexpr auto op_Inequality = 0x18a4a10;
		constexpr auto GetOffsetOfInstanceIDInCPlusPlusObject = 0x18a3ab0;
		constexpr auto Internal_CloneSingle = 0x18a4460;
		constexpr auto Internal_CloneSingleWithParent = 0x18a4400;
		constexpr auto Internal_InstantiateSingle = 0x18a4500;
		constexpr auto GetName = 0x18a3a70;
		constexpr auto SetName = 0x18a45e0;
		constexpr auto FindObjectFromInstanceID = 0x18a3820;
		constexpr auto ctor = 0x3045a0;
		constexpr auto cctor = 0x18a46e0;
		constexpr auto Internal_InstantiateSingle_Injected = 0x18a44a0;
	};

	namespace BaseMelee {
		constexpr auto canThrowAsProjectile = 0x278;
		constexpr auto canAiHearIt = 0x279;
		constexpr auto onlyThrowAsProjectile = 0x27a;
		constexpr auto damageProperties = 0x280;
		constexpr auto damageTypes = 0x288;
		constexpr auto maxDistance = 0x290;
		constexpr auto attackRadius = 0x294;
		constexpr auto isAutomatic = 0x298;
		constexpr auto blockSprintOnAttack = 0x299;
		constexpr auto strikeFX = 0x2a0;
		constexpr auto useStandardHitEffects = 0x2a8;
		constexpr auto aiStrikeDelay = 0x2ac;
		constexpr auto swingEffect = 0x2b0;
		constexpr auto materialStrikeFX = 0x2b8;
		constexpr auto heartStress = 0x2c0;
		constexpr auto gathering = 0x2c8;
		constexpr auto throwReady = 0x2d0;

		constexpr auto OnRpcMessage = 0x2f81a0;
		constexpr auto GetInheritedVelocity = 0x2f7bf0;
		constexpr auto DoThrow = 0x2f73c0;
		constexpr auto CreateProjectile = 0x2f6d80;
		constexpr auto GetAttackStats = 0x2f7b60;
		constexpr auto DoAttackShared = 0x2f6f30;
		constexpr auto OnInput = 0x2f7dc0;
		constexpr auto get_CanAttack = 0x2f6d70;
		constexpr auto get_CanThrow = 0x2f6d70;
		constexpr auto ClientAttack = 0x2f4fd0;
		constexpr auto OnHolstered = 0x2f7da0;
		constexpr auto ProcessAttack = 0x2f8350;
		constexpr auto DoAttack = 0x2f7180;
		constexpr auto DoViewmodelImpact = 0x2f7ad0;
		constexpr auto OnViewmodelEvent = 0x2f8290;
		constexpr auto ProcessSpectatorViewmodel = 0x2f8690;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x2f85e0;
		constexpr auto GetGatherInfoFromIndex = 0x2f7bc0;
		constexpr auto CanHit = 0x2f6d70;
		constexpr auto TotalDamage = 0x2f8740;
		constexpr auto CanBeUsedInWater = 0x2f6d70;
		constexpr auto GetStrikeEffectPath = 0x2f7c40;
		constexpr auto ctor = 0x2f88a0;
	};

	namespace ItemModProjectile {
		constexpr auto projectileObject = 0x18;
		constexpr auto mods = 0x20;
		constexpr auto ammoType = 0x28;
		constexpr auto numProjectiles = 0x2c;
		constexpr auto projectileSpread = 0x30;
		constexpr auto projectileVelocity = 0x34;
		constexpr auto projectileVelocitySpread = 0x38;
		constexpr auto useCurve = 0x3c;
		constexpr auto spreadScalar = 0x40;
		constexpr auto attackEffectOverride = 0x48;
		constexpr auto barrelConditionLoss = 0x50;
		constexpr auto category = 0x58;

		constexpr auto GetRandomVelocity = 0x6af740;
		constexpr auto GetSpreadScalar = 0x6af780;
		constexpr auto GetIndexedSpreadScalar = 0x6af6b0;
		constexpr auto GetAverageVelocity = 0x6af6a0;
		constexpr auto GetMinVelocity = 0x6af730;
		constexpr auto GetMaxVelocity = 0x6af720;
		constexpr auto IsAmmo = 0x6af7e0;
		constexpr auto ServerProjectileHit = 0x6af7f0;
		constexpr auto ctor = 0x6af8c0;
	};

	namespace RecoilProperties {
		constexpr auto recoilYawMin = 0x18;
		constexpr auto recoilYawMax = 0x1c;
		constexpr auto recoilPitchMin = 0x20;
		constexpr auto recoilPitchMax = 0x24;
		constexpr auto timeToTakeMin = 0x28;
		constexpr auto timeToTakeMax = 0x2c;
		constexpr auto ADSScale = 0x30;
		constexpr auto movementPenalty = 0x34;
		constexpr auto clampPitch = 0x38;
		constexpr auto pitchCurve = 0x40;
		constexpr auto yawCurve = 0x48;
		constexpr auto useCurves = 0x50;
		constexpr auto shotsUntilMax = 0x54;

		constexpr auto ctor = 0x586690;
	};

	namespace ItemDefinition {
		constexpr auto itemid = 0x18;
		constexpr auto shortname = 0x20;
		constexpr auto displayName = 0x28;
		constexpr auto displayDescription = 0x30;
		constexpr auto iconSprite = 0x38;
		constexpr auto category = 0x40;
		constexpr auto selectionPanel = 0x44;
		constexpr auto maxDraggable = 0x48;
		constexpr auto itemType = 0x4c;
		constexpr auto amountType = 0x50;
		constexpr auto occupySlots = 0x54;
		constexpr auto stackable = 0x58;
		constexpr auto quickDespawn = 0x5c;
		constexpr auto rarity = 0x60;
		constexpr auto spawnAsBlueprint = 0x64;
		constexpr auto inventorySelectSound = 0x68;
		constexpr auto inventoryGrabSound = 0x70;
		constexpr auto inventoryDropSound = 0x78;
		constexpr auto physImpactSoundDef = 0x80;
		constexpr auto condition = 0x88;
		constexpr auto hidden = 0xa0;
		constexpr auto flags = 0xa4;
		constexpr auto steamItem = 0xa8;
		constexpr auto steamDlc = 0xb0;
		constexpr auto Parent = 0xb8;
		constexpr auto worldModelPrefab = 0xc0;
		constexpr auto isRedirectOf = 0xc8;
		constexpr auto redirectVendingBehaviour = 0xd0;
		constexpr auto itemMods = 0xd8;
		constexpr auto Traits = 0xe0;
		constexpr auto skins = 0xe8;
		constexpr auto _skins2 = 0xf0;
		constexpr auto panel = 0xf8;
		constexpr auto ItemModWearablek__BackingField = 0x100;
		constexpr auto isHoldablek__BackingField = 0x108;
		constexpr auto isUsablek__BackingField = 0x109;
		constexpr auto CraftableWithSkink__BackingField = 0x10a;
		constexpr auto Children = 0x110;

		constexpr auto get_skins2 = 0x976cd0;
		constexpr auto InvalidateWorkshopSkinCache = 0x976a20;
		constexpr auto get_Blueprint = 0x976b30;
		constexpr auto get_craftingStackable = 0x976bf0;
		constexpr auto HasFlag = 0x9767a0;
		constexpr auto Initialize = 0x9767b0;
		constexpr auto GetDisplayName = 0x9766a0;
		constexpr auto GetDescriptionText = 0x9765d0;
		constexpr auto FindIconSprite = 0x976270;
		constexpr auto get_isWearable = 0x976c70;
		constexpr auto get_ItemModWearable = 0x976be0;
		constexpr auto set_ItemModWearable = 0x976f40;
		constexpr auto get_isHoldable = 0x976c50;
		constexpr auto set_isHoldable = 0x976f50;
		constexpr auto get_isUsable = 0x976c60;
		constexpr auto set_isUsable = 0x976f60;
		constexpr auto get_HasSkins = 0x976b80;
		constexpr auto get_CraftableWithSkin = 0x976b70;
		constexpr auto set_CraftableWithSkin = 0x976f30;
		constexpr auto ctor = 0x976ac0;
		constexpr auto Initializeb__45_0 = 0x976a40;
	};

	namespace PlayerInput {
		constexpr auto state = 0x20;
		constexpr auto hadInputBuffer = 0x28;
		constexpr auto bodyRotation = 0x2c;
		constexpr auto bodyAngles = 0x3c;
		constexpr auto headRotation = 0x48;
		constexpr auto headAngles = 0x58;
		constexpr auto recoilAngles = 0x64;
		constexpr auto viewDelta = 0x70;
		constexpr auto headLerp = 0x78;
		constexpr auto mouseWheelUp = 0x7c;
		constexpr auto mouseWheelDn = 0x80;
		constexpr auto autorun = 0x84;
		constexpr auto toggleDuck = 0x85;
		constexpr auto offsetAngles = 0x88;
		constexpr auto ignoredButtons = 0x94;
		constexpr auto hasKeyFocus = 0x98;

		constexpr auto OnDisable = 0xa0a020;
		constexpr auto FrameUpdate = 0xa092b0;
		constexpr auto Flip = 0xa09150;
		constexpr auto AdjustMouseMovement = 0xa07850;
		constexpr auto UpdateViewAngles = 0xa0a230;
		constexpr auto ApplyViewAngles = 0xa07a90;
		constexpr auto SetViewVars = 0xa0a110;
		constexpr auto FinalizeRecoil = 0xa08f80;
		constexpr auto ResetOffsetAngles = 0xa0a0a0;
		constexpr auto ClientAngles = 0xa08f50;
		constexpr auto ClientLookVars = 0xa08f60;
		constexpr auto HeadAngles = 0xa09660;
		constexpr auto HeadLookVars = 0xa09670;
		constexpr auto ModifyInputState = 0xa09f90;
		constexpr auto IsButtonDownNative = 0xa09ae0;
		constexpr auto BuildInputState = 0xa08610;
		constexpr auto IsAiming = 0xa09990;
		constexpr auto UpdateButton = 0xa0a1a0;
		constexpr auto IgnoreCurrentButtons = 0xa09690;
		constexpr auto get_hasOnlyPartialKeyInput = 0xa0a520;
		constexpr auto get_hasNoKeyInput = 0xa0a390;
		constexpr auto UpdateKeyFocus = 0xa0a210;
		constexpr auto IgnoreCurrentKeys = 0xa097a0;
		constexpr auto ctor = 0xa0a320;
	};

	namespace PlayerModel {
		constexpr auto pm_downlimit = 0x4;
		constexpr auto pm_upspine = 0x8;
		constexpr auto pm_downspine = 0xc;
		constexpr auto pm_lookoffset = 0x10;
		constexpr auto pm_anglesmoothspeed = 0x1c;
		constexpr auto pm_nohold = 0x20;
		constexpr auto pm_ladder = 0x24;
		constexpr auto pm_minweight = 0x28;
		constexpr auto _smoothAimWeight = 0x18;
		constexpr auto _smoothVelocity = 0x1c;
		constexpr auto _smoothlookAngle = 0x20;
		constexpr auto allowMountedHeadLook = 0x2c;
		constexpr auto smoothLookDir = 0x30;
		constexpr auto lastSafeLookDir = 0x3c;
		constexpr auto Shoulders = 0x48;
		constexpr auto AdditionalSpineBones = 0x50;
		constexpr auto FinishedLegWearables = 0x30;
		constexpr auto LegParts = 0x58;
		constexpr auto fakeSpineBones = 0x60;
		constexpr auto extraLeanBack = 0x68;
		constexpr auto drawState = 0x6c;
		constexpr auto timeInArmsMode = 0x70;
		constexpr auto speed = 0x38;
		constexpr auto acceleration = 0x3c;
		constexpr auto rotationYaw = 0x40;
		constexpr auto forward = 0x44;
		constexpr auto right = 0x48;
		constexpr auto up = 0x4c;
		constexpr auto ducked = 0x50;
		constexpr auto grounded = 0x54;
		constexpr auto crawling = 0x58;
		constexpr auto waterlevel = 0x5c;
		constexpr auto attack = 0x60;
		constexpr auto attack_alt = 0x64;
		constexpr auto deploy = 0x68;
		constexpr auto reload = 0x6c;
		constexpr auto throwWeapon = 0x70;
		constexpr auto holster = 0x74;
		constexpr auto aiming = 0x78;
		constexpr auto onLadder = 0x7c;
		constexpr auto posing = 0x80;
		constexpr auto poseType = 0x84;
		constexpr auto relaxGunPose = 0x88;
		constexpr auto vehicle_aim_yaw = 0x8c;
		constexpr auto vehicle_aim_speed = 0x90;
		constexpr auto onPhone = 0x94;
		constexpr auto usePoseTransition = 0x98;
		constexpr auto leftFootIK = 0x9c;
		constexpr auto rightFootIK = 0xa0;
		constexpr auto vehicleSteering = 0xa4;
		constexpr auto sitReaction = 0xa8;
		constexpr auto forwardReaction = 0xac;
		constexpr auto rightReaction = 0xb0;
		constexpr auto collision = 0x78;
		constexpr auto censorshipCube = 0x80;
		constexpr auto censorshipCubeBreasts = 0x88;
		constexpr auto jawBone = 0x90;
		constexpr auto neckBone = 0x98;
		constexpr auto headBone = 0xa0;
		constexpr auto eyeController = 0xa8;
		constexpr auto blinkController = 0xb0;
		constexpr auto SpineBones = 0xb8;
		constexpr auto leftFootBone = 0xc0;
		constexpr auto rightFootBone = 0xc8;
		constexpr auto leftHandPropBone = 0xd0;
		constexpr auto rightHandPropBone = 0xd8;
		constexpr auto rightHandTarget = 0xe0;
		constexpr auto leftHandTargetPosition = 0xec;
		constexpr auto leftHandTargetRotation = 0xf8;
		constexpr auto rightHandTargetPosition = 0x108;
		constexpr auto rightHandTargetRotation = 0x114;
		constexpr auto steeringTargetDegrees = 0x124;
		constexpr auto rightFootTargetPosition = 0x128;
		constexpr auto rightFootTargetRotation = 0x134;
		constexpr auto leftFootTargetPosition = 0x144;
		constexpr auto leftFootTargetRotation = 0x150;
		constexpr auto CinematicAnimationController = 0x160;
		constexpr auto DefaultAvatar = 0x168;
		constexpr auto CinematicAvatar = 0x170;
		constexpr auto DefaultHoldType = 0x178;
		constexpr auto SleepGesture = 0x180;
		constexpr auto CrawlToIncapacitatedGesture = 0x188;
		constexpr auto StandToIncapacitatedGesture = 0x190;
		constexpr auto CurrentGesture = 0x198;
		constexpr auto MaleSkin = 0x1a0;
		constexpr auto FemaleSkin = 0x1a8;
		constexpr auto subsurfaceProfile = 0x1b0;
		constexpr auto voiceVolume = 0x1b8;
		constexpr auto skinColor = 0x1bc;
		constexpr auto skinNumber = 0x1c0;
		constexpr auto meshNumber = 0x1c4;
		constexpr auto hairNumber = 0x1c8;
		constexpr auto skinType = 0x1cc;
		constexpr auto movementSounds = 0x1d0;
		constexpr auto showSash = 0x1d8;
		constexpr auto tempPoseType = 0x1dc;
		constexpr auto underwearSkin = 0x1e0;
		constexpr auto overrideSkinSeedk__BackingField = 0x1e8;
		constexpr auto AimAnglesk__BackingField = 0x1f0;
		constexpr auto LookAnglesk__BackingField = 0x200;
		constexpr auto modelState = 0x210;
		constexpr auto position = 0x218;
		constexpr auto velocity = 0x224;
		constexpr auto speedOverride = 0x230;
		constexpr auto newVelocity = 0x23c;
		constexpr auto rotation = 0x248;
		constexpr auto mountedRotation = 0x258;
		constexpr auto smoothLeftFootIK = 0x268;
		constexpr auto smoothRightFootIK = 0x274;
		constexpr auto drawShadowOnly = 0x280;
		constexpr auto isIncapacitated = 0x281;
		constexpr auto flinchLocation = 0x284;
		constexpr auto visible = 0x288;
		constexpr auto nameTag = 0x290;
		constexpr auto animatorNeedsWarmup = 0x298;
		constexpr auto isLocalPlayer = 0x299;
		constexpr auto aimSoundDef = 0x2a0;
		constexpr auto aimEndSoundDef = 0x2a8;
		constexpr auto InGesture = 0x2b0;
		constexpr auto CurrentGestureConfig = 0x2b8;
		constexpr auto InCinematic = 0x2c0;
		constexpr auto defaultAnimatorController = 0x2c8;
		constexpr auto _multiMesh = 0x2d0;
		constexpr auto _animator = 0x2d8;
		constexpr auto _lodGroup = 0x2e0;
		constexpr auto _currentGesture = 0x2e8;
		constexpr auto holdTypeLock = 0x2f0;
		constexpr auto wasMountedRightAim = 0x2f4;
		constexpr auto cachedMask = 0x2f8;
		constexpr auto cachedConstructionMask = 0x2fc;
		constexpr auto WorkshopHeldEntity = 0x300;
		constexpr auto wasCrawling = 0x308;
		constexpr auto mountedSpineLookWeight = 0x30c;
		constexpr auto mountedAnimSpeed = 0x310;
		constexpr auto preserveBones = 0x314;
		constexpr auto downLimitOverride = 0x318;
		constexpr auto IsNpck__BackingField = 0x320;
		constexpr auto timeSinceReactionStart = 0x324;
		constexpr auto timeSinceLeftFootTest = 0x328;
		constexpr auto cachedLeftFootPos = 0x32c;
		constexpr auto cachedLeftFootNormal = 0x338;
		constexpr auto timeSinceRightFootTest = 0x344;
		constexpr auto cachedRightFootPos = 0x348;
		constexpr auto cachedRightFootNormal = 0x354;

		constexpr auto SetMountedLookAtOverride = 0xa16aa0;
		constexpr auto SpineIk = 0xa16ec0;
		constexpr auto ParentArmsToCamera = 0xa14ce0;
		constexpr auto OnAnimatorIK = 0xa14350;
		constexpr auto HandIK = 0xa12960;
		constexpr auto FootIK = 0xa0f170;
		constexpr auto HeadIK = 0xa12dc0;
		constexpr auto get_ShouldDoLegs = 0xa1c800;
		constexpr auto get_ShouldShowHands = 0xa1c880;
		constexpr auto ClearLegs = 0xa0dfe0;
		constexpr auto RebuildLegs = 0xa15690;
		constexpr auto InitializeLegSpineBones = 0xa134f0;
		constexpr auto UpdateLegsBeforeRender = 0xa186d0;
		constexpr auto UpdateLegsDisable = 0xa195c0;
		constexpr auto AddLegRenderer = 0xa0d510;
		constexpr auto SwapLegBone = 0xa178b0;
		constexpr auto GetFlat = 0xa11dd0;
		constexpr auto RebuildAll = 0xa15290;
		constexpr auto get_overrideSkinSeed = 0xa1cb60;
		constexpr auto set_overrideSkinSeed = 0xa1cba0;
		constexpr auto get_IsFemale = 0xa1c7b0;
		constexpr auto get_SkinSet = 0xa1c960;
		constexpr auto get_AimAngles = 0xa1c660;
		constexpr auto set_AimAngles = 0xa1cb70;
		constexpr auto get_LookAngles = 0xa1c7f0;
		constexpr auto set_LookAngles = 0xa1cb90;
		constexpr auto get_GestureAllowsSpineMovement = 0xa1c710;
		constexpr auto get_GestureAllowsRootMotion = 0xa1c670;
		constexpr auto get_IsFirstPerson = 0xa1c7c0;
		constexpr auto get_IsNpc = 0xa1c7e0;
		constexpr auto set_IsNpc = 0xa1cb80;
		constexpr auto get_multiMesh = 0xa1cac0;
		constexpr auto get_animator = 0xa1c980;
		constexpr auto get_lodGroup = 0xa1ca20;
		constexpr auto GetTargetVelocity = 0xa12800;
		constexpr auto Awake = 0xa0df40;
		constexpr auto OnEnable = 0xa14770;
		constexpr auto OnDisable = 0xa14480;
		constexpr auto SetDefaultAnimatorWeights = 0xa163b0;
		constexpr auto UpdateMultiMesh = 0xa19c60;
		constexpr auto UpdateCensorship = 0xa17df0;
		constexpr auto UpdateCollider = 0xa18270;
		constexpr auto UpdateModelState = 0xa19c10;
		constexpr auto UpdatePosition = 0xa1a720;
		constexpr auto UpdateRotation = 0xa1a840;
		constexpr auto UpdateLocalVelocity = 0xa19b40;
		constexpr auto UpdateVelocity = 0xa1b1c0;
		constexpr auto UpdateParameters = 0xa19df0;
		constexpr auto UpdateFrom = 0xa184e0;
		constexpr auto UpdateGlobalShaderConstants = 0xa18540;
		constexpr auto LateCycle = 0xa13cd0;
		constexpr auto FrameUpdate = 0xa113e0;
		constexpr auto FrameUpdate_Default = 0xa10a00;
		constexpr auto FrameUpdate_Sleeping = 0xa11110;
		constexpr auto FrameUpdate_Incapacitated = 0xa10b70;
		constexpr auto FrameUpdate_OnLadder = 0xa10e40;
		constexpr auto GetAim360 = 0xa11b60;
		constexpr auto UpdateVehicleAim360 = 0xa1acd0;
		constexpr auto ResetCurrentState = 0xa16260;
		constexpr auto DoAimingSounds = 0xa0e910;
		constexpr auto SetAimSounds = 0xa16370;
		constexpr auto SetMountedLookAtWeight = 0xa16ab0;
		constexpr auto SetMountedAnimationSpeed = 0xa16a90;
		constexpr auto UpdateLocalPlayerPosition = 0xa197f0;
		constexpr auto Attack = 0xa0dec0;
		constexpr auto AltAttack = 0xa0db80;
		constexpr auto Deploy = 0xa0e860;
		constexpr auto Reload = 0xa15fe0;
		constexpr auto Holster = 0xa13470;
		constexpr auto Flinch = 0xa0f110;
		constexpr auto SetReactionAnim = 0xa16ac0;
		constexpr auto OnReactionEnded = 0xa14cb0;
		constexpr auto Throw = 0xa17be0;
		constexpr auto Gesture = 0xa117d0;
		constexpr auto FadeInGestureUpperBodyLayer = 0xa0eb70;
		constexpr auto FadeOutGestureUpperBodyLayer = 0xa0ee60;
		constexpr auto FadeInGestureFullBodyLayer = 0xa0ea50;
		constexpr auto FadeOutGestureFullBodyLayer = 0xa0ec90;
		constexpr auto AnimatorWarmup = 0xa0dc30;
		constexpr auto AlwaysAnimate = 0xa0dc00;
		constexpr auto SetHoldType = 0xa16710;
		constexpr auto FadeOutGestureLayer = 0xa0edf0;
		constexpr auto SetGesture = 0xa164c0;
		constexpr auto FadeOutPlayerGestureLayers = 0xa0efc0;
		constexpr auto StopGesture = 0xa177b0;
		constexpr auto PlayCinematic = 0xa15100;
		constexpr auto StopCinematic = 0xa17750;
		constexpr auto SetSpeedOverride = 0xa16ea0;
		constexpr auto GetReplacementUnderwear = 0xa12740;
		constexpr auto RemoveUnderwearParts = 0xa16130;
		constexpr auto Clear = 0xa0e140;
		constexpr auto Rebuild = 0xa15a50;
		constexpr auto AddPart = 0xa0d8a0;
		constexpr auto RemovePart = 0xa16060;
		constexpr auto HasPart = 0xa12d00;
		constexpr auto IsBarefoot = 0xa13c40;
		constexpr auto GetSkinColor = 0xa12780;
		constexpr auto SetSkinProperties = 0xa16d80;
		constexpr auto RefreshUnderwear = 0xa15c50;
		constexpr auto ForceModelSeed = 0xa107d0;
		constexpr auto FindBone = 0xa0f0e0;
		constexpr auto GetBones = 0xa11da0;
		constexpr auto GetFootPlacement = 0xa11e10;
		constexpr auto ApplyVisibility = 0xa0dc90;
		constexpr auto ToggleUpdateOffscreen = 0xa17c80;
		constexpr auto OnParentDestroying = 0xa14bb0;
		constexpr auto WorkshopPreviewSetup = 0xa1b5d0;
		constexpr auto ctor = 0xa1c4b0;
		constexpr auto cctor = 0xa1bf70;
	};

	namespace ProtoBuf_PlayerTeam {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto teamID = 0x18;
		constexpr auto teamName = 0x20;
		constexpr auto teamLeader = 0x28;
		constexpr auto members = 0x30;
		constexpr auto teamLifetime = 0x38;
		constexpr auto mapNote = 0x40;

		constexpr auto ResetToPool = 0x1ecacc0;
		constexpr auto Dispose = 0x1eca8c0;
		constexpr auto EnterPool = 0xb5a2d0;
		constexpr auto LeavePool = 0xb5a300;
		constexpr auto CopyTo = 0x1ec8dd0;
		constexpr auto Copy = 0x1ec9010;
		constexpr auto Deserialize = 0x1ec9dc0;
		constexpr auto DeserializeLengthDelimited = 0x1ec9090;
		constexpr auto DeserializeLength = 0x1ec9540;
		constexpr auto FromProto = 0x1eca940;
		constexpr auto WriteToStream = 0x1ecbb80;
		constexpr auto WriteToStreamDelta = 0x1ecbba0;
		constexpr auto ReadFromStream = 0x1ecaca0;
		constexpr auto SerializeDelta = 0x1ecb170;
		constexpr auto Serialize = 0x1ecb790;
		constexpr auto ToProtoBytes = 0x1ecbb70;
		constexpr auto ToProto = 0x1ecbb80;
		constexpr auto SerializeToBytes = 0x1ecb680;
		constexpr auto SerializeLengthDelimited = 0x1ecb5d0;
		constexpr auto ctor = 0xb5ab90;
	};

	namespace PlayerInventory {
		constexpr auto containerMain = 0x20;
		constexpr auto containerBelt = 0x28;
		constexpr auto containerWear = 0x30;
		constexpr auto crafting = 0x38;
		constexpr auto loot = 0x40;

		constexpr auto OnRpcMessage = 0xa0b350;
		constexpr auto Initialize = 0xa0afd0;
		constexpr auto DoDestroy = 0xa0a7b0;
		constexpr auto ClientInit = 0xa0a730;
		constexpr auto UpdatedItemContainer = 0xa0b7a0;
		constexpr auto FindItemUID = 0xa0adf0;
		constexpr auto FindItemID = 0xa0ab10;
		constexpr auto FindBySubEntityID = 0xa0a890;
		constexpr auto FindItemIDs = 0xa0ad00;
		constexpr auto FindContainer = 0xa0a960;
		constexpr auto GetContainer = 0xa0af50;
		constexpr auto Load = 0xa0b200;
		constexpr auto GetAmount = 0xa0aed0;
		constexpr auto AllItems = 0xa0a660;
		constexpr auto AllItemsNoAlloc = 0xa0a590;
		constexpr auto FindAmmo = 0xa0a840;
		constexpr auto HasAmmo = 0xa0af70;
		constexpr auto ctor = 0xa0b990;
	};

	namespace ItemContainer {
		constexpr auto flags = 0x10;
		constexpr auto allowedContents = 0x14;
		constexpr auto onlyAllowedItems = 0x18;
		constexpr auto availableSlots = 0x20;
		constexpr auto capacity = 0x28;
		constexpr auto uid = 0x2c;
		constexpr auto dirty = 0x30;
		constexpr auto itemList = 0x38;
		constexpr auto temperature = 0x40;
		constexpr auto parent = 0x48;
		constexpr auto playerOwner = 0x50;
		constexpr auto entityOwner = 0x58;
		constexpr auto isServer = 0x60;
		constexpr auto maxStackSize = 0x64;

		constexpr auto HasFlag = 0x9746c0;
		constexpr auto SetFlag = 0x975770;
		constexpr auto IsLocked = 0x974890;
		constexpr auto PlayerItemInputBlocked = 0x9753b0;
		constexpr auto get_HasLimitedAllowedItems = 0x975ab0;
		constexpr auto OnChanged = 0x975310;
		constexpr auto ClientInitialize = 0x973820;
		constexpr auto FindItemByUID = 0x973dc0;
		constexpr auto IsFull = 0x974840;
		constexpr auto IsEmpty = 0x974800;
		constexpr auto CanAccept = 0x9736f0;
		constexpr auto GetMaxTransferAmount = 0x974370;
		constexpr auto SetOnlyAllowedItem = 0x975790;
		constexpr auto SetOnlyAllowedItems = 0x975850;
		constexpr auto Insert = 0x9746d0;
		constexpr auto SlotTaken = 0x9759e0;
		constexpr auto GetSlot = 0x974520;
		constexpr auto FindPosition = 0x9740a0;
		constexpr auto Clear = 0x973740;
		constexpr auto Kill = 0x9748a0;
		constexpr auto GetAmount = 0x9741f0;
		constexpr auto FindItemByItemID = 0x973c50;
		constexpr auto FindItemsByItemName = 0x973f50;
		constexpr auto FindBySubEntityID = 0x9739f0;
		constexpr auto FindItemsByItemID = 0x973ea0;
		constexpr auto Save = 0x9753c0;
		constexpr auto Load = 0x974b60;
		constexpr auto GetOwnerPlayer = 0x58fbe0;
		constexpr auto FindAmmo = 0x973930;
		constexpr auto HasAmmo = 0x9745f0;
		constexpr auto GetAmmoAmount = 0x974130;
		constexpr auto ContentsHash = 0x973860;
		constexpr auto FindContainer = 0x973b60;
		constexpr auto CanAcceptItem = 0x973280;
		constexpr auto ctor = 0x975a00;
	};

	namespace Item {
		constexpr auto amountOverride = 0x10;
		constexpr auto DefaultArmourBreakEffectPath = 0x8;
		constexpr auto _condition = 0x18;
		constexpr auto _maxCondition = 0x1c;
		constexpr auto info = 0x20;
		constexpr auto uid = 0x28;
		constexpr auto dirty = 0x2c;
		constexpr auto amount = 0x30;
		constexpr auto position = 0x34;
		constexpr auto busyTime = 0x38;
		constexpr auto removeTime = 0x3c;
		constexpr auto fuel = 0x40;
		constexpr auto isServer = 0x44;
		constexpr auto instanceData = 0x48;
		constexpr auto skin = 0x50;
		constexpr auto name = 0x58;
		constexpr auto text = 0x60;
		constexpr auto OnDirty = 0x68;
		constexpr auto flags = 0x70;
		constexpr auto contents = 0x78;
		constexpr auto parent = 0x80;
		constexpr auto worldEnt = 0x88;
		constexpr auto heldEntity = 0x98;

		constexpr auto UpdateAmountDisplay = 0x97d580;
		constexpr auto FormatAmount = 0x97c030;
		constexpr auto set_condition = 0x97e550;
		constexpr auto get_condition = 0x72eb30;
		constexpr auto set_maxCondition = 0x97e5d0;
		constexpr auto get_maxCondition = 0x72eb00;
		constexpr auto get_maxConditionNormalized = 0x97e300;
		constexpr auto get_conditionNormalized = 0x97de90;
		constexpr auto set_conditionNormalized = 0x97e4b0;
		constexpr auto get_hasCondition = 0x97df90;
		constexpr auto get_isBroken = 0x97e1d0;
		constexpr auto get_despawnMultiplier = 0x97ded0;
		constexpr auto get_blueprintTargetDef = 0x97de60;
		constexpr auto get_blueprintTarget = 0x97de80;
		constexpr auto set_blueprintTarget = 0x97e420;
		constexpr auto get_blueprintAmount = 0x97de50;
		constexpr auto set_blueprintAmount = 0x97e410;
		constexpr auto IsBlueprint = 0x97c570;
		constexpr auto add_OnDirty = 0x97dd90;
		constexpr auto remove_OnDirty = 0x97e370;
		constexpr auto HasFlag = 0x97c560;
		constexpr auto SetFlag = 0x97d080;
		constexpr auto IsOn = 0x97c7a0;
		constexpr auto IsOnFire = 0x97c790;
		constexpr auto IsCooking = 0x97c750;
		constexpr auto IsLocked = 0x97c760;
		constexpr auto get_parentItem = 0x97e330;
		constexpr auto MarkDirty = 0x97cbd0;
		constexpr auto OnChanged = 0x97ccc0;
		constexpr auto CollectedForCrafting = 0x2f4fd0;
		constexpr auto ReturnedFromCancelledCraft = 0x2f4fd0;
		constexpr auto IsChildContainer = 0x97c5c0;
		constexpr auto IsBusy = 0x97c590;
		constexpr auto BusyFor = 0x97bae0;
		constexpr auto Remove = 0x97ce70;
		constexpr auto DoRemove = 0x97bd90;
		constexpr auto SwitchOnOff = 0x97d210;
		constexpr auto LockUnlock = 0x97cb50;
		constexpr auto get_temperature = 0x97e350;
		constexpr auto GetOwnerPlayer = 0x97c370;
		constexpr auto CanBeHeld = 0x97bb10;
		constexpr auto CanStack = 0x97bb50;
		constexpr auto IsValid = 0x97c7b0;
		constexpr auto SetWorldEntity = 0x97d0a0;
		constexpr auto OnMovedToWorld = 0x97cde0;
		constexpr auto GetWorldEntity = 0x97c420;
		constexpr auto GetHeldEntity = 0x97c350;
		constexpr auto BeltBarSelect = 0x97ba40;
		constexpr auto GetTotalUISlots = 0x97c390;
		constexpr auto GetFilledUISlots = 0x97c2c0;
		constexpr auto HasAmmo = 0x97c440;
		constexpr auto FindAmmo = 0x97bde0;
		constexpr auto GetAmmoAmount = 0x97c190;
		constexpr auto ToString = 0x97d290;
		constexpr auto FindItem = 0x97bf20;
		constexpr auto MaxStackable = 0x97cc30;
		constexpr auto get_iconSprite = 0x97e030;
		constexpr auto get_isLoadingIconSprite = 0x97e200;
		constexpr auto get_Traits = 0x97de30;
		constexpr auto Save = 0x97ced0;
		constexpr auto Load = 0x97c7c0;
		constexpr auto ctor = 0x97dd70;
		constexpr auto cctor = 0x97dc80;
		constexpr auto get_iconSpriteb__95_0 = 0x97d570;
		constexpr auto get_isLoadingIconSpriteb__97_0 = 0x97d570;
	};

	namespace Model {
		constexpr auto collision = 0x18;
		constexpr auto rootBone = 0x20;
		constexpr auto headBone = 0x28;
		constexpr auto eyeBone = 0x30;
		constexpr auto animator = 0x38;
		constexpr auto skeleton = 0x40;
		constexpr auto boneTransforms = 0x48;
		constexpr auto boneNames = 0x50;
		constexpr auto boneDict = 0x58;
		constexpr auto skin = 0x60;
		constexpr auto _lodGroup = 0x68;

		constexpr auto OnEnable = 0x72e090;
		constexpr auto BuildBoneDictionary = 0x72d800;
		constexpr auto GetSkin = 0x500f70;
		constexpr auto FindBoneInternal = 0x72d8f0;
		constexpr auto FindBone = 0x72d980;
		constexpr auto FindBoneID = 0x72d8b0;
		constexpr auto GetBones = 0x72db90;
		constexpr auto FindClosestBone = 0x72d9f0;
		constexpr auto get_lodGroup = 0x72e880;
		constexpr auto OnDisable = 0x72df60;
		constexpr auto SyncBones = 0x72e460;
		constexpr auto Trigger = 0x72e7d0;
		constexpr auto GetTransform = 0x72dbc0;
		constexpr auto ApplyVisibility = 0x72d670;
		constexpr auto PreProcess = 0x72e0a0;
		constexpr auto ctor = 0x2f8ac0;
	};

	namespace MedicalTool {
		constexpr auto healDurationSelf = 0x278;
		constexpr auto healDurationOther = 0x27c;
		constexpr auto healDurationOtherWounded = 0x280;
		constexpr auto maxDistanceOther = 0x284;
		constexpr auto canUseOnOther = 0x288;
		constexpr auto canRevive = 0x289;
		constexpr auto useTarget = 0x290;
		constexpr auto resetTime = 0x298;

		constexpr auto OnRpcMessage = 0x7dab40;
		constexpr auto GetTarget = 0x7da3e0;
		constexpr auto AnyPressed = 0x7da310;
		constexpr auto OnInput = 0x7da790;
		constexpr auto OnViewmodelEvent = 0x7daf10;
		constexpr auto Reset = 0x7db120;
		constexpr auto OnDeploy = 0x7da730;
		constexpr auto OnHolstered = 0x7da760;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x7db060;
		constexpr auto ctor = 0x7db140;
	};

	namespace HeldEntity {
		constexpr auto _punches = 0x160;
		constexpr auto punchAdded = 0x168;
		constexpr auto lastPunchTime = 0x174;
		constexpr auto worldModelAnimator = 0x178;
		constexpr auto thirdPersonDeploySound = 0x180;
		constexpr auto thirdPersonAimSound = 0x188;
		constexpr auto thirdPersonAimEndSound = 0x190;
		constexpr auto viewModel = 0x198;
		constexpr auto isDeployed = 0x1a0;
		constexpr auto nextExamineTime = 0x1a4;
		constexpr auto handBone = 0x1a8;
		constexpr auto HoldAnimationOverride = 0x1b0;
		constexpr auto isBuildingTool = 0x1b8;
		constexpr auto hostileScore = 0x1bc;
		constexpr auto holsterInfo = 0x1c0;
		constexpr auto HeldCameraMode = 0x1c8;
		constexpr auto FirstPersonArmOffset = 0x1cc;
		constexpr auto FirstPersonArmRotation = 0x1d8;
		constexpr auto FirstPersonRotationStrength = 0x1e4;
		constexpr auto ownerItemUID = 0x1e8;

		constexpr auto OnRpcMessage = 0x76a300;
		constexpr auto AddPunch = 0x769580;
		constexpr auto CL_Punch = 0x769650;
		constexpr auto DoRecoilCompensation = 0x2f4fd0;
		constexpr auto SimPunches = 0x76aaf0;
		constexpr auto ClientInit = 0x769700;
		constexpr auto GetFovOverride = 0x769980;
		constexpr auto DoNetworkDestroy = 0x7697d0;
		constexpr auto PostLateClientCycle = 0x2f4fd0;
		constexpr auto PostNetworkUpdate = 0x76a7b0;
		constexpr auto UpdateHolsteredOffset = 0x76afd0;
		constexpr auto EditViewAngles = 0x2f4fd0;
		constexpr auto ClampPitch = 0x2f4fd0;
		constexpr auto OnFrame = 0x76a170;
		constexpr auto OnInput = 0x2f4fd0;
		constexpr auto Examine = 0x769810;
		constexpr auto OnDeploy = 0x769eb0;
		constexpr auto OnDeployed = 0x76a160;
		constexpr auto OnHolster = 0x76a190;
		constexpr auto OnHolstered = 0x76a2f0;
		constexpr auto OnViewmodelEvent = 0x2f4fd0;
		constexpr auto OnReliableEvent = 0x2f4fd0;
		constexpr auto ModifyCamera = 0x2f4fd0;
		constexpr auto ShouldDestroyImmediately = 0x2f6d70;
		constexpr auto UpdatePlayerModel = 0x76b7d0;
		constexpr auto ProcessPlayerModel = 0x2f4fd0;
		constexpr auto GetHoldAnimations = 0x769b70;
		constexpr auto GetMovementMultiplier = 0x2fcff0;
		constexpr auto OnSpawnedForWorkshopPreview = 0x2f4fd0;
		constexpr auto HeldEntityBlocksMovement = 0x2f4190;
		constexpr auto ProcessSpectatorViewmodel = 0x2f4fd0;
		constexpr auto ProcessSpectatorViewmodelEvent = 0x76aa40;
		constexpr auto get_hostile = 0x76b980;
		constexpr auto LightsOn = 0x68b510;
		constexpr auto IsDeployed = 0x769e40;
		constexpr auto GetOwnerPlayer = 0x769d80;
		constexpr auto GetOwnerConnection = 0x769b90;
		constexpr auto CanBeUsedInWater = 0x2f4190;
		constexpr auto BlocksGestures = 0x2f4190;
		constexpr auto GetOwnerItem = 0x769ca0;
		constexpr auto GetItem = 0x769b80;
		constexpr auto GetOwnerItemDefinition = 0x769c20;
		constexpr auto IsInstrument = 0x2f4190;
		constexpr auto Load = 0x769e50;
		constexpr auto ctor = 0x76b890;
		constexpr auto cctor = 0x76b850;
	};

	namespace UnityEngine_GUIContent {
		constexpr auto m_Text = 0x10;
		constexpr auto m_Image = 0x18;
		constexpr auto m_Tooltip = 0x20;
		constexpr auto s_Image = 0x8;
		constexpr auto s_TextImage = 0x10;
		constexpr auto none = 0x18;

		constexpr auto get_text = 0x17dc780;
		constexpr auto set_text = 0x5a57d0;
		constexpr auto set_image = 0x5051f0;
		constexpr auto get_tooltip = 0x19f8280;
		constexpr auto set_tooltip = 0x2feeb0;
		constexpr auto ctor = 0x19f81f0;
		constexpr auto Temp = 0x19f7ad0;
		constexpr auto ClearStaticCache = 0x19f7970;
		constexpr auto cctor = 0x19f7da0;
	};

	namespace BaseCombatEntity {
		constexpr auto __menuOption_Menu_Pickup = 0x160;
		constexpr auto skeletonProperties = 0x1b8;
		constexpr auto baseProtection = 0x1c0;
		constexpr auto startHealth = 0x1c8;
		constexpr auto pickup = 0x1d0;
		constexpr auto repair = 0x1f0;
		constexpr auto ShowHealthInfo = 0x218;
		constexpr auto lifestate = 0x21c;
		constexpr auto sendsHitNotification = 0x220;
		constexpr auto sendsMeleeHitNotification = 0x221;
		constexpr auto markAttackerHostile = 0x222;
		constexpr auto _health = 0x224;
		constexpr auto _maxHealth = 0x228;
		constexpr auto faction = 0x22c;
		constexpr auto deathTime = 0x230;
		constexpr auto lastNotifyFrame = 0x234;

		constexpr auto GetMenuOptions = 0x883ac0;
		constexpr auto get_HasMenuOptions = 0x884ac0;
		constexpr auto OnRpcMessage = 0x8841d0;
		constexpr auto HitNotify = 0x883e50;
		constexpr auto ClientInit = 0x883650;
		constexpr auto DisplayHealthInfo = 0x5152d0;
		constexpr auto GetEyeTransform = 0x883a00;
		constexpr auto OnLifeStateChanged = 0x8841a0;
		constexpr auto GetPickupCount = 0x883e30;
		constexpr auto CanPickup = 0x8835b0;
		constexpr auto OnPickedUp = 0x2f4fd0;
		constexpr auto OnPickedUpPreItemMove = 0x2f4fd0;
		constexpr auto Menu_Pickup = 0x884040;
		constexpr auto Menu_Pickup_TimeStart = 0x2f4fd0;
		constexpr auto Menu_Pickup_If = 0x884020;
		constexpr auto BuildCost = 0x8834e0;
		constexpr auto IsDead = 0x883f70;
		constexpr auto IsAlive = 0x883f60;
		constexpr auto GetFaction = 0x883ab0;
		constexpr auto IsFriendly = 0x2f4190;
		constexpr auto get_SecondsSinceDeath = 0x884b90;
		constexpr auto get_healthFraction = 0x884bb0;
		constexpr auto ResetState = 0x884790;
		constexpr auto DestroyShared = 0x883690;
		constexpr auto GetThreatLevel = 0x2fcd90;
		constexpr auto PenetrationResistance = 0x884700;
		constexpr auto ScaleDamage = 0x884840;
		constexpr auto SkeletonLookup = 0x884980;
		constexpr auto Load = 0x883f80;
		constexpr auto get_health = 0x883e40;
		constexpr auto set_health = 0x884c00;
		constexpr auto Health = 0x883e40;
		constexpr auto MaxHealth = 0x305980;
		constexpr auto StartHealth = 0x305a60;
		constexpr auto StartMaxHealth = 0x884a30;
		constexpr auto SetMaxHealth = 0x8848f0;
		constexpr auto DoHitNotify = 0x8836a0;
		constexpr auto OnAttacked = 0x884080;
		constexpr auto ctor = 0x884a50;
	};

	namespace InputState {
		constexpr auto current = 0x10;
		constexpr auto previous = 0x18;
		constexpr auto SwallowedButtons = 0x20;

		constexpr auto IsDown = 0x964170;
		constexpr auto WasDown = 0x964240;
		constexpr auto IsAnyDown = 0x964140;
		constexpr auto WasJustPressed = 0x964260;
		constexpr auto WasJustReleased = 0x9642a0;
		constexpr auto SwallowButton = 0x964230;
		constexpr auto AimAngle = 0x963f80;
		constexpr auto MouseDelta = 0x9641a0;
		constexpr auto Flip = 0x964070;
		constexpr auto Clear = 0x964040;
		constexpr auto ctor = 0x9642e0;
	};

	namespace InputMessage {
		constexpr auto ShouldPool = 0x10;
		constexpr auto _disposed = 0x11;
		constexpr auto buttons = 0x14;
		constexpr auto aimAngles = 0x18;
		constexpr auto mouseDelta = 0x24;

		constexpr auto ResetToPool = 0x1df9370;
		constexpr auto Dispose = 0x1df9070;
		constexpr auto EnterPool = 0xb5a2d0;
		constexpr auto LeavePool = 0xb5a300;
		constexpr auto CopyTo = 0x1df80d0;
		constexpr auto Copy = 0x1df8110;
		constexpr auto Deserialize = 0x1df87a0;
		constexpr auto DeserializeLengthDelimited = 0x1df8430;
		constexpr auto DeserializeLength = 0x1df84b0;
		constexpr auto FromProto = 0x1df90f0;
		constexpr auto WriteToStream = 0x1df9c40;
		constexpr auto WriteToStreamDelta = 0x1df9c60;
		constexpr auto ReadFromStream = 0x1df92b0;
		constexpr auto SerializeDelta = 0x1df9410;
		constexpr auto Serialize = 0x1df99d0;
		constexpr auto ToProtoBytes = 0x1df9c30;
		constexpr auto ToProto = 0x1df9c40;
		constexpr auto SerializeToBytes = 0x1df98c0;
		constexpr auto SerializeLengthDelimited = 0x1df9810;
		constexpr auto ctor = 0xb5ab90;
	};

	namespace BaseMountable {
		constexpr auto __menuOption_Menu_Mount = 0x238;
		constexpr auto eyePositionOverride = 0x290;
		constexpr auto eyeCenterOverride = 0x298;
		constexpr auto pitchClamp = 0x2a0;
		constexpr auto yawClamp = 0x2a8;
		constexpr auto canWieldItems = 0x2b0;
		constexpr auto relativeViewAngles = 0x2b1;
		constexpr auto mountAnchor = 0x2b8;
		constexpr auto mountPose = 0x2c0;
		constexpr auto maxMountDistance = 0x2c4;
		constexpr auto dismountPositions = 0x2c8;
		constexpr auto checkPlayerLosOnMount = 0x2d0;
		constexpr auto disableMeshCullingForPlayers = 0x2d1;
		constexpr auto allowHeadLook = 0x2d2;
		constexpr auto modifiesPlayerCollider = 0x2d3;
		constexpr auto customPlayerCollider = 0x2d4;
		constexpr auto mountSoundDef = 0x2e8;
		constexpr auto swapSoundDef = 0x2f0;
		constexpr auto dismountSoundDef = 0x2f8;
		constexpr auto mountTimeStatType = 0x300;
		constexpr auto allowedGestures = 0x304;
		constexpr auto canDrinkWhileMounted = 0x308;
		constexpr auto allowSleeperMounting = 0x309;
		constexpr auto animateClothInLocalSpace = 0x30a;
		constexpr auto MountedCameraMode = 0x30c;
		constexpr auto isMobile = 0x310;
		constexpr auto SideLeanAmount = 0x314;

		constexpr auto GetMenuOptions = 0x2fca80;
		constexpr auto get_HasMenuOptions = 0x2feb10;
		constexpr auto OnRpcMessage = 0x2fd8b0;
		constexpr auto CanHoldItems = 0x2fbfb0;
		constexpr auto GetMountedCameraMode = 0x2fcdf0;
		constexpr auto DirectlyMountable = 0x2f6d70;
		constexpr auto GetEyeOverride = 0x2fc9f0;
		constexpr auto GetMountedBodyAngles = 0x2fcda0;
		constexpr auto ModifiesThirdPersonCamera = 0x2f4190;
		constexpr auto GetPitchClamp = 0x2fcfd0;
		constexpr auto GetYawClamp = 0x2fd000;
		constexpr auto IsMounted = 0x2fd0a0;
		constexpr auto EyePositionForPlayer = 0x2fc670;
		constexpr auto EyeCenterForPlayer = 0x2fc570;
		constexpr auto WaterFactorForPlayer = 0x2fe9a0;
		constexpr auto MaxVelocity = 0x2fd1e0;
		constexpr auto PlayerIsMounted = 0x2fdeb0;
		constexpr auto OnClientInput = 0x2f4fd0;
		constexpr auto ForceUpdatePlayerModel = 0x2f4190;
		constexpr auto UpdatePlayerModel = 0x2fe3b0;
		constexpr auto ProcessPlayerModel = 0x2f4fd0;
		constexpr auto SuppressHandsAnimationLayer = 0x2f4190;
		constexpr auto GetAnimationOverride = 0x2fc9e0;
		constexpr auto GetSpineLookAtWeight = 0x2fcff0;
		constexpr auto GetMountedAnimationSpeed = 0x2fcd90;
		constexpr auto get_DisableLegsMeshAtExtremeViewAnglesInFirstPersonWithEyes = 0x2f6d70;
		constexpr auto get_FirstPersonWithArmsEyesLerp = 0x2feb00;
		constexpr auto ModifyThirdPersonEyeOffset = 0x2fd3a0;
		constexpr auto LockThirdPersonOffset = 0x2fd170;
		constexpr auto LocalPlayerIsMounted = 0x2fd0b0;
		constexpr auto VehicleParent = 0x2fe910;
		constexpr auto get_IsSummerDlcVehicle = 0x2f4190;
		constexpr auto IsInstrument = 0x2f4190;
		constexpr auto UpdatePlayerRotation = 0x2fe860;
		constexpr auto SetNetworkPosition = 0x2fe380;
		constexpr auto UpdatePlayerPosition = 0x2fe6f0;
		constexpr auto GetMountedRotation = 0x2fcec0;
		constexpr auto GetMountedPosition = 0x2fce00;
		constexpr auto PlayerMounted = 0x2fdf50;
		constexpr auto PlayerDismounted = 0x2fd9d0;
		constexpr auto ClientOnPlayerDismounted = 0x2fbfc0;
		constexpr auto ClientOnPlayerMounted = 0x2fc060;
		constexpr auto OverrideViewAngles = 0x2fd9a0;
		constexpr auto DoPlayerMovement = 0x2fc240;
		constexpr auto HoldToDismount = 0x2fd020;
		constexpr auto ClientRequestDismount = 0x2fc130;
		constexpr auto Menu_Mount = 0x2fd330;
		constexpr auto Menu_Mount_ShowIf = 0x2fd290;
		constexpr auto MountMenuVisible = 0x2fd3c0;
		constexpr auto NearMountPoint = 0x2fd450;
		constexpr auto ConvertVector = 0x2fc170;
		constexpr auto get_BlocksDoors = 0x2f6d70;
		constexpr auto ctor = 0x2fea50;
		constexpr auto DoPlayerMovementb__77_0 = 0x2fc130;
	};

	namespace TOD_Sky {
		constexpr auto ColorSpace = 0x18;
		constexpr auto ColorRange = 0x1c;
		constexpr auto ColorOutput = 0x20;
		constexpr auto SkyQuality = 0x24;
		constexpr auto CloudQuality = 0x28;
		constexpr auto MeshQuality = 0x2c;
		constexpr auto StarQuality = 0x30;
		constexpr auto Cycle = 0x38;
		constexpr auto World = 0x40;
		constexpr auto Atmosphere = 0x48;
		constexpr auto Day = 0x50;
		constexpr auto Night = 0x58;
		constexpr auto Sun = 0x60;
		constexpr auto Moon = 0x68;
		constexpr auto Stars = 0x70;
		constexpr auto Clouds = 0x78;
		constexpr auto Light = 0x80;
		constexpr auto Fog = 0x88;
		constexpr auto Ambient = 0x90;
		constexpr auto Reflection = 0x98;
		constexpr auto Initializedk__BackingField = 0xa0;
		constexpr auto Componentsk__BackingField = 0xa8;
		constexpr auto Resourcesk__BackingField = 0xb0;
		constexpr auto IsDayk__BackingField = 0xb8;
		constexpr auto IsNightk__BackingField = 0xb9;
		constexpr auto LerpValuek__BackingField = 0xbc;
		constexpr auto SunZenithk__BackingField = 0xc0;
		constexpr auto SunAltitudek__BackingField = 0xc4;
		constexpr auto SunAzimuthk__BackingField = 0xc8;
		constexpr auto MoonZenithk__BackingField = 0xcc;
		constexpr auto MoonAltitudek__BackingField = 0xd0;
		constexpr auto MoonAzimuthk__BackingField = 0xd4;
		constexpr auto SunsetTimek__BackingField = 0xd8;
		constexpr auto SunriseTimek__BackingField = 0xdc;
		constexpr auto LocalSiderealTimek__BackingField = 0xe0;
		constexpr auto SunVisibilityk__BackingField = 0xe4;
		constexpr auto MoonVisibilityk__BackingField = 0xe8;
		constexpr auto SunDirectionk__BackingField = 0xec;
		constexpr auto MoonDirectionk__BackingField = 0xf8;
		constexpr auto LightDirectionk__BackingField = 0x104;
		constexpr auto LocalSunDirectionk__BackingField = 0x110;
		constexpr auto LocalMoonDirectionk__BackingField = 0x11c;
		constexpr auto LocalLightDirectionk__BackingField = 0x128;
		constexpr auto SunLightColork__BackingField = 0x134;
		constexpr auto MoonLightColork__BackingField = 0x144;
		constexpr auto SunRayColork__BackingField = 0x154;
		constexpr auto MoonRayColork__BackingField = 0x164;
		constexpr auto SunSkyColork__BackingField = 0x174;
		constexpr auto MoonSkyColork__BackingField = 0x184;
		constexpr auto SunMeshColork__BackingField = 0x194;
		constexpr auto MoonMeshColork__BackingField = 0x1a4;
		constexpr auto SunCloudColork__BackingField = 0x1b4;
		constexpr auto MoonCloudColork__BackingField = 0x1c4;
		constexpr auto FogColork__BackingField = 0x1d4;
		constexpr auto GroundColork__BackingField = 0x1e4;
		constexpr auto AmbientColork__BackingField = 0x1f4;
		constexpr auto MoonHaloColork__BackingField = 0x204;
		constexpr auto ReflectionCur = 0x218;
		constexpr auto ReflectionSrc = 0x220;
		constexpr auto ReflectionDst = 0x228;
		constexpr auto ReflectionResolution = 0x8;
		constexpr auto ReflectionUpdateInterval = 0xc;
		constexpr auto ReflectionTimeSlicing = 0x10;
		constexpr auto timeSinceLightUpdate = 0x230;
		constexpr auto timeSinceAmbientUpdate = 0x234;
		constexpr auto timeSinceReflectionUpdate = 0x238;
		constexpr auto kBetaMie = 0x23c;
		constexpr auto kSun = 0x248;
		constexpr auto k4PI = 0x258;
		constexpr auto kRadius = 0x268;
		constexpr auto kScale = 0x278;

		constexpr auto get_Instances = 0x129f3f0;
		constexpr auto get_Instance = 0x129f320;
		constexpr auto get_Initialized = 0xc999c0;
		constexpr auto set_Initialized = 0xc999d0;
		constexpr auto get_Headless = 0x129f300;
		constexpr auto get_Components = 0x907990;
		constexpr auto set_Components = 0xc38f90;
		constexpr auto get_Resources = 0x2ff250;
		constexpr auto set_Resources = 0x2ff330;
		constexpr auto get_IsDay = 0x129f450;
		constexpr auto set_IsDay = 0x129f820;
		constexpr auto get_IsNight = 0x129f460;
		constexpr auto set_IsNight = 0x129f830;
		constexpr auto get_Radius = 0x129f700;
		constexpr auto get_Diameter = 0x129f2a0;
		constexpr auto get_LerpValue = 0x945060;
		constexpr auto set_LerpValue = 0x945220;
		constexpr auto get_SunZenith = 0x129f7c0;
		constexpr auto set_SunZenith = 0x129fa20;
		constexpr auto get_SunAltitude = 0x129f740;
		constexpr auto set_SunAltitude = 0x129f980;
		constexpr auto get_SunAzimuth = 0x129f750;
		constexpr auto set_SunAzimuth = 0x129f990;
		constexpr auto get_MoonZenith = 0x129f690;
		constexpr auto set_MoonZenith = 0x129f970;
		constexpr auto get_MoonAltitude = 0x129f5f0;
		constexpr auto set_MoonAltitude = 0x129f8c0;
		constexpr auto get_MoonAzimuth = 0x129f600;
		constexpr auto set_MoonAzimuth = 0x129f8d0;
		constexpr auto get_SunsetTime = 0x129f7e0;
		constexpr auto set_SunsetTime = 0x129fa40;
		constexpr auto get_SunriseTime = 0x129f7d0;
		constexpr auto set_SunriseTime = 0x129fa30;
		constexpr auto get_LocalSiderealTime = 0x10a5030;
		constexpr auto set_LocalSiderealTime = 0x10a5830;
		constexpr auto get_LightZenith = 0x129f510;
		constexpr auto get_LightIntensity = 0x129f4e0;
		constexpr auto get_SunVisibility = 0x129f7b0;
		constexpr auto set_SunVisibility = 0x129fa10;
		constexpr auto get_MoonVisibility = 0x10a4e80;
		constexpr auto set_MoonVisibility = 0x129f960;
		constexpr auto get_SunDirection = 0x129f760;
		constexpr auto set_SunDirection = 0x129f9b0;
		constexpr auto get_MoonDirection = 0x129f620;
		constexpr auto set_MoonDirection = 0x129f8f0;
		constexpr auto get_LightDirection = 0x129f4c0;
		constexpr auto set_LightDirection = 0x129f840;
		constexpr auto get_LocalSunDirection = 0x129f5d0;
		constexpr auto set_LocalSunDirection = 0x129f8a0;
		constexpr auto get_LocalMoonDirection = 0x129f5b0;
		constexpr auto set_LocalMoonDirection = 0x129f880;
		constexpr auto get_LocalLightDirection = 0x129f590;
		constexpr auto set_LocalLightDirection = 0x129f860;
		constexpr auto get_SunLightColor = 0x129f780;
		constexpr auto set_SunLightColor = 0x129f9d0;
		constexpr auto get_MoonLightColor = 0x129f650;
		constexpr auto set_MoonLightColor = 0x129f920;
		constexpr auto get_LightColor = 0x129f470;
		constexpr auto get_SunRayColor = 0x129f7a0;
		constexpr auto set_SunRayColor = 0x129f9f0;
		constexpr auto get_MoonRayColor = 0x129f670;
		constexpr auto set_MoonRayColor = 0x129f940;
		constexpr auto get_SunSkyColor = 0xe96ff0;
		constexpr auto set_SunSkyColor = 0x129fa00;
		constexpr auto get_MoonSkyColor = 0x129f680;
		constexpr auto set_MoonSkyColor = 0x129f950;
		constexpr auto get_SunMeshColor = 0x129f790;
		constexpr auto set_SunMeshColor = 0x129f9e0;
		constexpr auto get_MoonMeshColor = 0x129f660;
		constexpr auto set_MoonMeshColor = 0x129f930;
		constexpr auto get_SunCloudColor = 0xc48670;
		constexpr auto set_SunCloudColor = 0x129f9a0;
		constexpr auto get_MoonCloudColor = 0x129f610;
		constexpr auto set_MoonCloudColor = 0x129f8e0;
		constexpr auto get_FogColor = 0x129f2e0;
		constexpr auto set_FogColor = 0x129f800;
		constexpr auto get_GroundColor = 0x129f2f0;
		constexpr auto set_GroundColor = 0x129f810;
		constexpr auto get_AmbientColor = 0x129f290;
		constexpr auto set_AmbientColor = 0x129f7f0;
		constexpr auto get_MoonHaloColor = 0x129f640;
		constexpr auto set_MoonHaloColor = 0x129f910;
		constexpr auto get_Probe = 0x129f6e0;
		constexpr auto get_ProbeInstance = 0x129f6c0;
		constexpr auto get_ProbeEx = 0x129f6a0;
		constexpr auto OrbitalToUnity = 0x12974c0;
		constexpr auto OrbitalToLocal = 0x1297400;
		constexpr auto SampleAtmosphere = 0x1298be0;
		constexpr auto RenderToSphericalHarmonics = 0x1298a80;
		constexpr auto RenderToCubemap = 0x12975d0;
		constexpr auto RenderToProbe = 0x1297710;
		constexpr auto ReflectionIsUpdating = 0x1297590;
		constexpr auto UpdateProbeBlending = 0x129d0e0;
		constexpr auto UpdateProbeProperties = 0x129d1d0;
		constexpr auto SampleFogColor = 0x1298f60;
		constexpr auto SampleSkyColor = 0x1299210;
		constexpr auto SampleEquatorColor = 0x1298ea0;
		constexpr auto UpdateFog = 0x129d060;
		constexpr auto UpdateAmbient = 0x129a730;
		constexpr auto UpdateReflection = 0x129dac0;
		constexpr auto DelayReflectionUpdate = 0x1296d60;
		constexpr auto LoadParameters = 0x1297150;
		constexpr auto SaveParameters = 0x1299320;
		constexpr auto UpdateQualitySettings = 0x129d4b0;
		constexpr auto UpdateRenderSettings = 0x129dbc0;
		constexpr auto UpdateShaderKeywords = 0x129e160;
		constexpr auto UpdateShaderProperties = 0x129e360;
		constexpr auto ShaderScale = 0x1299890;
		constexpr auto ShaderMiePhase = 0x1299570;
		constexpr auto ShaderRayleighPhase = 0x1299870;
		constexpr auto ShaderNightSkyColor = 0x1299780;
		constexpr auto ShaderMoonHaloColor = 0x1299640;
		constexpr auto TOD_HDR2LDR = 0x129a4e0;
		constexpr auto TOD_GAMMA2LINEAR = 0x129a480;
		constexpr auto TOD_LINEAR2GAMMA = 0x129a660;
		constexpr auto ShaderScatteringColor = 0x1299940;
		constexpr auto Initialize = 0x1296d70;
		constexpr auto Cleanup = 0x1296bb0;
		constexpr auto OnEnable = 0x12973b0;
		constexpr auto OnDisable = 0x12973a0;
		constexpr auto LateUpdate = 0x1296e70;
		constexpr auto OnValidate = 0x12973c0;
		constexpr auto UpdateScattering = 0x129dfb0;
		constexpr auto UpdateCelestials = 0x129aea0;
		constexpr auto ctor = 0x129f180;
		constexpr auto cctor = 0x129f0e0;
	};

	namespace UnityEngine_Random {

		constexpr auto InitState = 0x18aaf20;
		constexpr auto get_state = 0x18ab1f0;
		constexpr auto set_state = 0x18ab2a0;
		constexpr auto Range = 0x18aafa0;
		constexpr auto RandomRangeInt = 0x18aaf60;
		constexpr auto get_value = 0x18ab230;
		constexpr auto get_insideUnitSphere = 0x18ab070;
		constexpr auto GetRandomUnitCircle = 0x18aaee0;
		constexpr auto get_insideUnitCircle = 0x18aaff0;
		constexpr auto get_onUnitSphere = 0x18ab0f0;
		constexpr auto get_rotation = 0x18ab170;
		constexpr auto RandomRange = 0x18aaf60;
		constexpr auto ColorHSV = 0x18aad20;
		constexpr auto get_state_Injected = 0x18ab1b0;
		constexpr auto set_state_Injected = 0x18ab260;
		constexpr auto get_insideUnitSphere_Injected = 0x18ab030;
		constexpr auto get_onUnitSphere_Injected = 0x18ab0b0;
		constexpr auto get_rotation_Injected = 0x18ab130;
	};

	namespace UnityEngine_PhysicsScene {
		constexpr auto m_Handle = 0x10;

		constexpr auto ToString = 0x233710;
		constexpr auto GetHashCode = 0x137570;
		constexpr auto Equals = 0x2331d0;
		constexpr auto Raycast = 0x2334a0;
		constexpr auto Internal_RaycastTest = 0x22069e0;
		constexpr auto Internal_Raycast = 0x2206ac0;
		constexpr auto Internal_RaycastNonAlloc = 0x2206900;
		constexpr auto Query_CapsuleCast = 0x22071f0;
		constexpr auto Internal_CapsuleCast = 0x22066e0;
		constexpr auto CapsuleCast = 0x233120;
		constexpr auto Internal_CapsuleCastNonAlloc = 0x2206640;
		constexpr auto OverlapCapsuleNonAlloc_Internal = 0x2206f10;
		constexpr auto OverlapCapsule = 0x233300;
		constexpr auto Query_SphereCast = 0x2207300;
		constexpr auto Internal_SphereCast = 0x2206c30;
		constexpr auto SphereCast = 0x233590;
		constexpr auto Internal_SphereCastNonAlloc = 0x2206ba0;
		constexpr auto OverlapSphereNonAlloc_Internal = 0x2207000;
		constexpr auto OverlapSphere = 0x2333a0;
		constexpr auto Query_BoxCast = 0x22070e0;
		constexpr auto Internal_BoxCast = 0x2206410;
		constexpr auto BoxCast = 0x232f30;
		constexpr auto OverlapBoxNonAlloc_Internal = 0x2206e20;
		constexpr auto OverlapBox = 0x233250;
		constexpr auto Internal_RaycastTest_Injected = 0x2206970;
		constexpr auto Internal_Raycast_Injected = 0x2206a50;
		constexpr auto Internal_RaycastNonAlloc_Injected = 0x2206890;
		constexpr auto Query_CapsuleCast_Injected = 0x2207180;
		constexpr auto Internal_CapsuleCastNonAlloc_Injected = 0x22065d0;
		constexpr auto OverlapCapsuleNonAlloc_Internal_Injected = 0x2206ea0;
		constexpr auto Query_SphereCast_Injected = 0x2207290;
		constexpr auto Internal_SphereCastNonAlloc_Injected = 0x2206b30;
		constexpr auto OverlapSphereNonAlloc_Internal_Injected = 0x2206f90;
		constexpr auto Query_BoxCast_Injected = 0x2207070;
		constexpr auto OverlapBoxNonAlloc_Internal_Injected = 0x2206db0;
	};

	namespace UnityEngine_GameObjectEx {

		constexpr auto ToBaseEntity = 0x53ac50;
		constexpr auto IsOnLayer = 0x53ab00;
		constexpr auto GetEntityFromRegistry = 0x53a9d0;
		constexpr auto GetEntityFromComponent = 0x53a8d0;
		constexpr auto SetHierarchyGroup = 0x53ab90;
	};

	namespace BaseHelicopter {
		constexpr auto weakspots = 0x238;
		constexpr auto rotorPivot = 0x240;
		constexpr auto mainRotor = 0x248;
		constexpr auto mainRotor_blades = 0x250;
		constexpr auto mainRotor_blur = 0x258;
		constexpr auto tailRotor = 0x260;
		constexpr auto tailRotor_blades = 0x268;
		constexpr auto tailRotor_blur = 0x270;
		constexpr auto rocket_tube_left = 0x278;
		constexpr auto rocket_tube_right = 0x280;
		constexpr auto left_gun_yaw = 0x288;
		constexpr auto left_gun_pitch = 0x290;
		constexpr auto left_gun_muzzle = 0x298;
		constexpr auto right_gun_yaw = 0x2a0;
		constexpr auto right_gun_pitch = 0x2a8;
		constexpr auto right_gun_muzzle = 0x2b0;
		constexpr auto spotlight_rotation = 0x2b8;
		constexpr auto rocket_fire_effect = 0x2c0;
		constexpr auto gun_fire_effect = 0x2c8;
		constexpr auto bulletEffect = 0x2d0;
		constexpr auto explosionEffect = 0x2d8;
		constexpr auto fireBall = 0x2e0;
		constexpr auto crateToDrop = 0x2e8;
		constexpr auto maxCratesToSpawn = 0x2f0;
		constexpr auto bulletSpeed = 0x2f4;
		constexpr auto bulletDamage = 0x2f8;
		constexpr auto servergibs = 0x300;
		constexpr auto debrisFieldMarker = 0x308;
		constexpr auto rotorWashSoundDef = 0x310;
		constexpr auto _rotorWashSound = 0x318;
		constexpr auto flightEngineSoundDef = 0x320;
		constexpr auto flightThwopsSoundDef = 0x328;
		constexpr auto flightEngineSound = 0x330;
		constexpr auto flightThwopsSound = 0x338;
		constexpr auto flightEngineGainMod = 0x340;
		constexpr auto flightThwopsGainMod = 0x348;
		constexpr auto rotorGainModSmoothing = 0x350;
		constexpr auto engineGainMin = 0x354;
		constexpr auto engineGainMax = 0x358;
		constexpr auto thwopGainMin = 0x35c;
		constexpr auto thwopGainMax = 0x360;
		constexpr auto spotlightJitterAmount = 0x364;
		constexpr auto spotlightJitterSpeed = 0x368;
		constexpr auto nightLights = 0x370;
		constexpr auto spotlightTarget = 0x378;
		constexpr auto engineSpeed = 0x384;
		constexpr auto targetEngineSpeed = 0x388;
		constexpr auto blur_rotationScale = 0x38c;
		constexpr auto _rotorWashParticles = 0x390;
		constexpr auto myAI = 0x398;
		constexpr auto mapMarkerEntityPrefab = 0x3a0;
		constexpr auto client_rotorPivotIdeal = 0x3a8;
		constexpr auto nightLightsOn = 0x3b8;

		constexpr auto OnRpcMessage = 0x89e960;
		constexpr auto InitalizeWeakspots = 0x89e3c0;
		constexpr auto MaxVelocity = 0x3217b0;
		constexpr auto InitShared = 0x89e330;
		constexpr auto Load = 0x89e6a0;
		constexpr auto ClientInit = 0x89dd30;
		constexpr auto InitializeClientsideEffects = 0x89e440;
		constexpr auto DoClientDestroy = 0x89dd70;
		constexpr auto SetLights = 0x89edb0;
		constexpr auto Update = 0x89f830;
		constexpr auto UpdateEffects = 0x89eed0;
		constexpr auto UpdateRotorWashPosition = 0x89f6f0;
		constexpr auto ToggleRotorWash = 0x89ee50;
		constexpr auto UpdateRotorVisibility = 0x89f660;
		constexpr auto FireGun = 0x89de50;
		constexpr auto ctor = 0x89ffc0;
	};

	namespace HitInfo {
		constexpr auto Initiator = 0x10;
		constexpr auto WeaponPrefab = 0x18;
		constexpr auto Weapon = 0x20;
		constexpr auto DoHitEffects = 0x28;
		constexpr auto DoDecals = 0x29;
		constexpr auto IsPredicting = 0x2a;
		constexpr auto UseProtection = 0x2b;
		constexpr auto Predicted = 0x30;
		constexpr auto DidHit = 0x38;
		constexpr auto HitEntity = 0x40;
		constexpr auto HitBone = 0x48;
		constexpr auto HitPart = 0x4c;
		constexpr auto HitMaterial = 0x50;
		constexpr auto HitPositionWorld = 0x54;
		constexpr auto HitPositionLocal = 0x60;
		constexpr auto HitNormalWorld = 0x6c;
		constexpr auto HitNormalLocal = 0x78;
		constexpr auto PointStart = 0x84;
		constexpr auto PointEnd = 0x90;
		constexpr auto ProjectileID = 0x9c;
		constexpr auto ProjectileHits = 0xa0;
		constexpr auto ProjectileDistance = 0xa4;
		constexpr auto ProjectileIntegrity = 0xa8;
		constexpr auto ProjectileTravelTime = 0xac;
		constexpr auto ProjectileTrajectoryMismatch = 0xb0;
		constexpr auto ProjectileVelocity = 0xb4;
		constexpr auto ProjectilePrefab = 0xc0;
		constexpr auto material = 0xc8;
		constexpr auto damageProperties = 0xd0;
		constexpr auto damageTypes = 0xd8;
		constexpr auto CanGather = 0xe0;
		constexpr auto DidGather = 0xe1;
		constexpr auto gatherScale = 0xe4;

		constexpr auto IsProjectile = 0x6e3190;
		constexpr auto get_InitiatorPlayer = 0x6e39e0;
		constexpr auto get_attackNormal = 0x6e3a70;
		constexpr auto get_hasDamage = 0x6e3f70;
		constexpr auto ctor = 0x6e3800;
		constexpr auto LoadFromAttack = 0x6e31a0;
		constexpr auto get_isHeadshot = 0x6e3fa0;
		constexpr auto get_bonePhrase = 0x6e3e10;
		constexpr auto get_boneName = 0x6e3c80;
		constexpr auto get_boneArea = 0x6e3b70;
		constexpr auto PositionOnRay = 0x6e33a0;
		constexpr auto HitPositionOnRay = 0x6e2f60;
		constexpr auto IsNaNOrInfinity = 0x6e2fb0;
	};

	namespace System_Number {

		constexpr auto NumberBufferToDecimal = 0x162c060;
		constexpr auto NumberBufferToDouble = 0x162c070;
		constexpr auto FormatDecimal = 0x162b580;
		constexpr auto FormatDouble = 0x162b6a0;
		constexpr auto FormatInt32 = 0x162b720;
		constexpr auto FormatUInt32 = 0x162ba80;
		constexpr auto FormatInt64 = 0x162b890;
		constexpr auto FormatUInt64 = 0x162bbe0;
		constexpr auto FormatSingle = 0x162ba00;
		constexpr auto HexNumberToInt32 = 0x162bd40;
		constexpr auto HexNumberToInt64 = 0x162bdc0;
		constexpr auto HexNumberToUInt32 = 0x162be80;
		constexpr auto HexNumberToUInt64 = 0x162bf00;
		constexpr auto IsWhite = 0x162bf90;
		constexpr auto NumberToInt32 = 0x162c080;
		constexpr auto NumberToInt64 = 0x162c0e0;
		constexpr auto NumberToUInt32 = 0x162c160;
		constexpr auto NumberToUInt64 = 0x162c1c0;
		constexpr auto MatchChars = 0x162bff0;
		constexpr auto ParseDecimal = 0x162c230;
		constexpr auto ParseDouble = 0x162c3a0;
		constexpr auto ParseInt32 = 0x162c650;
		constexpr auto ParseInt64 = 0x162c8a0;
		constexpr auto ParseNumber = 0x162cb10;
		constexpr auto ParseSingle = 0x162d600;
		constexpr auto ParseUInt32 = 0x162d920;
		constexpr auto ParseUInt64 = 0x162db60;
		constexpr auto StringToNumber = 0x162ddc0;
		constexpr auto TrailingZeros = 0x162df00;
		constexpr auto TryParseDecimal = 0x162df60;
		constexpr auto TryParseDouble = 0x162e0e0;
		constexpr auto TryParseInt32 = 0x162e260;
		constexpr auto TryParseInt64 = 0x162e4a0;
		constexpr auto TryParseSingle = 0x162e670;
		constexpr auto TryParseUInt32 = 0x162e820;
		constexpr auto TryParseUInt64 = 0x162ea60;
		constexpr auto TryStringToNumber = 0x162ed80;
	};

	namespace System_Globalization_NumberFormatInfo {
		constexpr auto numberGroupSizes = 0x10;
		constexpr auto currencyGroupSizes = 0x18;
		constexpr auto percentGroupSizes = 0x20;
		constexpr auto positiveSign = 0x28;
		constexpr auto negativeSign = 0x30;
		constexpr auto numberDecimalSeparator = 0x38;
		constexpr auto numberGroupSeparator = 0x40;
		constexpr auto currencyGroupSeparator = 0x48;
		constexpr auto currencyDecimalSeparator = 0x50;
		constexpr auto currencySymbol = 0x58;
		constexpr auto ansiCurrencySymbol = 0x60;
		constexpr auto nanSymbol = 0x68;
		constexpr auto positiveInfinitySymbol = 0x70;
		constexpr auto negativeInfinitySymbol = 0x78;
		constexpr auto percentDecimalSeparator = 0x80;
		constexpr auto percentGroupSeparator = 0x88;
		constexpr auto percentSymbol = 0x90;
		constexpr auto perMilleSymbol = 0x98;
		constexpr auto nativeDigits = 0xa0;
		constexpr auto m_dataItem = 0xa8;
		constexpr auto numberDecimalDigits = 0xac;
		constexpr auto currencyDecimalDigits = 0xb0;
		constexpr auto currencyPositivePattern = 0xb4;
		constexpr auto currencyNegativePattern = 0xb8;
		constexpr auto numberNegativePattern = 0xbc;
		constexpr auto percentPositivePattern = 0xc0;
		constexpr auto percentNegativePattern = 0xc4;
		constexpr auto percentDecimalDigits = 0xc8;
		constexpr auto digitSubstitution = 0xcc;
		constexpr auto isReadOnly = 0xd0;
		constexpr auto m_useUserOverride = 0xd1;
		constexpr auto m_isInvariant = 0xd2;
		constexpr auto validForParseAsNumber = 0xd3;
		constexpr auto validForParseAsCurrency = 0xd4;

		constexpr auto ctor = 0x1312420;
		constexpr auto OnSerializing = 0x1311a80;
		constexpr auto OnDeserializing = 0x2f4fd0;
		constexpr auto OnDeserialized = 0x2f4fd0;
		constexpr auto get_InvariantInfo = 0x13125b0;
		constexpr auto GetInstance = 0x1311800;
		constexpr auto Clone = 0x1311700;
		constexpr auto get_CurrencyDecimalDigits = 0x32ceb0;
		constexpr auto get_CurrencyDecimalSeparator = 0x58fbe0;
		constexpr auto get_IsReadOnly = 0xd3cbd0;
		constexpr auto get_CurrencyGroupSizes = 0x1312430;
		constexpr auto get_NumberGroupSizes = 0x13126c0;
		constexpr auto get_PercentGroupSizes = 0x1312740;
		constexpr auto get_CurrencyGroupSeparator = 0x845ce0;
		constexpr auto get_CurrencySymbol = 0x5b2960;
		constexpr auto get_CurrentInfo = 0x13124b0;
		constexpr auto get_NaNSymbol = 0x2f8bc0;
		constexpr auto get_CurrencyNegativePattern = 0x10cd490;
		constexpr auto get_NumberNegativePattern = 0x10cd480;
		constexpr auto get_PercentPositivePattern = 0x1111bc0;
		constexpr auto get_PercentNegativePattern = 0xa85860;
		constexpr auto get_NegativeInfinitySymbol = 0x500f90;
		constexpr auto get_NegativeSign = 0x32c810;
		constexpr auto get_NumberDecimalDigits = 0x2ff0d0;
		constexpr auto get_NumberDecimalSeparator = 0x661600;
		constexpr auto get_NumberGroupSeparator = 0x5a57b0;
		constexpr auto get_CurrencyPositivePattern = 0x10cd4c0;
		constexpr auto get_PositiveInfinitySymbol = 0x500fa0;
		constexpr auto get_PositiveSign = 0x830590;
		constexpr auto get_PercentDecimalDigits = 0xa85880;
		constexpr auto get_PercentDecimalSeparator = 0x500fb0;
		constexpr auto get_PercentGroupSeparator = 0x500f40;
		constexpr auto get_PercentSymbol = 0x2ff310;
		constexpr auto get_PerMilleSymbol = 0x2ff240;
		constexpr auto GetFormat = 0x1311770;
		constexpr auto ReadOnly = 0x1311b10;
		constexpr auto ValidateParseStyleInteger = 0x1311c90;
		constexpr auto ValidateParseStyleFloatingPoint = 0x1311bc0;
	};

	namespace UnityEngine_GL {

		constexpr auto Vertex3 = 0x17e9700;
		constexpr auto Vertex = 0x17e9760;
		constexpr auto TexCoord3 = 0x17e96a0;
		constexpr auto TexCoord2 = 0x17e9650;
		constexpr auto MultiTexCoord3 = 0x17e9580;
		constexpr auto MultiTexCoord2 = 0x17e9520;
		constexpr auto ImmediateColor = 0x17e9260;
		constexpr auto Color = 0x17e8f30;
		constexpr auto get_sRGBWrite = 0x17e97c0;
		constexpr auto set_sRGBWrite = 0x17e97f0;
		constexpr auto Flush = 0x17e8fc0;
		constexpr auto MultMatrix = 0x17e94e0;
		constexpr auto PushMatrix = 0x17e9620;
		constexpr auto PopMatrix = 0x17e95f0;
		constexpr auto LoadIdentity = 0x17e9390;
		constexpr auto LoadOrtho = 0x17e93c0;
		constexpr auto LoadPixelMatrix = 0x17e93f0;
		constexpr auto LoadProjectionMatrix = 0x17e9460;
		constexpr auto GetGPUProjectionMatrix = 0x17e91f0;
		constexpr auto GLLoadPixelMatrixScript = 0x17e9110;
		constexpr auto GLIssuePluginEvent = 0x17e90d0;
		constexpr auto IssuePluginEvent = 0x17e92e0;
		constexpr auto Begin = 0x17e8e40;
		constexpr auto End = 0x17e8f90;
		constexpr auto GLClear = 0x17e9060;
		constexpr auto Clear = 0x17e8ed0;
		constexpr auto ClearWithSkybox = 0x17e8e80;
		constexpr auto MultMatrix_Injected = 0x17e94a0;
		constexpr auto LoadProjectionMatrix_Injected = 0x17e9420;
		constexpr auto GetGPUProjectionMatrix_Injected = 0x17e9190;
		constexpr auto GLClear_Injected = 0x17e8ff0;
	};

	namespace UnityEngine_Material {

		constexpr auto CreateWithShader = 0x1897cb0;
		constexpr auto CreateWithMaterial = 0x1897c60;
		constexpr auto CreateWithString = 0x1897d00;
		constexpr auto ctor = 0x1899260;
		constexpr auto get_shader = 0x1899520;
		constexpr auto set_shader = 0x18996b0;
		constexpr auto get_color = 0x18992f0;
		constexpr auto set_color = 0x1899560;
		constexpr auto get_mainTexture = 0x1899400;
		constexpr auto GetFirstPropertyNameIdByAttribute = 0x1897fd0;
		constexpr auto HasProperty = 0x18984e0;
		constexpr auto get_renderQueue = 0x18994e0;
		constexpr auto set_renderQueue = 0x1899670;
		constexpr auto EnableKeyword = 0x1897d90;
		constexpr auto DisableKeyword = 0x1897d40;
		constexpr auto IsKeywordEnabled = 0x1898520;
		constexpr auto get_enableInstancing = 0x18993c0;
		constexpr auto set_enableInstancing = 0x1899620;
		constexpr auto get_passCount = 0x18994a0;
		constexpr auto GetShaderPassEnabled = 0x1898120;
		constexpr auto GetPassName = 0x18980a0;
		constexpr auto FindPass = 0x1897de0;
		constexpr auto SetOverrideTag = 0x1898cb0;
		constexpr auto GetTagImpl = 0x1898170;
		constexpr auto GetTag = 0x1898270;
		constexpr auto SetPass = 0x1898d10;
		constexpr auto CopyPropertiesFromMaterial = 0x1897c10;
		constexpr auto GetShaderKeywords = 0x18980e0;
		constexpr auto SetShaderKeywords = 0x1898d50;
		constexpr auto get_shaderKeywords = 0x18980e0;
		constexpr auto set_shaderKeywords = 0x1898d50;
		constexpr auto SetFloatImpl = 0x1898a00;
		constexpr auto SetColorImpl = 0x1898670;
		constexpr auto SetMatrixImpl = 0x1898b70;
		constexpr auto SetTextureImpl = 0x1898da0;
		constexpr auto SetBufferImpl = 0x1898570;
		constexpr auto GetFloatImpl = 0x1898010;
		constexpr auto GetColorImpl = 0x1897e80;
		constexpr auto GetTextureImpl = 0x18982e0;
		constexpr auto SetFloatArrayImpl = 0x1898770;
		constexpr auto SetTextureOffsetImpl = 0x1898e40;
		constexpr auto SetTextureScaleImpl = 0x1898f40;
		constexpr auto SetFloatArray = 0x18988d0;
		constexpr auto SetFloat = 0x1898a50;
		constexpr auto SetInt = 0x1898ab0;
		constexpr auto SetColor = 0x1898710;
		constexpr auto SetVector = 0x1899050;
		constexpr auto SetMatrix = 0x1898c30;
		constexpr auto SetTexture = 0x1898ff0;
		constexpr auto SetBuffer = 0x18985c0;
		constexpr auto GetFloat = 0x1898050;
		constexpr auto GetColor = 0x1897f50;
		constexpr auto GetVector = 0x1898370;
		constexpr auto GetTexture = 0x1898320;
		constexpr auto SetTextureOffset = 0x1898e90;
		constexpr auto SetTextureScale = 0x1898f90;
		constexpr auto SetColorImpl_Injected = 0x1898620;
		constexpr auto SetMatrixImpl_Injected = 0x1898b20;
		constexpr auto GetColorImpl_Injected = 0x1897e30;
		constexpr auto SetTextureOffsetImpl_Injected = 0x1898df0;
		constexpr auto SetTextureScaleImpl_Injected = 0x1898ef0;
	};

	namespace UnityEngine_Screen {

		constexpr auto get_width = 0x18e25a0;
		constexpr auto get_height = 0x18e2540;
		constexpr auto get_dpi = 0x18e24e0;
		constexpr auto get_currentResolution = 0x18e24a0;
		constexpr auto get_fullScreen = 0x18e2510;
		constexpr auto SetResolution = 0x18e23a0;
		constexpr auto get_resolutions = 0x18e2570;
		constexpr auto get_currentResolution_Injected = 0x18e2460;
	};

	namespace TOD_AtmosphereParameters {
		constexpr auto RayleighMultiplier = 0x10;
		constexpr auto MieMultiplier = 0x14;
		constexpr auto Brightness = 0x18;
		constexpr auto Contrast = 0x1c;
		constexpr auto Directionality = 0x20;
		constexpr auto Fogginess = 0x24;

		constexpr auto ctor = 0x110c560;
	};

	namespace TOD_MoonParameters {
		constexpr auto MeshSize = 0x10;
		constexpr auto MeshBrightness = 0x14;
		constexpr auto MeshContrast = 0x18;
		constexpr auto HaloSize = 0x1c;
		constexpr auto HaloBrightness = 0x20;
		constexpr auto Position = 0x24;

		constexpr auto ctor = 0x1110430;
	};

	namespace TOD_CloudParameters {
		constexpr auto Size = 0x10;
		constexpr auto Opacity = 0x14;
		constexpr auto Coverage = 0x18;
		constexpr auto Sharpness = 0x1c;
		constexpr auto Coloring = 0x20;
		constexpr auto Attenuation = 0x24;
		constexpr auto Saturation = 0x28;
		constexpr auto Scattering = 0x2c;
		constexpr auto Brightness = 0x30;

		constexpr auto ctor = 0x110d9f0;
	};

	namespace TOD_NightParameters {
		constexpr auto MoonColor = 0x10;
		constexpr auto LightColor = 0x18;
		constexpr auto RayColor = 0x20;
		constexpr auto SkyColor = 0x28;
		constexpr auto CloudColor = 0x30;
		constexpr auto FogColor = 0x38;
		constexpr auto AmbientColor = 0x40;
		constexpr auto LightIntensity = 0x48;
		constexpr auto ShadowStrength = 0x4c;
		constexpr auto AmbientMultiplier = 0x50;
		constexpr auto ReflectionMultiplier = 0x54;

		constexpr auto ctor = 0x1110470;
	};
}


namespace CO {
	constexpr auto IsDucked = O::BasePlayer::IsDucked;
	constexpr auto AssistPlayer = O::BasePlayer::Menu_AssistPlayer;
	constexpr auto SendProjectileAttack = O::BasePlayer::SendProjectileAttack;
	constexpr auto Play = O::ViewModel::Play;
	constexpr auto get_isHeadshot = O::HitInfo::get_isHeadshot;
	constexpr auto StartAttackCooldown = O::AttackEntity::StartAttackCooldown;
	constexpr auto GetJumpHeight = O::BasePlayer::GetJumpHeight; // public float GetJumpHeight() { }
	constexpr auto MathfMin = O::UnityEngine_Mathf::Min; // public static float Min(float a, float b) { }
	constexpr auto MathfAbs = O::UnityEngine_Mathf::Abs; // public static float Abs(float f) { }
	constexpr auto MathfMax = O::UnityEngine_Mathf::Max; // public static float Max(float a, float b) { }
	constexpr auto MathfCos = O::UnityEngine_Mathf::Cos; // public static float Cos(float f) { }
	constexpr auto MathfSin = O::UnityEngine_Mathf::Sin; // public static float Sin(float f) { }
	constexpr auto ProcessAttack = O::BaseMelee::ProcessAttack;
	constexpr auto CreateProjectile = O::BaseProjectile::CreateProjectile;
	constexpr auto KnockDoor = O::Door::Menu_KnockDoor;
	constexpr auto OpenDoor = O::Door::Menu_OpenDoor;
	constexpr auto OpenHatch = O::Door::Menu_ToggleHatch;
	constexpr auto set_timeScale = O::UnityEngine_Time::set_timeScale;
	constexpr auto CheckCapsule = O::UnityEngine_Physics::CheckCapsule;
	constexpr auto DoFixedUpdate = O::PlayerWalkMovement::DoFixedUpdate;
	constexpr auto SendSignalBroadcast = O::BaseEntity::SendSignalBroadcast;
	constexpr auto ClosestPoint = O::BaseEntity::ClosestPoint;
	constexpr auto CanHoldItems = O::BaseMountable::CanHoldItems;
	constexpr auto ServerRPC = O::BaseEntity::ServerRPC;
	constexpr auto LineOfSight = O::GamePhysics::LineOfSight;

	// script.json
	constexpr auto BaseNetworkable = 52119272; // BaseNetworkable_c*
	constexpr auto ConvarGraphics = 52110168; // ConVar_Graphics_c*
	constexpr auto HitTest = 52113104; // HitTest_c*
	constexpr auto ConvarAdmin = 52092664; // ConVar_Admin_c*

	// dump.cs
	constexpr auto EffectRun = 0x9C1160; // public static void Run(string strName, GameObject obj) { }
	constexpr auto IsUpgradeBlocked = 0x4EFB30; // private bool IsUpgradeBlocked() { }
	constexpr auto Magnitude2D = 0x1D5B1E0; // public static float Magnitude2D(Vector3 v) { }
	constexpr auto CanAffordUpgrade = 0x4ED660; // private bool CanAffordUpgrade(BuildingGrade.Enum iGrade, BasePlayer player) { }
	constexpr auto CanChangeToGrade = 0x4ED830; // private bool CanChangeToGrade(BuildingGrade.Enum iGrade, BasePlayer player) { }
	constexpr auto UpgradeToGrade = 0x4F0E10; // private void UpgradeToGrade(BuildingGrade.Enum i, BasePlayer player) { }
	constexpr auto IsBeingHacked = 0x4B34E0; // public bool IsBeingHacked() { }
	constexpr auto IsFullyHacked = 0x5A0910; // public bool IsFullyHacked() { }
	constexpr auto IsHidden = 0x68B510; // public bool IsHidden() { }
	constexpr auto StartCoroutine = 0x18A2A40; // public Coroutine StartCoroutine(IEnumerator routine) { }
}